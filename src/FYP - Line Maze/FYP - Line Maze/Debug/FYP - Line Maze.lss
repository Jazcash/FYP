
FYP - Line Maze.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00002760  00002814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002760  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ba  00800150  00800150  00002864  2**0
                  ALLOC
  3 .eeprom       00000014  00810000  00810000  00002864  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         00005ae4  00000000  00000000  00002878  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00007e2c  00000000  00000000  0000835c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000030  00000000  00000000  00010188  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000098  00000000  00000000  000101b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001858  00000000  00000000  00010250  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000004a4  00000000  00000000  00011aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000008bc  00000000  00000000  00011f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000228  00000000  00000000  00012808  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000007a6  00000000  00000000  00012a30  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000c84  00000000  00000000  000131d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000b8  00000000  00000000  00013e5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__dtors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      24:	0c 94 5f 0b 	jmp	0x16be	; 0x16be <__vector_9>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      34:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__vector_13>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 1f       	adc	r16, r16
      70:	1f 1f       	adc	r17, r31
      72:	1f 1f       	adc	r17, r31
      74:	1f 1f       	adc	r17, r31

00000076 <__ctors_start>:
      76:	4a 0c       	add	r4, r10

00000078 <__ctors_end>:
      78:	4b 0c       	add	r4, r11

0000007a <__dtors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf ef       	ldi	r28, 0xFF	; 255
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e0       	ldi	r26, 0x00	; 0
      8a:	b1 e0       	ldi	r27, 0x01	; 1
      8c:	e0 e6       	ldi	r30, 0x60	; 96
      8e:	f7 e2       	ldi	r31, 0x27	; 39
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	a0 35       	cpi	r26, 0x50	; 80
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	22 e0       	ldi	r18, 0x02	; 2
      9e:	a0 e5       	ldi	r26, 0x50	; 80
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	aa 30       	cpi	r26, 0x0A	; 10
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>

000000ac <__do_global_ctors>:
      ac:	10 e0       	ldi	r17, 0x00	; 0
      ae:	c8 e7       	ldi	r28, 0x78	; 120
      b0:	d0 e0       	ldi	r29, 0x00	; 0
      b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_global_ctors+0x10>
      b4:	22 97       	sbiw	r28, 0x02	; 2
      b6:	fe 01       	movw	r30, r28
      b8:	0e 94 4f 12 	call	0x249e	; 0x249e <__tablejump__>
      bc:	c6 37       	cpi	r28, 0x76	; 118
      be:	d1 07       	cpc	r29, r17
      c0:	c9 f7       	brne	.-14     	; 0xb4 <__do_global_ctors+0x8>
      c2:	0e 94 a8 04 	call	0x950	; 0x950 <main>
      c6:	0c 94 a3 13 	jmp	0x2746	; 0x2746 <__do_global_dtors>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <_Z22load_custom_charactersv>:
	0b11111
};

void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
      ce:	60 e0       	ldi	r22, 0x00	; 0
      d0:	88 e6       	ldi	r24, 0x68	; 104
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
      d8:	61 e0       	ldi	r22, 0x01	; 1
      da:	89 e6       	ldi	r24, 0x69	; 105
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
      e2:	62 e0       	ldi	r22, 0x02	; 2
      e4:	8a e6       	ldi	r24, 0x6A	; 106
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
      ec:	63 e0       	ldi	r22, 0x03	; 3
      ee:	8b e6       	ldi	r24, 0x6B	; 107
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
      f6:	64 e0       	ldi	r22, 0x04	; 4
      f8:	8c e6       	ldi	r24, 0x6C	; 108
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     100:	65 e0       	ldi	r22, 0x05	; 5
     102:	8d e6       	ldi	r24, 0x6D	; 109
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     10a:	66 e0       	ldi	r22, 0x06	; 6
     10c:	8e e6       	ldi	r24, 0x6E	; 110
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	0e 94 05 09 	call	0x120a	; 0x120a <lcd_load_custom_character>
	clear();
     114:	0e 94 85 09 	call	0x130a	; 0x130a <clear>
     118:	08 95       	ret

0000011a <_Z16display_readingsPKj>:
}

void display_readings(const unsigned int *calibrated_values){
     11a:	ef 92       	push	r14
     11c:	ff 92       	push	r15
     11e:	0f 93       	push	r16
     120:	1f 93       	push	r17
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
     126:	cd b7       	in	r28, 0x3d	; 61
     128:	de b7       	in	r29, 0x3e	; 62
     12a:	2a 97       	sbiw	r28, 0x0a	; 10
     12c:	0f b6       	in	r0, 0x3f	; 63
     12e:	f8 94       	cli
     130:	de bf       	out	0x3e, r29	; 62
     132:	0f be       	out	0x3f, r0	; 63
     134:	cd bf       	out	0x3d, r28	; 61
     136:	8c 01       	movw	r16, r24
	unsigned char i;
	for(i=0;i<5;i++) {
     138:	f1 2c       	mov	r15, r1
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     13a:	0f 2e       	mov	r0, r31
     13c:	fa e0       	ldi	r31, 0x0A	; 10
     13e:	ef 2e       	mov	r14, r31
     140:	f0 2d       	mov	r31, r0
     142:	ef e2       	ldi	r30, 0x2F	; 47
     144:	f1 e0       	ldi	r31, 0x01	; 1
     146:	de 01       	movw	r26, r28
     148:	11 96       	adiw	r26, 0x01	; 1
     14a:	8e 2d       	mov	r24, r14
     14c:	01 90       	ld	r0, Z+
     14e:	0d 92       	st	X+, r0
     150:	8a 95       	dec	r24
     152:	e1 f7       	brne	.-8      	; 0x14c <_Z16display_readingsPKj+0x32>
		char c = display_characters[calibrated_values[i]/101];
     154:	f8 01       	movw	r30, r16
     156:	21 91       	ld	r18, Z+
     158:	31 91       	ld	r19, Z+
     15a:	8f 01       	movw	r16, r30
     15c:	a7 e4       	ldi	r26, 0x47	; 71
     15e:	b4 e1       	ldi	r27, 0x14	; 20
     160:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <__umulhisi3>
     164:	96 95       	lsr	r25
     166:	87 95       	ror	r24
     168:	96 95       	lsr	r25
     16a:	87 95       	ror	r24
     16c:	96 95       	lsr	r25
     16e:	87 95       	ror	r24
     170:	e1 e0       	ldi	r30, 0x01	; 1
     172:	f0 e0       	ldi	r31, 0x00	; 0
     174:	ec 0f       	add	r30, r28
     176:	fd 1f       	adc	r31, r29
     178:	e8 0f       	add	r30, r24
     17a:	f9 1f       	adc	r31, r25
		print_character(c);
     17c:	80 81       	ld	r24, Z
     17e:	0e 94 08 09 	call	0x1210	; 0x1210 <print_character>
	clear();
}

void display_readings(const unsigned int *calibrated_values){
	unsigned char i;
	for(i=0;i<5;i++) {
     182:	f3 94       	inc	r15
     184:	f5 e0       	ldi	r31, 0x05	; 5
     186:	ff 12       	cpse	r15, r31
     188:	dc cf       	rjmp	.-72     	; 0x142 <_Z16display_readingsPKj+0x28>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
		char c = display_characters[calibrated_values[i]/101];
		print_character(c);
	}
}
     18a:	2a 96       	adiw	r28, 0x0a	; 10
     18c:	0f b6       	in	r0, 0x3f	; 63
     18e:	f8 94       	cli
     190:	de bf       	out	0x3e, r29	; 62
     192:	0f be       	out	0x3f, r0	; 63
     194:	cd bf       	out	0x3d, r28	; 61
     196:	df 91       	pop	r29
     198:	cf 91       	pop	r28
     19a:	1f 91       	pop	r17
     19c:	0f 91       	pop	r16
     19e:	ff 90       	pop	r15
     1a0:	ef 90       	pop	r14
     1a2:	08 95       	ret

000001a4 <_Z15saveCalibrationv>:
			break;
		}
	}
}

void saveCalibration(){
     1a4:	cf 93       	push	r28
     1a6:	df 93       	push	r29
     1a8:	c0 e0       	ldi	r28, 0x00	; 0
     1aa:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for(i=0;i<5;i++){
		eeprom_write_word(
			&calibrated_minimum_on[i],
			get_line_sensors_calibrated_minimum_on()[i]
     1ac:	0e 94 0a 0c 	call	0x1814	; 0x1814 <get_line_sensors_calibrated_minimum_on>
		);
     1b0:	8c 0f       	add	r24, r28
     1b2:	9d 1f       	adc	r25, r29
     1b4:	fc 01       	movw	r30, r24
     1b6:	60 81       	ld	r22, Z
     1b8:	71 81       	ldd	r23, Z+1	; 0x01
     1ba:	ce 01       	movw	r24, r28
     1bc:	80 50       	subi	r24, 0x00	; 0
     1be:	90 40       	sbci	r25, 0x00	; 0
     1c0:	0e 94 80 13 	call	0x2700	; 0x2700 <__eewr_word_m328p>

		eeprom_write_word(
			&calibrated_maximum_on[i],
			get_line_sensors_calibrated_maximum_on()[i]
     1c4:	0e 94 0f 0c 	call	0x181e	; 0x181e <get_line_sensors_calibrated_maximum_on>
		);
     1c8:	8c 0f       	add	r24, r28
     1ca:	9d 1f       	adc	r25, r29
     1cc:	fc 01       	movw	r30, r24
     1ce:	60 81       	ld	r22, Z
     1d0:	71 81       	ldd	r23, Z+1	; 0x01
     1d2:	ce 01       	movw	r24, r28
     1d4:	86 5f       	subi	r24, 0xF6	; 246
     1d6:	9f 4f       	sbci	r25, 0xFF	; 255
     1d8:	0e 94 80 13 	call	0x2700	; 0x2700 <__eewr_word_m328p>
     1dc:	22 96       	adiw	r28, 0x02	; 2
	}
}

void saveCalibration(){
	int i;
	for(i=0;i<5;i++){
     1de:	ca 30       	cpi	r28, 0x0A	; 10
     1e0:	d1 05       	cpc	r29, r1
     1e2:	21 f7       	brne	.-56     	; 0x1ac <_Z15saveCalibrationv+0x8>
		eeprom_write_word(
			&calibrated_maximum_on[i],
			get_line_sensors_calibrated_maximum_on()[i]
		);
	}
}
     1e4:	df 91       	pop	r29
     1e6:	cf 91       	pop	r28
     1e8:	08 95       	ret

000001ea <_Z15loadCalibrationv>:

void loadCalibration(){
     1ea:	0f 93       	push	r16
     1ec:	1f 93       	push	r17
     1ee:	cf 93       	push	r28
     1f0:	df 93       	push	r29
	calibrate_line_sensors(IR_EMITTERS_ON); // need to do this to allocate the arrays
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <calibrate_line_sensors>
     1f8:	c0 e0       	ldi	r28, 0x00	; 0
     1fa:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for(i=0;i<5;i++){
		get_line_sensors_calibrated_minimum_on()[i] =
     1fc:	0e 94 0a 0c 	call	0x1814	; 0x1814 <get_line_sensors_calibrated_minimum_on>
     200:	8c 01       	movw	r16, r24
     202:	0c 0f       	add	r16, r28
     204:	1d 1f       	adc	r17, r29
		eeprom_read_word(&calibrated_minimum_on[i]);
     206:	ce 01       	movw	r24, r28
     208:	80 50       	subi	r24, 0x00	; 0
     20a:	90 40       	sbci	r25, 0x00	; 0
     20c:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <__eerd_word_m328p>
     210:	f8 01       	movw	r30, r16
     212:	91 83       	std	Z+1, r25	; 0x01
     214:	80 83       	st	Z, r24

		get_line_sensors_calibrated_maximum_on()[i] =
     216:	0e 94 0f 0c 	call	0x181e	; 0x181e <get_line_sensors_calibrated_maximum_on>
     21a:	8c 01       	movw	r16, r24
     21c:	0c 0f       	add	r16, r28
     21e:	1d 1f       	adc	r17, r29
		eeprom_read_word(&calibrated_maximum_on[i]);
     220:	ce 01       	movw	r24, r28
     222:	86 5f       	subi	r24, 0xF6	; 246
     224:	9f 4f       	sbci	r25, 0xFF	; 255
     226:	0e 94 7a 13 	call	0x26f4	; 0x26f4 <__eerd_word_m328p>
     22a:	f8 01       	movw	r30, r16
     22c:	91 83       	std	Z+1, r25	; 0x01
     22e:	80 83       	st	Z, r24
     230:	22 96       	adiw	r28, 0x02	; 2
}

void loadCalibration(){
	calibrate_line_sensors(IR_EMITTERS_ON); // need to do this to allocate the arrays
	int i;
	for(i=0;i<5;i++){
     232:	ca 30       	cpi	r28, 0x0A	; 10
     234:	d1 05       	cpc	r29, r1
     236:	11 f7       	brne	.-60     	; 0x1fc <_Z15loadCalibrationv+0x12>
		eeprom_read_word(&calibrated_minimum_on[i]);

		get_line_sensors_calibrated_maximum_on()[i] =
		eeprom_read_word(&calibrated_maximum_on[i]);
	}
}
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	08 95       	ret

00000242 <_Z4stopv>:
	}
	stop();
}

void stop(){
	set_motors(0, 0);
     242:	60 e0       	ldi	r22, 0x00	; 0
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	80 e0       	ldi	r24, 0x00	; 0
     248:	90 e0       	ldi	r25, 0x00	; 0
     24a:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
     24e:	08 95       	ret

00000250 <_Z4turn4Turn>:
		get_line_sensors_calibrated_maximum_on()[i] =
		eeprom_read_word(&calibrated_maximum_on[i]);
	}
}

void turn(Turn t){
     250:	1f 93       	push	r17
     252:	cf 93       	push	r28
     254:	df 93       	push	r29
     256:	cd b7       	in	r28, 0x3d	; 61
     258:	de b7       	in	r29, 0x3e	; 62
     25a:	2a 97       	sbiw	r28, 0x0a	; 10
     25c:	0f b6       	in	r0, 0x3f	; 63
     25e:	f8 94       	cli
     260:	de bf       	out	0x3e, r29	; 62
     262:	0f be       	out	0x3f, r0	; 63
     264:	cd bf       	out	0x3d, r28	; 61
     266:	18 2f       	mov	r17, r24
	unsigned int sensors[5];
	read_line(sensors,IR_EMITTERS_ON);
     268:	61 e0       	ldi	r22, 0x01	; 1
     26a:	ce 01       	movw	r24, r28
     26c:	01 96       	adiw	r24, 0x01	; 1
     26e:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
	
	switch(t){
     272:	11 30       	cpi	r17, 0x01	; 1
     274:	69 f1       	breq	.+90     	; 0x2d0 <_Z4turn4Turn+0x80>
     276:	20 f0       	brcs	.+8      	; 0x280 <_Z4turn4Turn+0x30>
     278:	12 30       	cpi	r17, 0x02	; 2
     27a:	09 f4       	brne	.+2      	; 0x27e <_Z4turn4Turn+0x2e>
     27c:	51 c0       	rjmp	.+162    	; 0x320 <_Z4turn4Turn+0xd0>
     27e:	85 c0       	rjmp	.+266    	; 0x38a <_Z4turn4Turn+0x13a>
		case LEFT:
			play_frequency(500, 200, 10);
     280:	4a e0       	ldi	r20, 0x0A	; 10
     282:	68 ec       	ldi	r22, 0xC8	; 200
     284:	70 e0       	ldi	r23, 0x00	; 0
     286:	84 ef       	ldi	r24, 0xF4	; 244
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	0e 94 4a 06 	call	0xc94	; 0xc94 <play_frequency>
			set_motors(-40, 40);
     28e:	68 e2       	ldi	r22, 0x28	; 40
     290:	70 e0       	ldi	r23, 0x00	; 0
     292:	88 ed       	ldi	r24, 0xD8	; 216
     294:	9f ef       	ldi	r25, 0xFF	; 255
     296:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
			while (sensors[2] < 950){
     29a:	8d 81       	ldd	r24, Y+5	; 0x05
     29c:	9e 81       	ldd	r25, Y+6	; 0x06
     29e:	86 3b       	cpi	r24, 0xB6	; 182
     2a0:	93 40       	sbci	r25, 0x03	; 3
     2a2:	50 f4       	brcc	.+20     	; 0x2b8 <_Z4turn4Turn+0x68>
				read_line(sensors,IR_EMITTERS_ON);
     2a4:	61 e0       	ldi	r22, 0x01	; 1
     2a6:	ce 01       	movw	r24, r28
     2a8:	01 96       	adiw	r24, 0x01	; 1
     2aa:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
	
	switch(t){
		case LEFT:
			play_frequency(500, 200, 10);
			set_motors(-40, 40);
			while (sensors[2] < 950){
     2ae:	8d 81       	ldd	r24, Y+5	; 0x05
     2b0:	9e 81       	ldd	r25, Y+6	; 0x06
     2b2:	86 3b       	cpi	r24, 0xB6	; 182
     2b4:	93 40       	sbci	r25, 0x03	; 3
     2b6:	b0 f3       	brcs	.-20     	; 0x2a4 <_Z4turn4Turn+0x54>
			faceInt = -1;
		}
		this->dir = static_cast<Direction>(faceInt + 1);
	}
	void previous() {
		int faceInt = dir;
     2b8:	80 91 02 02 	lds	r24, 0x0202
     2bc:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt <= 0) {
     2be:	18 16       	cp	r1, r24
     2c0:	19 06       	cpc	r1, r25
     2c2:	14 f0       	brlt	.+4      	; 0x2c8 <_Z4turn4Turn+0x78>
			faceInt = 4;
     2c4:	84 e0       	ldi	r24, 0x04	; 4
     2c6:	90 e0       	ldi	r25, 0x00	; 0
		}
		this->dir = static_cast<Direction>(faceInt - 1);
     2c8:	81 50       	subi	r24, 0x01	; 1
     2ca:	80 93 02 02 	sts	0x0202, r24
     2ce:	63 c0       	rjmp	.+198    	; 0x396 <_Z4turn4Turn+0x146>
				read_line(sensors,IR_EMITTERS_ON);
			}
			currentDir.previous();
			break;
		case RIGHT:
			play_frequency(1000, 200, 10);
     2d0:	4a e0       	ldi	r20, 0x0A	; 10
     2d2:	68 ec       	ldi	r22, 0xC8	; 200
     2d4:	70 e0       	ldi	r23, 0x00	; 0
     2d6:	88 ee       	ldi	r24, 0xE8	; 232
     2d8:	93 e0       	ldi	r25, 0x03	; 3
     2da:	0e 94 4a 06 	call	0xc94	; 0xc94 <play_frequency>
			set_motors(40, -40);
     2de:	68 ed       	ldi	r22, 0xD8	; 216
     2e0:	7f ef       	ldi	r23, 0xFF	; 255
     2e2:	88 e2       	ldi	r24, 0x28	; 40
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
			while (sensors[2] < 950){
     2ea:	8d 81       	ldd	r24, Y+5	; 0x05
     2ec:	9e 81       	ldd	r25, Y+6	; 0x06
     2ee:	86 3b       	cpi	r24, 0xB6	; 182
     2f0:	93 40       	sbci	r25, 0x03	; 3
     2f2:	50 f4       	brcc	.+20     	; 0x308 <_Z4turn4Turn+0xb8>
				read_line(sensors,IR_EMITTERS_ON);
     2f4:	61 e0       	ldi	r22, 0x01	; 1
     2f6:	ce 01       	movw	r24, r28
     2f8:	01 96       	adiw	r24, 0x01	; 1
     2fa:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
			currentDir.previous();
			break;
		case RIGHT:
			play_frequency(1000, 200, 10);
			set_motors(40, -40);
			while (sensors[2] < 950){
     2fe:	8d 81       	ldd	r24, Y+5	; 0x05
     300:	9e 81       	ldd	r25, Y+6	; 0x06
     302:	86 3b       	cpi	r24, 0xB6	; 182
     304:	93 40       	sbci	r25, 0x03	; 3
     306:	b0 f3       	brcs	.-20     	; 0x2f4 <_Z4turn4Turn+0xa4>

struct cDirection {
	Direction dir;

	void next() {
		int faceInt = dir;
     308:	80 91 02 02 	lds	r24, 0x0202
     30c:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt == 3) {
     30e:	83 30       	cpi	r24, 0x03	; 3
     310:	91 05       	cpc	r25, r1
     312:	11 f4       	brne	.+4      	; 0x318 <_Z4turn4Turn+0xc8>
			faceInt = -1;
     314:	8f ef       	ldi	r24, 0xFF	; 255
     316:	9f ef       	ldi	r25, 0xFF	; 255
		}
		this->dir = static_cast<Direction>(faceInt + 1);
     318:	8f 5f       	subi	r24, 0xFF	; 255
     31a:	80 93 02 02 	sts	0x0202, r24
     31e:	3b c0       	rjmp	.+118    	; 0x396 <_Z4turn4Turn+0x146>
				read_line(sensors,IR_EMITTERS_ON);
			}
			currentDir.next();
			break;
		case BACK:
			play_frequency(1500, 200, 10);
     320:	4a e0       	ldi	r20, 0x0A	; 10
     322:	68 ec       	ldi	r22, 0xC8	; 200
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	8c ed       	ldi	r24, 0xDC	; 220
     328:	95 e0       	ldi	r25, 0x05	; 5
     32a:	0e 94 4a 06 	call	0xc94	; 0xc94 <play_frequency>
			set_motors(40, -40);
     32e:	68 ed       	ldi	r22, 0xD8	; 216
     330:	7f ef       	ldi	r23, 0xFF	; 255
     332:	88 e2       	ldi	r24, 0x28	; 40
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
			delay_ms(700);
     33a:	8c eb       	ldi	r24, 0xBC	; 188
     33c:	92 e0       	ldi	r25, 0x02	; 2
     33e:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
			while (sensors[2] < 950){
     342:	8d 81       	ldd	r24, Y+5	; 0x05
     344:	9e 81       	ldd	r25, Y+6	; 0x06
     346:	86 3b       	cpi	r24, 0xB6	; 182
     348:	93 40       	sbci	r25, 0x03	; 3
     34a:	50 f4       	brcc	.+20     	; 0x360 <_Z4turn4Turn+0x110>
				read_line(sensors,IR_EMITTERS_ON);
     34c:	61 e0       	ldi	r22, 0x01	; 1
     34e:	ce 01       	movw	r24, r28
     350:	01 96       	adiw	r24, 0x01	; 1
     352:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
			break;
		case BACK:
			play_frequency(1500, 200, 10);
			set_motors(40, -40);
			delay_ms(700);
			while (sensors[2] < 950){
     356:	8d 81       	ldd	r24, Y+5	; 0x05
     358:	9e 81       	ldd	r25, Y+6	; 0x06
     35a:	86 3b       	cpi	r24, 0xB6	; 182
     35c:	93 40       	sbci	r25, 0x03	; 3
     35e:	b0 f3       	brcs	.-20     	; 0x34c <_Z4turn4Turn+0xfc>
				read_line(sensors,IR_EMITTERS_ON);
			}
			stop();
     360:	0e 94 21 01 	call	0x242	; 0x242 <_Z4stopv>

struct cDirection {
	Direction dir;

	void next() {
		int faceInt = dir;
     364:	80 91 02 02 	lds	r24, 0x0202
		if (faceInt == 3) {
     368:	83 30       	cpi	r24, 0x03	; 3
     36a:	31 f0       	breq	.+12     	; 0x378 <_Z4turn4Turn+0x128>
			faceInt = -1;
		}
		this->dir = static_cast<Direction>(faceInt + 1);
     36c:	8f 5f       	subi	r24, 0xFF	; 255

struct cDirection {
	Direction dir;

	void next() {
		int faceInt = dir;
     36e:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt == 3) {
     370:	83 30       	cpi	r24, 0x03	; 3
     372:	91 05       	cpc	r25, r1
     374:	21 f0       	breq	.+8      	; 0x37e <_Z4turn4Turn+0x12e>
     376:	05 c0       	rjmp	.+10     	; 0x382 <_Z4turn4Turn+0x132>

struct cDirection {
	Direction dir;

	void next() {
		int faceInt = dir;
     378:	80 e0       	ldi	r24, 0x00	; 0
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	02 c0       	rjmp	.+4      	; 0x382 <_Z4turn4Turn+0x132>
		if (faceInt == 3) {
			faceInt = -1;
     37e:	8f ef       	ldi	r24, 0xFF	; 255
     380:	9f ef       	ldi	r25, 0xFF	; 255
		}
		this->dir = static_cast<Direction>(faceInt + 1);
     382:	8f 5f       	subi	r24, 0xFF	; 255
     384:	80 93 02 02 	sts	0x0202, r24
     388:	06 c0       	rjmp	.+12     	; 0x396 <_Z4turn4Turn+0x146>
			stop();
			currentDir.next();
			currentDir.next();
			break;
		default:
			clear();
     38a:	0e 94 85 09 	call	0x130a	; 0x130a <clear>
			print("No turn");
     38e:	89 e3       	ldi	r24, 0x39	; 57
     390:	91 e0       	ldi	r25, 0x01	; 1
     392:	0e 94 9c 09 	call	0x1338	; 0x1338 <print>
			break;
	}
	stop();
     396:	0e 94 21 01 	call	0x242	; 0x242 <_Z4stopv>
}
     39a:	2a 96       	adiw	r28, 0x0a	; 10
     39c:	0f b6       	in	r0, 0x3f	; 63
     39e:	f8 94       	cli
     3a0:	de bf       	out	0x3e, r29	; 62
     3a2:	0f be       	out	0x3f, r0	; 63
     3a4:	cd bf       	out	0x3d, r28	; 61
     3a6:	df 91       	pop	r29
     3a8:	cf 91       	pop	r28
     3aa:	1f 91       	pop	r17
     3ac:	08 95       	ret

000003ae <_Z7faceDir9Direction>:
			faceInt = 4;
		}
		this->dir = static_cast<Direction>(faceInt - 1);
	}
	Direction getNext() {
		int faceInt = dir;
     3ae:	90 91 02 02 	lds	r25, 0x0202
     3b2:	29 2f       	mov	r18, r25
     3b4:	30 e0       	ldi	r19, 0x00	; 0
		if (faceInt >= 3) {
     3b6:	23 30       	cpi	r18, 0x03	; 3
     3b8:	31 05       	cpc	r19, r1
     3ba:	14 f4       	brge	.+4      	; 0x3c0 <_Z7faceDir9Direction+0x12>
			faceInt = 4;
		}
		this->dir = static_cast<Direction>(faceInt - 1);
	}
	Direction getNext() {
		int faceInt = dir;
     3bc:	49 2f       	mov	r20, r25
     3be:	01 c0       	rjmp	.+2      	; 0x3c2 <_Z7faceDir9Direction+0x14>
		if (faceInt >= 3) {
			faceInt = -1;
     3c0:	4f ef       	ldi	r20, 0xFF	; 255
		}
		return static_cast<Direction>(faceInt + 1);
     3c2:	4f 5f       	subi	r20, 0xFF	; 255
	}
	return NULL;
}

void faceDir(Direction d){
	if (currentDir.getNext() == d){
     3c4:	84 13       	cpse	r24, r20
     3c6:	04 c0       	rjmp	.+8      	; 0x3d0 <_Z7faceDir9Direction+0x22>
		turn(RIGHT);
     3c8:	81 e0       	ldi	r24, 0x01	; 1
     3ca:	0e 94 28 01 	call	0x250	; 0x250 <_Z4turn4Turn>
     3ce:	08 95       	ret
		}
		return static_cast<Direction>(faceInt + 1);
	}
	Direction getPrevious() {
		int faceInt = dir;
		if (faceInt <= 0) {
     3d0:	12 16       	cp	r1, r18
     3d2:	13 06       	cpc	r1, r19
     3d4:	14 f4       	brge	.+4      	; 0x3da <_Z7faceDir9Direction+0x2c>
			faceInt = -1;
		}
		return static_cast<Direction>(faceInt + 1);
	}
	Direction getPrevious() {
		int faceInt = dir;
     3d6:	49 2f       	mov	r20, r25
     3d8:	01 c0       	rjmp	.+2      	; 0x3dc <_Z7faceDir9Direction+0x2e>
		if (faceInt <= 0) {
			faceInt = 4;
     3da:	44 e0       	ldi	r20, 0x04	; 4
		}
		return static_cast<Direction>(faceInt - 1);
     3dc:	41 50       	subi	r20, 0x01	; 1
}

void faceDir(Direction d){
	if (currentDir.getNext() == d){
		turn(RIGHT);
	} else if(currentDir.getPrevious() == d){
     3de:	84 13       	cpse	r24, r20
     3e0:	04 c0       	rjmp	.+8      	; 0x3ea <_Z7faceDir9Direction+0x3c>
		turn(LEFT);
     3e2:	80 e0       	ldi	r24, 0x00	; 0
     3e4:	0e 94 28 01 	call	0x250	; 0x250 <_Z4turn4Turn>
     3e8:	08 95       	ret
		}
		return static_cast<Direction>(faceInt - 1);
	}
	Direction getOpposite(){
		int faceInt = dir;
		if (faceInt >= 3) {
     3ea:	23 30       	cpi	r18, 0x03	; 3
     3ec:	31 05       	cpc	r19, r1
     3ee:	3c f4       	brge	.+14     	; 0x3fe <_Z7faceDir9Direction+0x50>
			faceInt = -1;
		}
		Direction temp = static_cast<Direction>(faceInt + 1);
     3f0:	9f 5f       	subi	r25, 0xFF	; 255
		faceInt = temp;
     3f2:	29 2f       	mov	r18, r25
     3f4:	30 e0       	ldi	r19, 0x00	; 0
		if (faceInt >= 3) {
     3f6:	23 30       	cpi	r18, 0x03	; 3
     3f8:	31 05       	cpc	r19, r1
     3fa:	24 f4       	brge	.+8      	; 0x404 <_Z7faceDir9Direction+0x56>
     3fc:	05 c0       	rjmp	.+10     	; 0x408 <_Z7faceDir9Direction+0x5a>
		int faceInt = dir;
		if (faceInt >= 3) {
			faceInt = -1;
		}
		Direction temp = static_cast<Direction>(faceInt + 1);
		faceInt = temp;
     3fe:	20 e0       	ldi	r18, 0x00	; 0
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	02 c0       	rjmp	.+4      	; 0x408 <_Z7faceDir9Direction+0x5a>
		if (faceInt >= 3) {
			faceInt = -1;
     404:	2f ef       	ldi	r18, 0xFF	; 255
     406:	3f ef       	ldi	r19, 0xFF	; 255
		}
		return static_cast<Direction>(faceInt + 1);
     408:	2f 5f       	subi	r18, 0xFF	; 255
void faceDir(Direction d){
	if (currentDir.getNext() == d){
		turn(RIGHT);
	} else if(currentDir.getPrevious() == d){
		turn(LEFT);
	} else if(currentDir.getOpposite() == d){
     40a:	82 13       	cpse	r24, r18
     40c:	04 c0       	rjmp	.+8      	; 0x416 <_Z7faceDir9Direction+0x68>
		turn(BACK);
     40e:	82 e0       	ldi	r24, 0x02	; 2
     410:	0e 94 28 01 	call	0x250	; 0x250 <_Z4turn4Turn>
     414:	08 95       	ret
	} else {
		clear();
     416:	0e 94 85 09 	call	0x130a	; 0x130a <clear>
		print("ERR");
     41a:	81 e4       	ldi	r24, 0x41	; 65
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	0e 94 9c 09 	call	0x1338	; 0x1338 <print>
     422:	08 95       	ret

00000424 <_Z13followSegmentv>:

void stop(){
	set_motors(0, 0);
}

int8_t followSegment(){
     424:	2f 92       	push	r2
     426:	3f 92       	push	r3
     428:	4f 92       	push	r4
     42a:	5f 92       	push	r5
     42c:	6f 92       	push	r6
     42e:	7f 92       	push	r7
     430:	8f 92       	push	r8
     432:	9f 92       	push	r9
     434:	af 92       	push	r10
     436:	bf 92       	push	r11
     438:	cf 92       	push	r12
     43a:	df 92       	push	r13
     43c:	ef 92       	push	r14
     43e:	ff 92       	push	r15
     440:	0f 93       	push	r16
     442:	1f 93       	push	r17
     444:	cf 93       	push	r28
     446:	df 93       	push	r29
     448:	cd b7       	in	r28, 0x3d	; 61
     44a:	de b7       	in	r29, 0x3e	; 62
     44c:	2e 97       	sbiw	r28, 0x0e	; 14
     44e:	0f b6       	in	r0, 0x3f	; 63
     450:	f8 94       	cli
     452:	de bf       	out	0x3e, r29	; 62
     454:	0f be       	out	0x3f, r0	; 63
     456:	cd bf       	out	0x3d, r28	; 61
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
static inline unsigned long millis(void) { return get_ms(); }
     458:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <get_ms>
     45c:	6b 87       	std	Y+11, r22	; 0x0b
     45e:	7c 87       	std	Y+12, r23	; 0x0c
     460:	8d 87       	std	Y+13, r24	; 0x0d
     462:	9e 87       	std	Y+14, r25	; 0x0e
	unsigned long startTime = millis();
	
	int last_proportional = 0;
	long integral=0;
     464:	c1 2c       	mov	r12, r1
     466:	d1 2c       	mov	r13, r1
     468:	76 01       	movw	r14, r12
}

int8_t followSegment(){
	unsigned long startTime = millis();
	
	int last_proportional = 0;
     46a:	21 2c       	mov	r2, r1
     46c:	31 2c       	mov	r3, r1
		// Compute the difference between the two motor power settings,
		// m1 - m2.  If this is a positive number the robot will turn
		// to the left.  If it is a negative number, the robot will
		// turn to the right, and the magnitude of the number determines
		// the sharpness of the turn.
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     46e:	0f 2e       	mov	r0, r31
     470:	f0 e1       	ldi	r31, 0x10	; 16
     472:	8f 2e       	mov	r8, r31
     474:	f7 e2       	ldi	r31, 0x27	; 39
     476:	9f 2e       	mov	r9, r31
     478:	a1 2c       	mov	r10, r1
     47a:	b1 2c       	mov	r11, r1
     47c:	f0 2d       	mov	r31, r0
     47e:	0f 2e       	mov	r0, r31
     480:	f4 e1       	ldi	r31, 0x14	; 20
     482:	6f 2e       	mov	r6, r31
     484:	71 2c       	mov	r7, r1
     486:	f0 2d       	mov	r31, r0
     488:	0f 2e       	mov	r0, r31
     48a:	f4 ec       	ldi	r31, 0xC4	; 196
     48c:	4f 2e       	mov	r4, r31
     48e:	f0 2d       	mov	r31, r0
     490:	55 24       	eor	r5, r5
     492:	5a 94       	dec	r5
		// similar to the 3pi-linefollower-pid example, but the maximum
		// speed is turned down to 60 for reliability.
		
		// Get the position of the line.
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     494:	61 e0       	ldi	r22, 0x01	; 1
     496:	ce 01       	movw	r24, r28
     498:	01 96       	adiw	r24, 0x01	; 1
     49a:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
		
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     49e:	8c 01       	movw	r16, r24
     4a0:	00 5d       	subi	r16, 0xD0	; 208
     4a2:	17 40       	sbci	r17, 0x07	; 7
		
		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
		integral += proportional;
     4a4:	c8 01       	movw	r24, r16
     4a6:	aa 27       	eor	r26, r26
     4a8:	97 fd       	sbrc	r25, 7
     4aa:	a0 95       	com	r26
     4ac:	ba 2f       	mov	r27, r26
     4ae:	c8 0e       	add	r12, r24
     4b0:	d9 1e       	adc	r13, r25
     4b2:	ea 1e       	adc	r14, r26
     4b4:	fb 1e       	adc	r15, r27
		// Compute the difference between the two motor power settings,
		// m1 - m2.  If this is a positive number the robot will turn
		// to the left.  If it is a negative number, the robot will
		// turn to the right, and the magnitude of the number determines
		// the sharpness of the turn.
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     4b6:	c7 01       	movw	r24, r14
     4b8:	b6 01       	movw	r22, r12
     4ba:	a5 01       	movw	r20, r10
     4bc:	94 01       	movw	r18, r8
     4be:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
		
		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     4c2:	b8 01       	movw	r22, r16
     4c4:	62 19       	sub	r22, r2
     4c6:	73 09       	sbc	r23, r3
		// Compute the difference between the two motor power settings,
		// m1 - m2.  If this is a positive number the robot will turn
		// to the left.  If it is a negative number, the robot will
		// turn to the right, and the magnitude of the number determines
		// the sharpness of the turn.
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     4c8:	cb 01       	movw	r24, r22
     4ca:	88 0f       	add	r24, r24
     4cc:	99 1f       	adc	r25, r25
     4ce:	86 0f       	add	r24, r22
     4d0:	97 1f       	adc	r25, r23
     4d2:	99 23       	and	r25, r25
     4d4:	0c f4       	brge	.+2      	; 0x4d8 <_Z13followSegmentv+0xb4>
     4d6:	01 96       	adiw	r24, 0x01	; 1
     4d8:	95 95       	asr	r25
     4da:	87 95       	ror	r24
     4dc:	28 0f       	add	r18, r24
     4de:	39 1f       	adc	r19, r25
     4e0:	c8 01       	movw	r24, r16
     4e2:	b3 01       	movw	r22, r6
     4e4:	0e 94 a7 11 	call	0x234e	; 0x234e <__divmodhi4>
     4e8:	c9 01       	movw	r24, r18
     4ea:	86 0f       	add	r24, r22
     4ec:	97 1f       	adc	r25, r23
     4ee:	8d 33       	cpi	r24, 0x3D	; 61
     4f0:	91 05       	cpc	r25, r1
     4f2:	14 f0       	brlt	.+4      	; 0x4f8 <_Z13followSegmentv+0xd4>
     4f4:	8c e3       	ldi	r24, 0x3C	; 60
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	84 3c       	cpi	r24, 0xC4	; 196
     4fa:	2f ef       	ldi	r18, 0xFF	; 255
     4fc:	92 07       	cpc	r25, r18
     4fe:	14 f4       	brge	.+4      	; 0x504 <_Z13followSegmentv+0xe0>
     500:	84 2d       	mov	r24, r4
     502:	95 2d       	mov	r25, r5
		}
		if(power_difference < -max) {
			power_difference = -max;	
		}
		
		if(power_difference < 0) {
     504:	99 23       	and	r25, r25
     506:	34 f4       	brge	.+12     	; 0x514 <_Z13followSegmentv+0xf0>
			set_motors(max+power_difference,max);
     508:	6c e3       	ldi	r22, 0x3C	; 60
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	cc 96       	adiw	r24, 0x3c	; 60
     50e:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
     512:	08 c0       	rjmp	.+16     	; 0x524 <_Z13followSegmentv+0x100>
		} else {
			set_motors(max,max-power_difference);
     514:	6c e3       	ldi	r22, 0x3C	; 60
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	68 1b       	sub	r22, r24
     51a:	79 0b       	sbc	r23, r25
     51c:	8c e3       	ldi	r24, 0x3C	; 60
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
		// We use the inner three sensors (1, 2, and 3) for
		// determining whether there is a line straight ahead, and the
		// sensors 0 and 4 for detecting lines going to the left and
		// right.
		
		if(sensors[1] < 100 && sensors[2] < 100 && sensors[3] < 100){
     524:	8b 81       	ldd	r24, Y+3	; 0x03
     526:	9c 81       	ldd	r25, Y+4	; 0x04
     528:	84 36       	cpi	r24, 0x64	; 100
     52a:	91 05       	cpc	r25, r1
     52c:	98 f4       	brcc	.+38     	; 0x554 <_Z13followSegmentv+0x130>
     52e:	8d 81       	ldd	r24, Y+5	; 0x05
     530:	9e 81       	ldd	r25, Y+6	; 0x06
     532:	84 36       	cpi	r24, 0x64	; 100
     534:	91 05       	cpc	r25, r1
     536:	70 f4       	brcc	.+28     	; 0x554 <_Z13followSegmentv+0x130>
     538:	8f 81       	ldd	r24, Y+7	; 0x07
     53a:	98 85       	ldd	r25, Y+8	; 0x08
     53c:	84 36       	cpi	r24, 0x64	; 100
     53e:	91 05       	cpc	r25, r1
     540:	48 f4       	brcc	.+18     	; 0x554 <_Z13followSegmentv+0x130>
			// There is no line visible ahead, and we didn't see any
			// intersection.  Must be a dead end.
			
			isLeft = false;
     542:	10 92 04 02 	sts	0x0204, r1
			isRight = false;
     546:	10 92 03 02 	sts	0x0203, r1
			isForward = false;
     54a:	10 92 05 02 	sts	0x0205, r1
			
			stop();
     54e:	0e 94 21 01 	call	0x242	; 0x242 <_Z4stopv>
			
			break;
     552:	58 c0       	rjmp	.+176    	; 0x604 <_Z13followSegmentv+0x1e0>
		} else if(sensors[0] > 150 || sensors[4] > 150) {
     554:	89 81       	ldd	r24, Y+1	; 0x01
     556:	9a 81       	ldd	r25, Y+2	; 0x02
     558:	87 39       	cpi	r24, 0x97	; 151
     55a:	91 05       	cpc	r25, r1
     55c:	30 f4       	brcc	.+12     	; 0x56a <_Z13followSegmentv+0x146>
     55e:	89 85       	ldd	r24, Y+9	; 0x09
     560:	9a 85       	ldd	r25, Y+10	; 0x0a
     562:	87 39       	cpi	r24, 0x97	; 151
     564:	91 05       	cpc	r25, r1
     566:	08 f4       	brcc	.+2      	; 0x56a <_Z13followSegmentv+0x146>
     568:	4b c0       	rjmp	.+150    	; 0x600 <_Z13followSegmentv+0x1dc>
			// Found an intersection.
			set_motors(40, 40);
     56a:	68 e2       	ldi	r22, 0x28	; 40
     56c:	70 e0       	ldi	r23, 0x00	; 0
     56e:	88 e2       	ldi	r24, 0x28	; 40
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
			delay_ms(50);
     576:	82 e3       	ldi	r24, 0x32	; 50
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
			
			read_line(sensors,IR_EMITTERS_ON);
     57e:	61 e0       	ldi	r22, 0x01	; 1
     580:	ce 01       	movw	r24, r28
     582:	01 96       	adiw	r24, 0x01	; 1
     584:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
			isLeft = (sensors[0] > 500);
     588:	21 e0       	ldi	r18, 0x01	; 1
     58a:	89 81       	ldd	r24, Y+1	; 0x01
     58c:	9a 81       	ldd	r25, Y+2	; 0x02
     58e:	85 3f       	cpi	r24, 0xF5	; 245
     590:	91 40       	sbci	r25, 0x01	; 1
     592:	08 f4       	brcc	.+2      	; 0x596 <_Z13followSegmentv+0x172>
     594:	20 e0       	ldi	r18, 0x00	; 0
     596:	20 93 04 02 	sts	0x0204, r18
			isRight = (sensors[4] > 500);
     59a:	21 e0       	ldi	r18, 0x01	; 1
     59c:	89 85       	ldd	r24, Y+9	; 0x09
     59e:	9a 85       	ldd	r25, Y+10	; 0x0a
     5a0:	85 3f       	cpi	r24, 0xF5	; 245
     5a2:	91 40       	sbci	r25, 0x01	; 1
     5a4:	08 f4       	brcc	.+2      	; 0x5a8 <_Z13followSegmentv+0x184>
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	20 93 03 02 	sts	0x0203, r18

			set_motors(40, 40);
     5ac:	68 e2       	ldi	r22, 0x28	; 40
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	88 e2       	ldi	r24, 0x28	; 40
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
			delay_ms(200);
     5b8:	88 ec       	ldi	r24, 0xC8	; 200
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
			stop();
     5c0:	0e 94 21 01 	call	0x242	; 0x242 <_Z4stopv>
			
			read_line(sensors,IR_EMITTERS_ON);
     5c4:	61 e0       	ldi	r22, 0x01	; 1
     5c6:	ce 01       	movw	r24, r28
     5c8:	01 96       	adiw	r24, 0x01	; 1
     5ca:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
			isForward = (sensors[1] > 150 || sensors[2] > 150 || sensors[3] > 150);
     5ce:	8b 81       	ldd	r24, Y+3	; 0x03
     5d0:	9c 81       	ldd	r25, Y+4	; 0x04
     5d2:	87 39       	cpi	r24, 0x97	; 151
     5d4:	91 05       	cpc	r25, r1
     5d6:	70 f4       	brcc	.+28     	; 0x5f4 <_Z13followSegmentv+0x1d0>
     5d8:	8d 81       	ldd	r24, Y+5	; 0x05
     5da:	9e 81       	ldd	r25, Y+6	; 0x06
     5dc:	87 39       	cpi	r24, 0x97	; 151
     5de:	91 05       	cpc	r25, r1
     5e0:	58 f4       	brcc	.+22     	; 0x5f8 <_Z13followSegmentv+0x1d4>
     5e2:	21 e0       	ldi	r18, 0x01	; 1
     5e4:	8f 81       	ldd	r24, Y+7	; 0x07
     5e6:	98 85       	ldd	r25, Y+8	; 0x08
     5e8:	87 39       	cpi	r24, 0x97	; 151
     5ea:	91 05       	cpc	r25, r1
     5ec:	08 f4       	brcc	.+2      	; 0x5f0 <_Z13followSegmentv+0x1cc>
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	82 2f       	mov	r24, r18
     5f2:	03 c0       	rjmp	.+6      	; 0x5fa <_Z13followSegmentv+0x1d6>
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	01 c0       	rjmp	.+2      	; 0x5fa <_Z13followSegmentv+0x1d6>
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	80 93 05 02 	sts	0x0205, r24
			
			break;
     5fe:	02 c0       	rjmp	.+4      	; 0x604 <_Z13followSegmentv+0x1e0>
		// position.
		int derivative = proportional - last_proportional;
		integral += proportional;
		
		// Remember the last position.
		last_proportional = proportional;
     600:	18 01       	movw	r2, r16
		return 3;
	} else if(totalTime > 2000 && totalTime <= 2600){
		return 4;
	} else {
		return 0;
	}
     602:	48 cf       	rjmp	.-368    	; 0x494 <_Z13followSegmentv+0x70>
     604:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <get_ms>
			
			break;
		}
	}
	
	unsigned long totalTime = millis() - startTime;
     608:	dc 01       	movw	r26, r24
     60a:	cb 01       	movw	r24, r22
     60c:	2b 85       	ldd	r18, Y+11	; 0x0b
     60e:	3c 85       	ldd	r19, Y+12	; 0x0c
     610:	4d 85       	ldd	r20, Y+13	; 0x0d
     612:	5e 85       	ldd	r21, Y+14	; 0x0e
     614:	82 1b       	sub	r24, r18
     616:	93 0b       	sbc	r25, r19
     618:	a4 0b       	sbc	r26, r20
     61a:	b5 0b       	sbc	r27, r21
	
	if (totalTime >= 50 && totalTime <= 850){
     61c:	8c 01       	movw	r16, r24
     61e:	9d 01       	movw	r18, r26
     620:	02 53       	subi	r16, 0x32	; 50
     622:	11 09       	sbc	r17, r1
     624:	21 09       	sbc	r18, r1
     626:	31 09       	sbc	r19, r1
     628:	01 32       	cpi	r16, 0x21	; 33
     62a:	13 40       	sbci	r17, 0x03	; 3
     62c:	21 05       	cpc	r18, r1
     62e:	31 05       	cpc	r19, r1
     630:	08 f1       	brcs	.+66     	; 0x674 <_Z13followSegmentv+0x250>
		return 1;
	} else if(totalTime > 850 && totalTime <= 1400){
     632:	8c 01       	movw	r16, r24
     634:	9d 01       	movw	r18, r26
     636:	03 55       	subi	r16, 0x53	; 83
     638:	13 40       	sbci	r17, 0x03	; 3
     63a:	21 09       	sbc	r18, r1
     63c:	31 09       	sbc	r19, r1
     63e:	06 32       	cpi	r16, 0x26	; 38
     640:	12 40       	sbci	r17, 0x02	; 2
     642:	21 05       	cpc	r18, r1
     644:	31 05       	cpc	r19, r1
     646:	c0 f0       	brcs	.+48     	; 0x678 <_Z13followSegmentv+0x254>
		return 2;
	} else if(totalTime > 1400 && totalTime <= 2000){
     648:	8c 01       	movw	r16, r24
     64a:	9d 01       	movw	r18, r26
     64c:	09 57       	subi	r16, 0x79	; 121
     64e:	15 40       	sbci	r17, 0x05	; 5
     650:	21 09       	sbc	r18, r1
     652:	31 09       	sbc	r19, r1
     654:	08 35       	cpi	r16, 0x58	; 88
     656:	12 40       	sbci	r17, 0x02	; 2
     658:	21 05       	cpc	r18, r1
     65a:	31 05       	cpc	r19, r1
     65c:	78 f0       	brcs	.+30     	; 0x67c <_Z13followSegmentv+0x258>
		return 3;
	} else if(totalTime > 2000 && totalTime <= 2600){
     65e:	81 5d       	subi	r24, 0xD1	; 209
     660:	97 40       	sbci	r25, 0x07	; 7
     662:	a1 09       	sbc	r26, r1
     664:	b1 09       	sbc	r27, r1
     666:	88 35       	cpi	r24, 0x58	; 88
     668:	92 40       	sbci	r25, 0x02	; 2
     66a:	a1 05       	cpc	r26, r1
     66c:	b1 05       	cpc	r27, r1
     66e:	40 f4       	brcc	.+16     	; 0x680 <_Z13followSegmentv+0x25c>
		return 4;
     670:	84 e0       	ldi	r24, 0x04	; 4
     672:	07 c0       	rjmp	.+14     	; 0x682 <_Z13followSegmentv+0x25e>
	}
	
	unsigned long totalTime = millis() - startTime;
	
	if (totalTime >= 50 && totalTime <= 850){
		return 1;
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	05 c0       	rjmp	.+10     	; 0x682 <_Z13followSegmentv+0x25e>
	} else if(totalTime > 850 && totalTime <= 1400){
		return 2;
     678:	82 e0       	ldi	r24, 0x02	; 2
     67a:	03 c0       	rjmp	.+6      	; 0x682 <_Z13followSegmentv+0x25e>
	} else if(totalTime > 1400 && totalTime <= 2000){
		return 3;
     67c:	83 e0       	ldi	r24, 0x03	; 3
     67e:	01 c0       	rjmp	.+2      	; 0x682 <_Z13followSegmentv+0x25e>
	} else if(totalTime > 2000 && totalTime <= 2600){
		return 4;
	} else {
		return 0;
     680:	80 e0       	ldi	r24, 0x00	; 0
	}
     682:	2e 96       	adiw	r28, 0x0e	; 14
     684:	0f b6       	in	r0, 0x3f	; 63
     686:	f8 94       	cli
     688:	de bf       	out	0x3e, r29	; 62
     68a:	0f be       	out	0x3f, r0	; 63
     68c:	cd bf       	out	0x3d, r28	; 61
     68e:	df 91       	pop	r29
     690:	cf 91       	pop	r28
     692:	1f 91       	pop	r17
     694:	0f 91       	pop	r16
     696:	ff 90       	pop	r15
     698:	ef 90       	pop	r14
     69a:	df 90       	pop	r13
     69c:	cf 90       	pop	r12
     69e:	bf 90       	pop	r11
     6a0:	af 90       	pop	r10
     6a2:	9f 90       	pop	r9
     6a4:	8f 90       	pop	r8
     6a6:	7f 90       	pop	r7
     6a8:	6f 90       	pop	r6
     6aa:	5f 90       	pop	r5
     6ac:	4f 90       	pop	r4
     6ae:	3f 90       	pop	r3
     6b0:	2f 90       	pop	r2
     6b2:	08 95       	ret

000006b4 <_Z10followLinev>:
	 head++;
	 
	 followLine();
}

void followLine(){
     6b4:	0f 93       	push	r16
     6b6:	1f 93       	push	r17
     6b8:	cf 93       	push	r28
     6ba:	df 93       	push	r29
				break;
			case EAST:
				currentPos.x += tilesTravelled;
				break;
			case WEST:
				currentPos.x -= tilesTravelled;
     6bc:	00 e0       	ldi	r16, 0x00	; 0
     6be:	12 e0       	ldi	r17, 0x02	; 2
		switch(currentDir){
			case NORTH:
				currentPos.y += tilesTravelled;
				break;
			case SOUTH:
				currentPos.y -= tilesTravelled;
     6c0:	c1 e0       	ldi	r28, 0x01	; 1
     6c2:	d2 e0       	ldi	r29, 0x02	; 2
	 followLine();
}

void followLine(){
	while(1){
		uint8_t tilesTravelled = followSegment();
     6c4:	0e 94 12 02 	call	0x424	; 0x424 <_Z13followSegmentv>
		
		switch(currentDir){
     6c8:	90 91 02 02 	lds	r25, 0x0202
     6cc:	91 30       	cpi	r25, 0x01	; 1
     6ce:	99 f0       	breq	.+38     	; 0x6f6 <_Z10followLinev+0x42>
     6d0:	48 f0       	brcs	.+18     	; 0x6e4 <_Z10followLinev+0x30>
     6d2:	92 30       	cpi	r25, 0x02	; 2
     6d4:	19 f0       	breq	.+6      	; 0x6dc <_Z10followLinev+0x28>
     6d6:	93 30       	cpi	r25, 0x03	; 3
     6d8:	49 f0       	breq	.+18     	; 0x6ec <_Z10followLinev+0x38>
     6da:	11 c0       	rjmp	.+34     	; 0x6fe <_Z10followLinev+0x4a>
			case NORTH:
				currentPos.y += tilesTravelled;
     6dc:	98 81       	ld	r25, Y
     6de:	89 0f       	add	r24, r25
     6e0:	88 83       	st	Y, r24
				break;
     6e2:	0d c0       	rjmp	.+26     	; 0x6fe <_Z10followLinev+0x4a>
			case SOUTH:
				currentPos.y -= tilesTravelled;
     6e4:	98 81       	ld	r25, Y
     6e6:	98 1b       	sub	r25, r24
     6e8:	98 83       	st	Y, r25
				break;
     6ea:	09 c0       	rjmp	.+18     	; 0x6fe <_Z10followLinev+0x4a>
			case EAST:
				currentPos.x += tilesTravelled;
     6ec:	f8 01       	movw	r30, r16
     6ee:	90 81       	ld	r25, Z
     6f0:	89 0f       	add	r24, r25
     6f2:	80 83       	st	Z, r24
				break;
     6f4:	04 c0       	rjmp	.+8      	; 0x6fe <_Z10followLinev+0x4a>
			case WEST:
				currentPos.x -= tilesTravelled;
     6f6:	f8 01       	movw	r30, r16
     6f8:	90 81       	ld	r25, Z
     6fa:	98 1b       	sub	r25, r24
     6fc:	90 83       	st	Z, r25
				break;
			default:
				break;
		}
		
		if (isLeft && !isRight && !isForward){
     6fe:	80 91 04 02 	lds	r24, 0x0204
     702:	88 23       	and	r24, r24
     704:	99 f0       	breq	.+38     	; 0x72c <_Z10followLinev+0x78>
     706:	80 91 03 02 	lds	r24, 0x0203
     70a:	81 11       	cpse	r24, r1
     70c:	13 c0       	rjmp	.+38     	; 0x734 <_Z10followLinev+0x80>
     70e:	80 91 05 02 	lds	r24, 0x0205
     712:	81 11       	cpse	r24, r1
     714:	0f c0       	rjmp	.+30     	; 0x734 <_Z10followLinev+0x80>
			turn(LEFT);
     716:	0e 94 28 01 	call	0x250	; 0x250 <_Z4turn4Turn>
     71a:	d4 cf       	rjmp	.-88     	; 0x6c4 <_Z10followLinev+0x10>
		} else if(isRight && !isLeft && !isForward){
     71c:	80 91 05 02 	lds	r24, 0x0205
     720:	81 11       	cpse	r24, r1
     722:	08 c0       	rjmp	.+16     	; 0x734 <_Z10followLinev+0x80>
			turn(RIGHT);
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	0e 94 28 01 	call	0x250	; 0x250 <_Z4turn4Turn>
     72a:	cc cf       	rjmp	.-104    	; 0x6c4 <_Z10followLinev+0x10>
				break;
		}
		
		if (isLeft && !isRight && !isForward){
			turn(LEFT);
		} else if(isRight && !isLeft && !isForward){
     72c:	80 91 03 02 	lds	r24, 0x0203
     730:	81 11       	cpse	r24, r1
     732:	f4 cf       	rjmp	.-24     	; 0x71c <_Z10followLinev+0x68>
			turn(RIGHT);
		} else {
			break;
		}
	}
}
     734:	df 91       	pop	r29
     736:	cf 91       	pop	r28
     738:	1f 91       	pop	r17
     73a:	0f 91       	pop	r16
     73c:	08 95       	ret

0000073e <_Z7mapMazev>:
		clear();
		print("ERR");
	}
}

void mapMaze(){
     73e:	cf 92       	push	r12
     740:	df 92       	push	r13
     742:	ef 92       	push	r14
     744:	ff 92       	push	r15
     746:	cf 93       	push	r28
     748:	df 93       	push	r29
	followLine();
     74a:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z10followLinev>
	
	currentDir.dir = NORTH;
     74e:	82 e0       	ldi	r24, 0x02	; 2
     750:	80 93 02 02 	sts	0x0202, r24
	currentPos.x = 0;
     754:	10 92 00 02 	sts	0x0200, r1
	currentPos.y = 0;
     758:	10 92 01 02 	sts	0x0201, r1
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     75c:	89 e1       	ldi	r24, 0x19	; 25
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
     764:	ec 01       	movw	r28, r24
	node* connections[4]; // 0 = South (where mouse came from), 1 = West, 2 = North, 3 = East
	node* parent;
	float f, g, h;

	node(){
		this->visited = false;
     766:	1a 82       	std	Y+2, r1	; 0x02
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
     768:	1e 82       	std	Y+6, r1	; 0x06
     76a:	1d 82       	std	Y+5, r1	; 0x05
     76c:	18 86       	std	Y+8, r1	; 0x08
     76e:	1f 82       	std	Y+7, r1	; 0x07
     770:	1a 86       	std	Y+10, r1	; 0x0a
     772:	19 86       	std	Y+9, r1	; 0x09
	
	currentDir.dir = NORTH;
	currentPos.x = 0;
	currentPos.y = 0;

	nodes[head] = new node;
     774:	e0 90 ff 01 	lds	r14, 0x01FF
     778:	ff 24       	eor	r15, r15
     77a:	e7 fc       	sbrc	r14, 7
     77c:	f0 94       	com	r15
     77e:	f7 01       	movw	r30, r14
     780:	ee 0f       	add	r30, r30
     782:	ff 1f       	adc	r31, r31
     784:	ed 53       	subi	r30, 0x3D	; 61
     786:	fe 4f       	sbci	r31, 0xFE	; 254
     788:	91 83       	std	Z+1, r25	; 0x01
     78a:	80 83       	st	Z, r24
			this->connections[i] = NULL;
		}
	}
	
	void setPosition(position p){
		this->pos = p;
     78c:	18 82       	st	Y, r1
     78e:	19 82       	std	Y+1, r1	; 0x01
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     790:	89 e1       	ldi	r24, 0x19	; 25
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
     798:	fc 01       	movw	r30, r24
	node* connections[4]; // 0 = South (where mouse came from), 1 = West, 2 = North, 3 = East
	node* parent;
	float f, g, h;

	node(){
		this->visited = false;
     79a:	12 82       	std	Z+2, r1	; 0x02
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
     79c:	14 82       	std	Z+4, r1	; 0x04
     79e:	13 82       	std	Z+3, r1	; 0x03
     7a0:	16 82       	std	Z+6, r1	; 0x06
     7a2:	15 82       	std	Z+5, r1	; 0x05
     7a4:	10 86       	std	Z+8, r1	; 0x08
     7a6:	17 82       	std	Z+7, r1	; 0x07
     7a8:	12 86       	std	Z+10, r1	; 0x0a
     7aa:	11 86       	std	Z+9, r1	; 0x09
	}
	
	void addConnection(Direction d, node* n){
		switch(d){
			case SOUTH:
				this->connections[0] = n;
     7ac:	9c 83       	std	Y+4, r25	; 0x04
     7ae:	8b 83       	std	Y+3, r24	; 0x03
	currentPos.y = 0;

	nodes[head] = new node;
	nodes[head]->setPosition(currentPos);
	nodes[head]->addConnection(currentDir.getOpposite(), new node);
	if (isLeft){
     7b0:	80 91 04 02 	lds	r24, 0x0204
     7b4:	88 23       	and	r24, r24
     7b6:	d1 f0       	breq	.+52     	; 0x7ec <_Z7mapMazev+0xae>
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     7b8:	89 e1       	ldi	r24, 0x19	; 25
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
     7c0:	fc 01       	movw	r30, r24
	node* connections[4]; // 0 = South (where mouse came from), 1 = West, 2 = North, 3 = East
	node* parent;
	float f, g, h;

	node(){
		this->visited = false;
     7c2:	12 82       	std	Z+2, r1	; 0x02
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
     7c4:	14 82       	std	Z+4, r1	; 0x04
     7c6:	13 82       	std	Z+3, r1	; 0x03
     7c8:	16 82       	std	Z+6, r1	; 0x06
     7ca:	15 82       	std	Z+5, r1	; 0x05
     7cc:	10 86       	std	Z+8, r1	; 0x08
     7ce:	17 82       	std	Z+7, r1	; 0x07
     7d0:	12 86       	std	Z+10, r1	; 0x0a
     7d2:	11 86       	std	Z+9, r1	; 0x09

	nodes[head] = new node;
	nodes[head]->setPosition(currentPos);
	nodes[head]->addConnection(currentDir.getOpposite(), new node);
	if (isLeft){
		nodes[head]->addConnection(currentDir.getPrevious(), new node);
     7d4:	d7 01       	movw	r26, r14
     7d6:	aa 0f       	add	r26, r26
     7d8:	bb 1f       	adc	r27, r27
     7da:	ad 53       	subi	r26, 0x3D	; 61
     7dc:	be 4f       	sbci	r27, 0xFE	; 254
     7de:	0d 90       	ld	r0, X+
     7e0:	bc 91       	ld	r27, X
     7e2:	a0 2d       	mov	r26, r0
		switch(d){
			case SOUTH:
				this->connections[0] = n;
				break;
			case WEST:
				this->connections[1] = n;
     7e4:	16 96       	adiw	r26, 0x06	; 6
     7e6:	9c 93       	st	X, r25
     7e8:	8e 93       	st	-X, r24
     7ea:	15 97       	sbiw	r26, 0x05	; 5
	nodes[head]->setPosition(currentPos);
	nodes[head]->addConnection(currentDir.getOpposite(), new node);
	if (isLeft){
		nodes[head]->addConnection(currentDir.getPrevious(), new node);
	}
	if (isRight){
     7ec:	80 91 03 02 	lds	r24, 0x0203
     7f0:	88 23       	and	r24, r24
     7f2:	d1 f0       	breq	.+52     	; 0x828 <_Z7mapMazev+0xea>
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     7f4:	89 e1       	ldi	r24, 0x19	; 25
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
     7fc:	fc 01       	movw	r30, r24
	node* connections[4]; // 0 = South (where mouse came from), 1 = West, 2 = North, 3 = East
	node* parent;
	float f, g, h;

	node(){
		this->visited = false;
     7fe:	12 82       	std	Z+2, r1	; 0x02
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
     800:	14 82       	std	Z+4, r1	; 0x04
     802:	13 82       	std	Z+3, r1	; 0x03
     804:	16 82       	std	Z+6, r1	; 0x06
     806:	15 82       	std	Z+5, r1	; 0x05
     808:	10 86       	std	Z+8, r1	; 0x08
     80a:	17 82       	std	Z+7, r1	; 0x07
     80c:	12 86       	std	Z+10, r1	; 0x0a
     80e:	11 86       	std	Z+9, r1	; 0x09
	nodes[head]->addConnection(currentDir.getOpposite(), new node);
	if (isLeft){
		nodes[head]->addConnection(currentDir.getPrevious(), new node);
	}
	if (isRight){
		nodes[head]->addConnection(currentDir.getNext(), new node);
     810:	d7 01       	movw	r26, r14
     812:	aa 0f       	add	r26, r26
     814:	bb 1f       	adc	r27, r27
     816:	ad 53       	subi	r26, 0x3D	; 61
     818:	be 4f       	sbci	r27, 0xFE	; 254
     81a:	0d 90       	ld	r0, X+
     81c:	bc 91       	ld	r27, X
     81e:	a0 2d       	mov	r26, r0
				break;
			case NORTH:
				this->connections[2] = n;
				break;
			case EAST:
				this->connections[3] = n;
     820:	1a 96       	adiw	r26, 0x0a	; 10
     822:	9c 93       	st	X, r25
     824:	8e 93       	st	-X, r24
     826:	19 97       	sbiw	r26, 0x09	; 9
		nodes[head]->addConnection(currentDir.getPrevious(), new node);
	}
	if (isRight){
		nodes[head]->addConnection(currentDir.getNext(), new node);
	}
	if (isForward){
     828:	80 91 05 02 	lds	r24, 0x0205
     82c:	88 23       	and	r24, r24
     82e:	d1 f0       	breq	.+52     	; 0x864 <_Z7mapMazev+0x126>
#include <stdbool.h>
#include <stdlib.h>
#include <math.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     830:	89 e1       	ldi	r24, 0x19	; 25
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
     838:	fc 01       	movw	r30, r24
	node* connections[4]; // 0 = South (where mouse came from), 1 = West, 2 = North, 3 = East
	node* parent;
	float f, g, h;

	node(){
		this->visited = false;
     83a:	12 82       	std	Z+2, r1	; 0x02
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
     83c:	14 82       	std	Z+4, r1	; 0x04
     83e:	13 82       	std	Z+3, r1	; 0x03
     840:	16 82       	std	Z+6, r1	; 0x06
     842:	15 82       	std	Z+5, r1	; 0x05
     844:	10 86       	std	Z+8, r1	; 0x08
     846:	17 82       	std	Z+7, r1	; 0x07
     848:	12 86       	std	Z+10, r1	; 0x0a
     84a:	11 86       	std	Z+9, r1	; 0x09
	}
	if (isRight){
		nodes[head]->addConnection(currentDir.getNext(), new node);
	}
	if (isForward){
		nodes[head]->addConnection(currentDir, new node);
     84c:	d7 01       	movw	r26, r14
     84e:	aa 0f       	add	r26, r26
     850:	bb 1f       	adc	r27, r27
     852:	ad 53       	subi	r26, 0x3D	; 61
     854:	be 4f       	sbci	r27, 0xFE	; 254
     856:	0d 90       	ld	r0, X+
     858:	bc 91       	ld	r27, X
     85a:	a0 2d       	mov	r26, r0
				break;
			case WEST:
				this->connections[1] = n;
				break;
			case NORTH:
				this->connections[2] = n;
     85c:	18 96       	adiw	r26, 0x08	; 8
     85e:	9c 93       	st	X, r25
     860:	8e 93       	st	-X, r24
     862:	17 97       	sbiw	r26, 0x07	; 7
	}
	if (isForward){
		nodes[head]->addConnection(currentDir, new node);
	}
	
	nodes[head]->visited = true;
     864:	f7 01       	movw	r30, r14
     866:	ee 0f       	add	r30, r30
     868:	ff 1f       	adc	r31, r31
     86a:	ed 53       	subi	r30, 0x3D	; 61
     86c:	fe 4f       	sbci	r31, 0xFE	; 254
     86e:	01 90       	ld	r0, Z+
     870:	f0 81       	ld	r31, Z
     872:	e0 2d       	mov	r30, r0
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	82 83       	std	Z+2, r24	; 0x02
	
	clear();
     878:	0e 94 85 09 	call	0x130a	; 0x130a <clear>
     87c:	c1 2c       	mov	r12, r1
     87e:	d1 2c       	mov	r13, r1
     880:	76 01       	movw	r14, r12
     882:	e6 01       	movw	r28, r12
	 // traverse to an unvisited node
	 node* nextNode = NULL;
	 int i;
	 for (i=0; i<4; i++){
		 
		 if (nodes[head]->connections[i] != NULL){
     884:	e0 91 ff 01 	lds	r30, 0x01FF
     888:	ee 0f       	add	r30, r30
     88a:	ff 0b       	sbc	r31, r31
     88c:	ed 53       	subi	r30, 0x3D	; 61
     88e:	fe 4f       	sbci	r31, 0xFE	; 254
     890:	01 90       	ld	r0, Z+
     892:	f0 81       	ld	r31, Z
     894:	e0 2d       	mov	r30, r0
     896:	c6 01       	movw	r24, r12
     898:	88 0f       	add	r24, r24
     89a:	99 1f       	adc	r25, r25
     89c:	e8 0f       	add	r30, r24
     89e:	f9 1f       	adc	r31, r25
     8a0:	83 81       	ldd	r24, Z+3	; 0x03
     8a2:	94 81       	ldd	r25, Z+4	; 0x04
     8a4:	89 2b       	or	r24, r25
     8a6:	e1 f0       	breq	.+56     	; 0x8e0 <_Z7mapMazev+0x1a2>
			 print_long(i);
     8a8:	c7 01       	movw	r24, r14
     8aa:	b6 01       	movw	r22, r12
     8ac:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <print_long>
			 print(",");
     8b0:	85 e4       	ldi	r24, 0x45	; 69
     8b2:	91 e0       	ldi	r25, 0x01	; 1
     8b4:	0e 94 9c 09 	call	0x1338	; 0x1338 <print>
			 if (nodes[head]->connections[i]->visited == false){
     8b8:	e0 91 ff 01 	lds	r30, 0x01FF
     8bc:	ee 0f       	add	r30, r30
     8be:	ff 0b       	sbc	r31, r31
     8c0:	ed 53       	subi	r30, 0x3D	; 61
     8c2:	fe 4f       	sbci	r31, 0xFE	; 254
     8c4:	01 90       	ld	r0, Z+
     8c6:	f0 81       	ld	r31, Z
     8c8:	e0 2d       	mov	r30, r0
     8ca:	c6 01       	movw	r24, r12
     8cc:	88 0f       	add	r24, r24
     8ce:	99 1f       	adc	r25, r25
     8d0:	e8 0f       	add	r30, r24
     8d2:	f9 1f       	adc	r31, r25
     8d4:	03 80       	ldd	r0, Z+3	; 0x03
     8d6:	f4 81       	ldd	r31, Z+4	; 0x04
     8d8:	e0 2d       	mov	r30, r0
     8da:	82 81       	ldd	r24, Z+2	; 0x02
     8dc:	88 23       	and	r24, r24
     8de:	61 f0       	breq	.+24     	; 0x8f8 <_Z7mapMazev+0x1ba>
     8e0:	8f ef       	ldi	r24, 0xFF	; 255
     8e2:	c8 1a       	sub	r12, r24
     8e4:	d8 0a       	sbc	r13, r24
     8e6:	e8 0a       	sbc	r14, r24
     8e8:	f8 0a       	sbc	r15, r24
	clear();
	
	 // traverse to an unvisited node
	 node* nextNode = NULL;
	 int i;
	 for (i=0; i<4; i++){
     8ea:	84 e0       	ldi	r24, 0x04	; 4
     8ec:	c8 16       	cp	r12, r24
     8ee:	d1 04       	cpc	r13, r1
     8f0:	e1 04       	cpc	r14, r1
     8f2:	f1 04       	cpc	r15, r1
     8f4:	31 f6       	brne	.-116    	; 0x882 <_Z7mapMazev+0x144>
     8f6:	1e c0       	rjmp	.+60     	; 0x934 <__stack+0x35>
				 break;
			 }
		 }
	 }
	 
	 if (nextNode != NULL){
     8f8:	ef 2b       	or	r30, r31
     8fa:	e1 f0       	breq	.+56     	; 0x934 <__stack+0x35>
		 switch(i){
     8fc:	c1 30       	cpi	r28, 0x01	; 1
     8fe:	d1 05       	cpc	r29, r1
     900:	71 f0       	breq	.+28     	; 0x91e <__stack+0x1f>
     902:	1c f4       	brge	.+6      	; 0x90a <__stack+0xb>
     904:	cd 2b       	or	r28, r29
     906:	39 f0       	breq	.+14     	; 0x916 <__stack+0x17>
     908:	15 c0       	rjmp	.+42     	; 0x934 <__stack+0x35>
     90a:	c2 30       	cpi	r28, 0x02	; 2
     90c:	d1 05       	cpc	r29, r1
     90e:	59 f0       	breq	.+22     	; 0x926 <__stack+0x27>
     910:	23 97       	sbiw	r28, 0x03	; 3
     912:	69 f0       	breq	.+26     	; 0x92e <__stack+0x2f>
     914:	0f c0       	rjmp	.+30     	; 0x934 <__stack+0x35>
			case 0:
				faceDir(SOUTH);
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_Z7faceDir9Direction>
				break;
     91c:	0b c0       	rjmp	.+22     	; 0x934 <__stack+0x35>
			case 1:
				faceDir(EAST);
     91e:	83 e0       	ldi	r24, 0x03	; 3
     920:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_Z7faceDir9Direction>
				break;
     924:	07 c0       	rjmp	.+14     	; 0x934 <__stack+0x35>
			case 2:
				faceDir(WEST);
     926:	81 e0       	ldi	r24, 0x01	; 1
     928:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_Z7faceDir9Direction>
				break;
     92c:	03 c0       	rjmp	.+6      	; 0x934 <__stack+0x35>
			case 3:
				faceDir(NORTH);
     92e:	82 e0       	ldi	r24, 0x02	; 2
     930:	0e 94 d7 01 	call	0x3ae	; 0x3ae <_Z7faceDir9Direction>
		 }
	 } else {
		  
	 }
	 
	 head++;
     934:	80 91 ff 01 	lds	r24, 0x01FF
     938:	8f 5f       	subi	r24, 0xFF	; 255
     93a:	80 93 ff 01 	sts	0x01FF, r24
	 
	 followLine();
     93e:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <_Z10followLinev>
}
     942:	df 91       	pop	r29
     944:	cf 91       	pop	r28
     946:	ff 90       	pop	r15
     948:	ef 90       	pop	r14
     94a:	df 90       	pop	r13
     94c:	cf 90       	pop	r12
     94e:	08 95       	ret

00000950 <main>:

int randomBetween(int a, int b){
	return rand() % ( b - a + 1) + a;
}

int main(){
     950:	cf 93       	push	r28
     952:	df 93       	push	r29
     954:	cd b7       	in	r28, 0x3d	; 61
     956:	de b7       	in	r29, 0x3e	; 62
     958:	2a 97       	sbiw	r28, 0x0a	; 10
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	f8 94       	cli
     95e:	de bf       	out	0x3e, r29	; 62
     960:	0f be       	out	0x3f, r0	; 63
     962:	cd bf       	out	0x3d, r28	; 61
	unsigned int sensors[5];
	pololu_3pi_init(2000);
     964:	80 ed       	ldi	r24, 0xD0	; 208
     966:	97 e0       	ldi	r25, 0x07	; 7
     968:	0e 94 46 0c 	call	0x188c	; 0x188c <pololu_3pi_init>
	load_custom_characters();
     96c:	0e 94 67 00 	call	0xce	; 0xce <_Z22load_custom_charactersv>
	loadCalibration();
     970:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_Z15loadCalibrationv>
	play_frequency(1000, 200, 10);
     974:	4a e0       	ldi	r20, 0x0A	; 10
     976:	68 ec       	ldi	r22, 0xC8	; 200
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	88 ee       	ldi	r24, 0xE8	; 232
     97c:	93 e0       	ldi	r25, 0x03	; 3
     97e:	0e 94 4a 06 	call	0xc94	; 0xc94 <play_frequency>
	
	clear();
     982:	0e 94 85 09 	call	0x130a	; 0x130a <clear>
	print("Press B");
     986:	87 e4       	ldi	r24, 0x47	; 71
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	0e 94 9c 09 	call	0x1338	; 0x1338 <print>
	
	while(1){
		if (button_is_pressed(BUTTON_A)){
			unsigned int counter;
			delay_ms(1000);
     98e:	0f 2e       	mov	r0, r31
     990:	fc ee       	ldi	r31, 0xEC	; 236
     992:	ef 2e       	mov	r14, r31
     994:	f0 2d       	mov	r31, r0
     996:	ff 24       	eor	r15, r15
     998:	fa 94       	dec	r15
	
	clear();
	print("Press B");
	
	while(1){
		if (button_is_pressed(BUTTON_A)){
     99a:	82 e0       	ldi	r24, 0x02	; 2
     99c:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <button_is_pressed>
     9a0:	88 23       	and	r24, r24
     9a2:	59 f1       	breq	.+86     	; 0x9fa <main+0xaa>
			unsigned int counter;
			delay_ms(1000);
     9a4:	88 ee       	ldi	r24, 0xE8	; 232
     9a6:	93 e0       	ldi	r25, 0x03	; 3
     9a8:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
     9ac:	0e 2d       	mov	r16, r14
     9ae:	1f 2d       	mov	r17, r15
			for(counter=0;counter<80;counter++){
				if(counter < 20 || counter >= 60){
     9b0:	08 32       	cpi	r16, 0x28	; 40
     9b2:	11 05       	cpc	r17, r1
     9b4:	38 f0       	brcs	.+14     	; 0x9c4 <main+0x74>
					set_motors(40,-40);
     9b6:	68 ed       	ldi	r22, 0xD8	; 216
     9b8:	7f ef       	ldi	r23, 0xFF	; 255
     9ba:	88 e2       	ldi	r24, 0x28	; 40
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
     9c2:	06 c0       	rjmp	.+12     	; 0x9d0 <main+0x80>
				} else {
					set_motors(-40,40);
     9c4:	68 e2       	ldi	r22, 0x28	; 40
     9c6:	70 e0       	ldi	r23, 0x00	; 0
     9c8:	88 ed       	ldi	r24, 0xD8	; 216
     9ca:	9f ef       	ldi	r25, 0xFF	; 255
     9cc:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
				}
				calibrate_line_sensors(IR_EMITTERS_ON);
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	0e 94 fb 0b 	call	0x17f6	; 0x17f6 <calibrate_line_sensors>
				delay_ms(20);
     9d6:	84 e1       	ldi	r24, 0x14	; 20
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
     9de:	0f 5f       	subi	r16, 0xFF	; 255
     9e0:	1f 4f       	sbci	r17, 0xFF	; 255
	
	while(1){
		if (button_is_pressed(BUTTON_A)){
			unsigned int counter;
			delay_ms(1000);
			for(counter=0;counter<80;counter++){
     9e2:	0c 33       	cpi	r16, 0x3C	; 60
     9e4:	11 05       	cpc	r17, r1
     9e6:	21 f7       	brne	.-56     	; 0x9b0 <main+0x60>
					set_motors(-40,40);
				}
				calibrate_line_sensors(IR_EMITTERS_ON);
				delay_ms(20);
			}
			set_motors(0,0);
     9e8:	60 e0       	ldi	r22, 0x00	; 0
     9ea:	70 e0       	ldi	r23, 0x00	; 0
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 26 0b 	call	0x164c	; 0x164c <set_motors>
			
			saveCalibration();
     9f4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z15saveCalibrationv>
     9f8:	d0 cf       	rjmp	.-96     	; 0x99a <main+0x4a>
		} else if(button_is_pressed(BUTTON_B)){
     9fa:	80 e1       	ldi	r24, 0x10	; 16
     9fc:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <button_is_pressed>
     a00:	88 23       	and	r24, r24
     a02:	19 f0       	breq	.+6      	; 0xa0a <main+0xba>
			mapMaze();
     a04:	0e 94 9f 03 	call	0x73e	; 0x73e <_Z7mapMazev>
     a08:	c8 cf       	rjmp	.-112    	; 0x99a <main+0x4a>
		} else if(button_is_pressed(BUTTON_C)){
     a0a:	80 e2       	ldi	r24, 0x20	; 32
     a0c:	0e 94 54 0b 	call	0x16a8	; 0x16a8 <button_is_pressed>
     a10:	88 23       	and	r24, r24
     a12:	19 f2       	breq	.-122    	; 0x99a <main+0x4a>
			while(1){
				unsigned int position = read_line(sensors, IR_EMITTERS_ON);
     a14:	61 e0       	ldi	r22, 0x01	; 1
     a16:	ce 01       	movw	r24, r28
     a18:	01 96       	adiw	r24, 0x01	; 1
     a1a:	0e 94 01 0c 	call	0x1802	; 0x1802 <read_line>
     a1e:	8c 01       	movw	r16, r24
				clear();
     a20:	0e 94 85 09 	call	0x130a	; 0x130a <clear>
				print_long(position);
     a24:	b8 01       	movw	r22, r16
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <print_long>
				lcd_goto_xy(0,1);
     a2e:	61 e0       	ldi	r22, 0x01	; 1
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	0e 94 1c 0a 	call	0x1438	; 0x1438 <lcd_goto_xy>
				display_readings(sensors);
     a36:	ce 01       	movw	r24, r28
     a38:	01 96       	adiw	r24, 0x01	; 1
     a3a:	0e 94 8d 00 	call	0x11a	; 0x11a <_Z16display_readingsPKj>
				delay_ms(100);
     a3e:	84 e6       	ldi	r24, 0x64	; 100
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
     a46:	e6 cf       	rjmp	.-52     	; 0xa14 <main+0xc4>

00000a48 <_ZL16currentCharacterv>:
     a48:	90 91 55 01 	lds	r25, 0x0155
     a4c:	e0 91 51 01 	lds	r30, 0x0151
     a50:	f0 91 52 01 	lds	r31, 0x0152
     a54:	99 23       	and	r25, r25
     a56:	11 f0       	breq	.+4      	; 0xa5c <_ZL16currentCharacterv+0x14>
     a58:	84 91       	lpm	r24, Z
     a5a:	01 c0       	rjmp	.+2      	; 0xa5e <_ZL16currentCharacterv+0x16>
     a5c:	80 81       	ld	r24, Z
     a5e:	28 2f       	mov	r18, r24
     a60:	21 54       	subi	r18, 0x41	; 65
     a62:	2a 31       	cpi	r18, 0x1A	; 26
     a64:	10 f4       	brcc	.+4      	; 0xa6a <_ZL16currentCharacterv+0x22>
     a66:	80 5e       	subi	r24, 0xE0	; 224
     a68:	08 95       	ret
     a6a:	80 32       	cpi	r24, 0x20	; 32
     a6c:	71 f4       	brne	.+28     	; 0xa8a <_ZL16currentCharacterv+0x42>
     a6e:	20 91 51 01 	lds	r18, 0x0151
     a72:	30 91 52 01 	lds	r19, 0x0152
     a76:	a9 01       	movw	r20, r18
     a78:	4f 5f       	subi	r20, 0xFF	; 255
     a7a:	5f 4f       	sbci	r21, 0xFF	; 255
     a7c:	50 93 52 01 	sts	0x0152, r21
     a80:	40 93 51 01 	sts	0x0151, r20
     a84:	21 15       	cp	r18, r1
     a86:	31 05       	cpc	r19, r1
     a88:	09 f7       	brne	.-62     	; 0xa4c <_ZL16currentCharacterv+0x4>
     a8a:	08 95       	ret

00000a8c <_ZL9getNumberv>:
     a8c:	ef 92       	push	r14
     a8e:	ff 92       	push	r15
     a90:	cf 93       	push	r28
     a92:	df 93       	push	r29
     a94:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     a98:	c0 e0       	ldi	r28, 0x00	; 0
     a9a:	d0 e0       	ldi	r29, 0x00	; 0
     a9c:	1b c0       	rjmp	.+54     	; 0xad4 <_ZL9getNumberv+0x48>
     a9e:	9e 01       	movw	r18, r28
     aa0:	22 0f       	add	r18, r18
     aa2:	33 1f       	adc	r19, r19
     aa4:	93 e0       	ldi	r25, 0x03	; 3
     aa6:	cc 0f       	add	r28, r28
     aa8:	dd 1f       	adc	r29, r29
     aaa:	9a 95       	dec	r25
     aac:	e1 f7       	brne	.-8      	; 0xaa6 <_ZL9getNumberv+0x1a>
     aae:	c2 0f       	add	r28, r18
     ab0:	d3 1f       	adc	r29, r19
     ab2:	99 27       	eor	r25, r25
     ab4:	87 fd       	sbrc	r24, 7
     ab6:	90 95       	com	r25
     ab8:	c8 0f       	add	r28, r24
     aba:	d9 1f       	adc	r29, r25
     abc:	e0 97       	sbiw	r28, 0x30	; 48
     abe:	80 91 51 01 	lds	r24, 0x0151
     ac2:	90 91 52 01 	lds	r25, 0x0152
     ac6:	01 96       	adiw	r24, 0x01	; 1
     ac8:	90 93 52 01 	sts	0x0152, r25
     acc:	80 93 51 01 	sts	0x0151, r24
     ad0:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     ad4:	98 2f       	mov	r25, r24
     ad6:	90 53       	subi	r25, 0x30	; 48
     ad8:	9a 30       	cpi	r25, 0x0A	; 10
     ada:	08 f3       	brcs	.-62     	; 0xa9e <_ZL9getNumberv+0x12>
     adc:	ce 01       	movw	r24, r28
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	ff 90       	pop	r15
     ae4:	ef 90       	pop	r14
     ae6:	08 95       	ret

00000ae8 <_ZN15OrangutanBuzzer5init2Ev>:
     ae8:	10 92 6f 00 	sts	0x006F, r1
     aec:	83 e2       	ldi	r24, 0x23	; 35
     aee:	80 93 80 00 	sts	0x0080, r24
     af2:	81 e1       	ldi	r24, 0x11	; 17
     af4:	80 93 81 00 	sts	0x0081, r24
     af8:	10 92 82 00 	sts	0x0082, r1
     afc:	80 e1       	ldi	r24, 0x10	; 16
     afe:	97 e2       	ldi	r25, 0x27	; 39
     b00:	90 93 89 00 	sts	0x0089, r25
     b04:	80 93 88 00 	sts	0x0088, r24
     b08:	10 92 8b 00 	sts	0x008B, r1
     b0c:	10 92 8a 00 	sts	0x008A, r1
     b10:	22 9a       	sbi	0x04, 2	; 4
     b12:	78 94       	sei
     b14:	08 95       	ret

00000b16 <_ZN15OrangutanBuzzer4initEv>:
     b16:	80 91 50 01 	lds	r24, 0x0150
     b1a:	88 23       	and	r24, r24
     b1c:	29 f4       	brne	.+10     	; 0xb28 <_ZN15OrangutanBuzzer4initEv+0x12>
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	80 93 50 01 	sts	0x0150, r24
     b24:	0e 94 74 05 	call	0xae8	; 0xae8 <_ZN15OrangutanBuzzer5init2Ev>
     b28:	08 95       	ret

00000b2a <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     b2a:	a0 e0       	ldi	r26, 0x00	; 0
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	eb e9       	ldi	r30, 0x9B	; 155
     b30:	f5 e0       	ldi	r31, 0x05	; 5
     b32:	0c 94 1c 12 	jmp	0x2438	; 0x2438 <__prologue_saves__+0xc>
     b36:	8c 01       	movw	r16, r24
     b38:	5b 01       	movw	r10, r22
     b3a:	e4 2e       	mov	r14, r20
     b3c:	0e 94 8b 05 	call	0xb16	; 0xb16 <_ZN15OrangutanBuzzer4initEv>
     b40:	10 92 00 01 	sts	0x0100, r1
     b44:	17 ff       	sbrs	r17, 7
     b46:	04 c0       	rjmp	.+8      	; 0xb50 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x26>
     b48:	1f 77       	andi	r17, 0x7F	; 127
     b4a:	aa e0       	ldi	r26, 0x0A	; 10
     b4c:	fa 2e       	mov	r15, r26
     b4e:	02 c0       	rjmp	.+4      	; 0xb54 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2a>
     b50:	ff 24       	eor	r15, r15
     b52:	f3 94       	inc	r15
     b54:	c0 90 81 00 	lds	r12, 0x0081
     b58:	dd 24       	eor	r13, r13
     b5a:	28 ef       	ldi	r18, 0xF8	; 248
     b5c:	c2 22       	and	r12, r18
     b5e:	dd 24       	eor	r13, r13
     b60:	88 ec       	ldi	r24, 0xC8	; 200
     b62:	3f 2d       	mov	r19, r15
     b64:	38 9f       	mul	r19, r24
     b66:	c0 01       	movw	r24, r0
     b68:	11 24       	eor	r1, r1
     b6a:	80 17       	cp	r24, r16
     b6c:	91 07       	cpc	r25, r17
     b6e:	d8 f4       	brcc	.+54     	; 0xba6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x7c>
     b70:	e8 01       	movw	r28, r16
     b72:	67 e2       	ldi	r22, 0x27	; 39
     b74:	01 31       	cpi	r16, 0x11	; 17
     b76:	16 07       	cpc	r17, r22
     b78:	10 f0       	brcs	.+4      	; 0xb7e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x54>
     b7a:	c0 e1       	ldi	r28, 0x10	; 16
     b7c:	d7 e2       	ldi	r29, 0x27	; 39
     b7e:	be 01       	movw	r22, r28
     b80:	76 95       	lsr	r23
     b82:	67 95       	ror	r22
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	60 58       	subi	r22, 0x80	; 128
     b8a:	79 46       	sbci	r23, 0x69	; 105
     b8c:	87 46       	sbci	r24, 0x67	; 103
     b8e:	9f 4f       	sbci	r25, 0xFF	; 255
     b90:	9e 01       	movw	r18, r28
     b92:	40 e0       	ldi	r20, 0x00	; 0
     b94:	50 e0       	ldi	r21, 0x00	; 0
     b96:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
     b9a:	89 01       	movw	r16, r18
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	c8 2a       	or	r12, r24
     ba2:	d9 2a       	or	r13, r25
     ba4:	2c c0       	rjmp	.+88     	; 0xbfe <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd4>
     ba6:	98 e2       	ldi	r25, 0x28	; 40
     ba8:	f9 9e       	mul	r15, r25
     baa:	90 2d       	mov	r25, r0
     bac:	11 24       	eor	r1, r1
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	89 2e       	mov	r8, r25
     bb2:	e4 01       	movw	r28, r8
     bb4:	4e 01       	movw	r8, r28
     bb6:	98 2e       	mov	r9, r24
     bb8:	e4 01       	movw	r28, r8
     bba:	80 16       	cp	r8, r16
     bbc:	91 06       	cpc	r9, r17
     bbe:	08 f4       	brcc	.+2      	; 0xbc2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x98>
     bc0:	e8 01       	movw	r28, r16
     bc2:	be 01       	movw	r22, r28
     bc4:	76 95       	lsr	r23
     bc6:	67 95       	ror	r22
     bc8:	9e 01       	movw	r18, r28
     bca:	40 e0       	ldi	r20, 0x00	; 0
     bcc:	50 e0       	ldi	r21, 0x00	; 0
     bce:	8f 2d       	mov	r24, r15
     bd0:	8a 30       	cpi	r24, 0x0A	; 10
     bd2:	39 f4       	brne	.+14     	; 0xbe2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xb8>
     bd4:	80 e0       	ldi	r24, 0x00	; 0
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	60 5e       	subi	r22, 0xE0	; 224
     bda:	73 44       	sbci	r23, 0x43	; 67
     bdc:	81 44       	sbci	r24, 0x41	; 65
     bde:	9f 4f       	sbci	r25, 0xFF	; 255
     be0:	06 c0       	rjmp	.+12     	; 0xbee <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc4>
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	60 53       	subi	r22, 0x30	; 48
     be8:	7d 4e       	sbci	r23, 0xED	; 237
     bea:	8c 4e       	sbci	r24, 0xEC	; 236
     bec:	9f 4f       	sbci	r25, 0xFF	; 255
     bee:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
     bf2:	89 01       	movw	r16, r18
     bf4:	52 e0       	ldi	r21, 0x02	; 2
     bf6:	85 2e       	mov	r8, r21
     bf8:	91 2c       	mov	r9, r1
     bfa:	c8 28       	or	r12, r8
     bfc:	d9 28       	or	r13, r9
     bfe:	2f 2d       	mov	r18, r15
     c00:	2a 30       	cpi	r18, 0x0A	; 10
     c02:	39 f4       	brne	.+14     	; 0xc12 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xe8>
     c04:	ce 01       	movw	r24, r28
     c06:	05 96       	adiw	r24, 0x05	; 5
     c08:	6a e0       	ldi	r22, 0x0A	; 10
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
     c10:	eb 01       	movw	r28, r22
     c12:	33 e0       	ldi	r19, 0x03	; 3
     c14:	c8 3e       	cpi	r28, 0xE8	; 232
     c16:	d3 07       	cpc	r29, r19
     c18:	79 f0       	breq	.+30     	; 0xc38 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x10e>
     c1a:	be 01       	movw	r22, r28
     c1c:	80 e0       	ldi	r24, 0x00	; 0
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	95 01       	movw	r18, r10
     c22:	40 e0       	ldi	r20, 0x00	; 0
     c24:	50 e0       	ldi	r21, 0x00	; 0
     c26:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsi3>
     c2a:	28 ee       	ldi	r18, 0xE8	; 232
     c2c:	33 e0       	ldi	r19, 0x03	; 3
     c2e:	40 e0       	ldi	r20, 0x00	; 0
     c30:	50 e0       	ldi	r21, 0x00	; 0
     c32:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
     c36:	01 c0       	rjmp	.+2      	; 0xc3a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     c38:	95 01       	movw	r18, r10
     c3a:	10 92 6f 00 	sts	0x006F, r1
     c3e:	c0 92 81 00 	sts	0x0081, r12
     c42:	10 93 89 00 	sts	0x0089, r17
     c46:	00 93 88 00 	sts	0x0088, r16
     c4a:	40 91 88 00 	lds	r20, 0x0088
     c4e:	50 91 89 00 	lds	r21, 0x0089
     c52:	6e 2d       	mov	r22, r14
     c54:	60 31       	cpi	r22, 0x10	; 16
     c56:	08 f0       	brcs	.+2      	; 0xc5a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     c58:	6f e0       	ldi	r22, 0x0F	; 15
     c5a:	80 e1       	ldi	r24, 0x10	; 16
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	86 1b       	sub	r24, r22
     c60:	91 09       	sbc	r25, r1
     c62:	ba 01       	movw	r22, r20
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     c66:	76 95       	lsr	r23
     c68:	67 95       	ror	r22
     c6a:	8a 95       	dec	r24
     c6c:	e2 f7       	brpl	.-8      	; 0xc66 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     c6e:	70 93 8b 00 	sts	0x008B, r23
     c72:	60 93 8a 00 	sts	0x008A, r22
     c76:	30 93 58 01 	sts	0x0158, r19
     c7a:	20 93 57 01 	sts	0x0157, r18
     c7e:	86 b3       	in	r24, 0x16	; 22
     c80:	8f ef       	ldi	r24, 0xFF	; 255
     c82:	86 bb       	out	0x16, r24	; 22
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	80 93 6f 00 	sts	0x006F, r24
     c8a:	cd b7       	in	r28, 0x3d	; 61
     c8c:	de b7       	in	r29, 0x3e	; 62
     c8e:	ec e0       	ldi	r30, 0x0C	; 12
     c90:	0c 94 38 12 	jmp	0x2470	; 0x2470 <__epilogue_restores__+0xc>

00000c94 <play_frequency>:
     c94:	0e 94 95 05 	call	0xb2a	; 0xb2a <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     c98:	08 95       	ret

00000c9a <_ZN15OrangutanBuzzer8playNoteEhjh>:
     c9a:	9b 01       	movw	r18, r22
     c9c:	8f 3f       	cpi	r24, 0xFF	; 255
     c9e:	11 f0       	breq	.+4      	; 0xca4 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa>
     ca0:	44 23       	and	r20, r20
     ca2:	29 f4       	brne	.+10     	; 0xcae <_ZN15OrangutanBuzzer8playNoteEhjh+0x14>
     ca4:	88 ee       	ldi	r24, 0xE8	; 232
     ca6:	93 e0       	ldi	r25, 0x03	; 3
     ca8:	b9 01       	movw	r22, r18
     caa:	40 e0       	ldi	r20, 0x00	; 0
     cac:	49 c0       	rjmp	.+146    	; 0xd40 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa6>
     cae:	81 31       	cpi	r24, 0x11	; 17
     cb0:	30 f0       	brcs	.+12     	; 0xcbe <_ZN15OrangutanBuzzer8playNoteEhjh+0x24>
     cb2:	58 2f       	mov	r21, r24
     cb4:	50 51       	subi	r21, 0x10	; 16
     cb6:	50 36       	cpi	r21, 0x60	; 96
     cb8:	18 f0       	brcs	.+6      	; 0xcc0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     cba:	5f e5       	ldi	r21, 0x5F	; 95
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     cbe:	50 e0       	ldi	r21, 0x00	; 0
     cc0:	85 2f       	mov	r24, r21
     cc2:	6c e0       	ldi	r22, 0x0C	; 12
     cc4:	0e 94 87 11 	call	0x230e	; 0x230e <__udivmodqi4>
     cc8:	a8 2f       	mov	r26, r24
     cca:	b0 e0       	ldi	r27, 0x00	; 0
     ccc:	e4 ef       	ldi	r30, 0xF4	; 244
     cce:	ff ef       	ldi	r31, 0xFF	; 255
     cd0:	ae 9f       	mul	r26, r30
     cd2:	b0 01       	movw	r22, r0
     cd4:	af 9f       	mul	r26, r31
     cd6:	70 0d       	add	r23, r0
     cd8:	be 9f       	mul	r27, r30
     cda:	70 0d       	add	r23, r0
     cdc:	11 24       	eor	r1, r1
     cde:	65 0f       	add	r22, r21
     ce0:	71 1d       	adc	r23, r1
     ce2:	6c 30       	cpi	r22, 0x0C	; 12
     ce4:	71 05       	cpc	r23, r1
     ce6:	40 f4       	brcc	.+16     	; 0xcf8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5e>
     ce8:	fb 01       	movw	r30, r22
     cea:	ee 0f       	add	r30, r30
     cec:	ff 1f       	adc	r31, r31
     cee:	e6 5f       	subi	r30, 0xF6	; 246
     cf0:	fe 4f       	sbci	r31, 0xFE	; 254
     cf2:	60 81       	ld	r22, Z
     cf4:	71 81       	ldd	r23, Z+1	; 0x01
     cf6:	02 c0       	rjmp	.+4      	; 0xcfc <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     cf8:	60 e0       	ldi	r22, 0x00	; 0
     cfa:	70 e0       	ldi	r23, 0x00	; 0
     cfc:	87 30       	cpi	r24, 0x07	; 7
     cfe:	81 f0       	breq	.+32     	; 0xd20 <_ZN15OrangutanBuzzer8playNoteEhjh+0x86>
     d00:	08 2e       	mov	r0, r24
     d02:	02 c0       	rjmp	.+4      	; 0xd08 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6e>
     d04:	66 0f       	add	r22, r22
     d06:	77 1f       	adc	r23, r23
     d08:	0a 94       	dec	r0
     d0a:	e2 f7       	brpl	.-8      	; 0xd04 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6a>
     d0c:	82 30       	cpi	r24, 0x02	; 2
     d0e:	28 f0       	brcs	.+10     	; 0xd1a <_ZN15OrangutanBuzzer8playNoteEhjh+0x80>
     d10:	cb 01       	movw	r24, r22
     d12:	05 96       	adiw	r24, 0x05	; 5
     d14:	6a e0       	ldi	r22, 0x0A	; 10
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	0c c0       	rjmp	.+24     	; 0xd32 <_ZN15OrangutanBuzzer8playNoteEhjh+0x98>
     d1a:	60 50       	subi	r22, 0x00	; 0
     d1c:	70 48       	sbci	r23, 0x80	; 128
     d1e:	0b c0       	rjmp	.+22     	; 0xd36 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     d20:	cb 01       	movw	r24, r22
     d22:	b6 e0       	ldi	r27, 0x06	; 6
     d24:	88 0f       	add	r24, r24
     d26:	99 1f       	adc	r25, r25
     d28:	ba 95       	dec	r27
     d2a:	e1 f7       	brne	.-8      	; 0xd24 <_ZN15OrangutanBuzzer8playNoteEhjh+0x8a>
     d2c:	02 96       	adiw	r24, 0x02	; 2
     d2e:	65 e0       	ldi	r22, 0x05	; 5
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
     d36:	40 31       	cpi	r20, 0x10	; 16
     d38:	08 f0       	brcs	.+2      	; 0xd3c <_ZN15OrangutanBuzzer8playNoteEhjh+0xa2>
     d3a:	4f e0       	ldi	r20, 0x0F	; 15
     d3c:	cb 01       	movw	r24, r22
     d3e:	b9 01       	movw	r22, r18
     d40:	0e 94 95 05 	call	0xb2a	; 0xb2a <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     d44:	08 95       	ret

00000d46 <_ZL8nextNotev>:
     d46:	a0 e0       	ldi	r26, 0x00	; 0
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e9 ea       	ldi	r30, 0xA9	; 169
     d4c:	f6 e0       	ldi	r31, 0x06	; 6
     d4e:	0c 94 1b 12 	jmp	0x2436	; 0x2436 <__prologue_saves__+0xa>
     d52:	b0 90 01 01 	lds	r11, 0x0101
     d56:	80 91 53 01 	lds	r24, 0x0153
     d5a:	88 23       	and	r24, r24
     d5c:	61 f0       	breq	.+24     	; 0xd76 <_ZL8nextNotev+0x30>
     d5e:	60 91 54 01 	lds	r22, 0x0154
     d62:	66 23       	and	r22, r22
     d64:	41 f0       	breq	.+16     	; 0xd76 <_ZL8nextNotev+0x30>
     d66:	8f ef       	ldi	r24, 0xFF	; 255
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	40 e0       	ldi	r20, 0x00	; 0
     d6c:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZN15OrangutanBuzzer8playNoteEhjh>
     d70:	10 92 54 01 	sts	0x0154, r1
     d74:	34 c1       	rjmp	.+616    	; 0xfde <_ZL8nextNotev+0x298>
     d76:	c0 ec       	ldi	r28, 0xC0	; 192
     d78:	dd e5       	ldi	r29, 0x5D	; 93
     d7a:	aa 24       	eor	r10, r10
     d7c:	a3 94       	inc	r10
     d7e:	14 e0       	ldi	r17, 0x04	; 4
     d80:	71 2e       	mov	r7, r17
     d82:	00 ed       	ldi	r16, 0xD0	; 208
     d84:	17 e0       	ldi	r17, 0x07	; 7
     d86:	b4 e0       	ldi	r27, 0x04	; 4
     d88:	eb 2e       	mov	r14, r27
     d8a:	f1 2c       	mov	r15, r1
     d8c:	a4 ef       	ldi	r26, 0xF4	; 244
     d8e:	ca 2e       	mov	r12, r26
     d90:	a1 e0       	ldi	r26, 0x01	; 1
     d92:	da 2e       	mov	r13, r26
     d94:	ff e0       	ldi	r31, 0x0F	; 15
     d96:	8f 2e       	mov	r8, r31
     d98:	91 2c       	mov	r9, r1
     d9a:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     d9e:	20 91 51 01 	lds	r18, 0x0151
     da2:	30 91 52 01 	lds	r19, 0x0152
     da6:	2f 5f       	subi	r18, 0xFF	; 255
     da8:	3f 4f       	sbci	r19, 0xFF	; 255
     daa:	30 93 52 01 	sts	0x0152, r19
     dae:	20 93 51 01 	sts	0x0151, r18
     db2:	86 36       	cpi	r24, 0x66	; 102
     db4:	f1 f1       	breq	.+124    	; 0xe32 <_ZL8nextNotev+0xec>
     db6:	87 36       	cpi	r24, 0x67	; 103
     db8:	cc f4       	brge	.+50     	; 0xdec <_ZL8nextNotev+0xa6>
     dba:	82 36       	cpi	r24, 0x62	; 98
     dbc:	09 f4       	brne	.+2      	; 0xdc0 <_ZL8nextNotev+0x7a>
     dbe:	af c0       	rjmp	.+350    	; 0xf1e <_ZL8nextNotev+0x1d8>
     dc0:	83 36       	cpi	r24, 0x63	; 99
     dc2:	7c f4       	brge	.+30     	; 0xde2 <_ZL8nextNotev+0x9c>
     dc4:	8e 33       	cpi	r24, 0x3E	; 62
     dc6:	49 f1       	breq	.+82     	; 0xe1a <_ZL8nextNotev+0xd4>
     dc8:	8f 33       	cpi	r24, 0x3F	; 63
     dca:	3c f4       	brge	.+14     	; 0xdda <_ZL8nextNotev+0x94>
     dcc:	81 32       	cpi	r24, 0x21	; 33
     dce:	09 f4       	brne	.+2      	; 0xdd2 <_ZL8nextNotev+0x8c>
     dd0:	87 c0       	rjmp	.+270    	; 0xee0 <_ZL8nextNotev+0x19a>
     dd2:	8c 33       	cpi	r24, 0x3C	; 60
     dd4:	09 f0       	breq	.+2      	; 0xdd8 <_ZL8nextNotev+0x92>
     dd6:	9b c0       	rjmp	.+310    	; 0xf0e <_ZL8nextNotev+0x1c8>
     dd8:	22 c0       	rjmp	.+68     	; 0xe1e <_ZL8nextNotev+0xd8>
     dda:	81 36       	cpi	r24, 0x61	; 97
     ddc:	09 f0       	breq	.+2      	; 0xde0 <_ZL8nextNotev+0x9a>
     dde:	97 c0       	rjmp	.+302    	; 0xf0e <_ZL8nextNotev+0x1c8>
     de0:	9b c0       	rjmp	.+310    	; 0xf18 <_ZL8nextNotev+0x1d2>
     de2:	84 36       	cpi	r24, 0x64	; 100
     de4:	01 f1       	breq	.+64     	; 0xe26 <_ZL8nextNotev+0xe0>
     de6:	85 36       	cpi	r24, 0x65	; 101
     de8:	0c f5       	brge	.+66     	; 0xe2c <_ZL8nextNotev+0xe6>
     dea:	1b c0       	rjmp	.+54     	; 0xe22 <_ZL8nextNotev+0xdc>
     dec:	8f 36       	cpi	r24, 0x6F	; 111
     dee:	09 f4       	brne	.+2      	; 0xdf2 <_ZL8nextNotev+0xac>
     df0:	47 c0       	rjmp	.+142    	; 0xe80 <_ZL8nextNotev+0x13a>
     df2:	80 37       	cpi	r24, 0x70	; 112
     df4:	44 f4       	brge	.+16     	; 0xe06 <_ZL8nextNotev+0xc0>
     df6:	8c 36       	cpi	r24, 0x6C	; 108
     df8:	11 f1       	breq	.+68     	; 0xe3e <_ZL8nextNotev+0xf8>
     dfa:	8d 36       	cpi	r24, 0x6D	; 109
     dfc:	61 f1       	breq	.+88     	; 0xe56 <_ZL8nextNotev+0x110>
     dfe:	87 36       	cpi	r24, 0x67	; 103
     e00:	09 f0       	breq	.+2      	; 0xe04 <_ZL8nextNotev+0xbe>
     e02:	85 c0       	rjmp	.+266    	; 0xf0e <_ZL8nextNotev+0x1c8>
     e04:	19 c0       	rjmp	.+50     	; 0xe38 <_ZL8nextNotev+0xf2>
     e06:	84 37       	cpi	r24, 0x74	; 116
     e08:	09 f4       	brne	.+2      	; 0xe0c <_ZL8nextNotev+0xc6>
     e0a:	44 c0       	rjmp	.+136    	; 0xe94 <_ZL8nextNotev+0x14e>
     e0c:	86 37       	cpi	r24, 0x76	; 118
     e0e:	09 f4       	brne	.+2      	; 0xe12 <_ZL8nextNotev+0xcc>
     e10:	60 c0       	rjmp	.+192    	; 0xed2 <_ZL8nextNotev+0x18c>
     e12:	82 37       	cpi	r24, 0x72	; 114
     e14:	09 f0       	breq	.+2      	; 0xe18 <_ZL8nextNotev+0xd2>
     e16:	7b c0       	rjmp	.+246    	; 0xf0e <_ZL8nextNotev+0x1c8>
     e18:	39 c0       	rjmp	.+114    	; 0xe8c <_ZL8nextNotev+0x146>
     e1a:	b3 94       	inc	r11
     e1c:	be cf       	rjmp	.-132    	; 0xd9a <_ZL8nextNotev+0x54>
     e1e:	ba 94       	dec	r11
     e20:	bc cf       	rjmp	.-136    	; 0xd9a <_ZL8nextNotev+0x54>
     e22:	ee 24       	eor	r14, r14
     e24:	35 c0       	rjmp	.+106    	; 0xe90 <_ZL8nextNotev+0x14a>
     e26:	ee 24       	eor	r14, r14
     e28:	82 e0       	ldi	r24, 0x02	; 2
     e2a:	7b c0       	rjmp	.+246    	; 0xf22 <_ZL8nextNotev+0x1dc>
     e2c:	ee 24       	eor	r14, r14
     e2e:	84 e0       	ldi	r24, 0x04	; 4
     e30:	78 c0       	rjmp	.+240    	; 0xf22 <_ZL8nextNotev+0x1dc>
     e32:	ee 24       	eor	r14, r14
     e34:	85 e0       	ldi	r24, 0x05	; 5
     e36:	75 c0       	rjmp	.+234    	; 0xf22 <_ZL8nextNotev+0x1dc>
     e38:	ee 24       	eor	r14, r14
     e3a:	87 e0       	ldi	r24, 0x07	; 7
     e3c:	72 c0       	rjmp	.+228    	; 0xf22 <_ZL8nextNotev+0x1dc>
     e3e:	0e 94 46 05 	call	0xa8c	; 0xa8c <_ZL9getNumberv>
     e42:	bc 01       	movw	r22, r24
     e44:	90 93 03 01 	sts	0x0103, r25
     e48:	80 93 02 01 	sts	0x0102, r24
     e4c:	80 91 04 01 	lds	r24, 0x0104
     e50:	90 91 05 01 	lds	r25, 0x0105
     e54:	37 c0       	rjmp	.+110    	; 0xec4 <_ZL8nextNotev+0x17e>
     e56:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     e5a:	8c 36       	cpi	r24, 0x6C	; 108
     e5c:	19 f4       	brne	.+6      	; 0xe64 <_ZL8nextNotev+0x11e>
     e5e:	10 92 53 01 	sts	0x0153, r1
     e62:	04 c0       	rjmp	.+8      	; 0xe6c <_ZL8nextNotev+0x126>
     e64:	a0 92 53 01 	sts	0x0153, r10
     e68:	10 92 54 01 	sts	0x0154, r1
     e6c:	80 91 51 01 	lds	r24, 0x0151
     e70:	90 91 52 01 	lds	r25, 0x0152
     e74:	01 96       	adiw	r24, 0x01	; 1
     e76:	90 93 52 01 	sts	0x0152, r25
     e7a:	80 93 51 01 	sts	0x0151, r24
     e7e:	8d cf       	rjmp	.-230    	; 0xd9a <_ZL8nextNotev+0x54>
     e80:	0e 94 46 05 	call	0xa8c	; 0xa8c <_ZL9getNumberv>
     e84:	b8 2e       	mov	r11, r24
     e86:	80 93 01 01 	sts	0x0101, r24
     e8a:	87 cf       	rjmp	.-242    	; 0xd9a <_ZL8nextNotev+0x54>
     e8c:	ee 24       	eor	r14, r14
     e8e:	e3 94       	inc	r14
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	47 c0       	rjmp	.+142    	; 0xf22 <_ZL8nextNotev+0x1dc>
     e94:	0e 94 46 05 	call	0xa8c	; 0xa8c <_ZL9getNumberv>
     e98:	bc 01       	movw	r22, r24
     e9a:	ce 01       	movw	r24, r28
     e9c:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
     ea0:	cb 01       	movw	r24, r22
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	53 e0       	ldi	r21, 0x03	; 3
     ea8:	66 0f       	add	r22, r22
     eaa:	77 1f       	adc	r23, r23
     eac:	5a 95       	dec	r21
     eae:	e1 f7       	brne	.-8      	; 0xea8 <_ZL8nextNotev+0x162>
     eb0:	86 0f       	add	r24, r22
     eb2:	97 1f       	adc	r25, r23
     eb4:	90 93 05 01 	sts	0x0105, r25
     eb8:	80 93 04 01 	sts	0x0104, r24
     ebc:	60 91 02 01 	lds	r22, 0x0102
     ec0:	70 91 03 01 	lds	r23, 0x0103
     ec4:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
     ec8:	70 93 07 01 	sts	0x0107, r23
     ecc:	60 93 06 01 	sts	0x0106, r22
     ed0:	64 cf       	rjmp	.-312    	; 0xd9a <_ZL8nextNotev+0x54>
     ed2:	0e 94 46 05 	call	0xa8c	; 0xa8c <_ZL9getNumberv>
     ed6:	90 93 09 01 	sts	0x0109, r25
     eda:	80 93 08 01 	sts	0x0108, r24
     ede:	5d cf       	rjmp	.-326    	; 0xd9a <_ZL8nextNotev+0x54>
     ee0:	70 92 01 01 	sts	0x0101, r7
     ee4:	10 93 05 01 	sts	0x0105, r17
     ee8:	00 93 04 01 	sts	0x0104, r16
     eec:	f0 92 03 01 	sts	0x0103, r15
     ef0:	e0 92 02 01 	sts	0x0102, r14
     ef4:	d0 92 07 01 	sts	0x0107, r13
     ef8:	c0 92 06 01 	sts	0x0106, r12
     efc:	90 92 09 01 	sts	0x0109, r9
     f00:	80 92 08 01 	sts	0x0108, r8
     f04:	10 92 53 01 	sts	0x0153, r1
     f08:	44 e0       	ldi	r20, 0x04	; 4
     f0a:	b4 2e       	mov	r11, r20
     f0c:	46 cf       	rjmp	.-372    	; 0xd9a <_ZL8nextNotev+0x54>
     f0e:	10 92 52 01 	sts	0x0152, r1
     f12:	10 92 51 01 	sts	0x0151, r1
     f16:	63 c0       	rjmp	.+198    	; 0xfde <_ZL8nextNotev+0x298>
     f18:	ee 24       	eor	r14, r14
     f1a:	89 e0       	ldi	r24, 0x09	; 9
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <_ZL8nextNotev+0x1dc>
     f1e:	ee 24       	eor	r14, r14
     f20:	8b e0       	ldi	r24, 0x0B	; 11
     f22:	9c e0       	ldi	r25, 0x0C	; 12
     f24:	b9 9e       	mul	r11, r25
     f26:	b0 2c       	mov	r11, r0
     f28:	11 24       	eor	r1, r1
     f2a:	b8 0e       	add	r11, r24
     f2c:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     f30:	8b 32       	cpi	r24, 0x2B	; 43
     f32:	11 f0       	breq	.+4      	; 0xf38 <_ZL8nextNotev+0x1f2>
     f34:	83 32       	cpi	r24, 0x23	; 35
     f36:	b9 f4       	brne	.+46     	; 0xf66 <_ZL8nextNotev+0x220>
     f38:	80 91 51 01 	lds	r24, 0x0151
     f3c:	90 91 52 01 	lds	r25, 0x0152
     f40:	01 96       	adiw	r24, 0x01	; 1
     f42:	90 93 52 01 	sts	0x0152, r25
     f46:	80 93 51 01 	sts	0x0151, r24
     f4a:	b3 94       	inc	r11
     f4c:	ef cf       	rjmp	.-34     	; 0xf2c <_ZL8nextNotev+0x1e6>
     f4e:	80 91 51 01 	lds	r24, 0x0151
     f52:	90 91 52 01 	lds	r25, 0x0152
     f56:	01 96       	adiw	r24, 0x01	; 1
     f58:	90 93 52 01 	sts	0x0152, r25
     f5c:	80 93 51 01 	sts	0x0151, r24
     f60:	ba 94       	dec	r11
     f62:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     f66:	8d 32       	cpi	r24, 0x2D	; 45
     f68:	91 f3       	breq	.-28     	; 0xf4e <_ZL8nextNotev+0x208>
     f6a:	c0 91 06 01 	lds	r28, 0x0106
     f6e:	d0 91 07 01 	lds	r29, 0x0107
     f72:	81 53       	subi	r24, 0x31	; 49
     f74:	88 30       	cpi	r24, 0x08	; 8
     f76:	58 f4       	brcc	.+22     	; 0xf8e <_ZL8nextNotev+0x248>
     f78:	c0 91 04 01 	lds	r28, 0x0104
     f7c:	d0 91 05 01 	lds	r29, 0x0105
     f80:	0e 94 46 05 	call	0xa8c	; 0xa8c <_ZL9getNumberv>
     f84:	bc 01       	movw	r22, r24
     f86:	ce 01       	movw	r24, r28
     f88:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
     f8c:	eb 01       	movw	r28, r22
     f8e:	8e 01       	movw	r16, r28
     f90:	0b c0       	rjmp	.+22     	; 0xfa8 <_ZL8nextNotev+0x262>
     f92:	80 91 51 01 	lds	r24, 0x0151
     f96:	90 91 52 01 	lds	r25, 0x0152
     f9a:	01 96       	adiw	r24, 0x01	; 1
     f9c:	90 93 52 01 	sts	0x0152, r25
     fa0:	80 93 51 01 	sts	0x0151, r24
     fa4:	c0 0f       	add	r28, r16
     fa6:	d1 1f       	adc	r29, r17
     fa8:	16 95       	lsr	r17
     faa:	07 95       	ror	r16
     fac:	0e 94 24 05 	call	0xa48	; 0xa48 <_ZL16currentCharacterv>
     fb0:	8e 32       	cpi	r24, 0x2E	; 46
     fb2:	79 f3       	breq	.-34     	; 0xf92 <_ZL8nextNotev+0x24c>
     fb4:	80 91 53 01 	lds	r24, 0x0153
     fb8:	88 23       	and	r24, r24
     fba:	39 f0       	breq	.+14     	; 0xfca <_ZL8nextNotev+0x284>
     fbc:	ce 01       	movw	r24, r28
     fbe:	96 95       	lsr	r25
     fc0:	87 95       	ror	r24
     fc2:	80 93 54 01 	sts	0x0154, r24
     fc6:	c8 1b       	sub	r28, r24
     fc8:	d1 09       	sbc	r29, r1
     fca:	ee 20       	and	r14, r14
     fcc:	11 f0       	breq	.+4      	; 0xfd2 <_ZL8nextNotev+0x28c>
     fce:	bb 24       	eor	r11, r11
     fd0:	ba 94       	dec	r11
     fd2:	8b 2d       	mov	r24, r11
     fd4:	be 01       	movw	r22, r28
     fd6:	40 91 08 01 	lds	r20, 0x0108
     fda:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZN15OrangutanBuzzer8playNoteEhjh>
     fde:	cd b7       	in	r28, 0x3d	; 61
     fe0:	de b7       	in	r29, 0x3e	; 62
     fe2:	ed e0       	ldi	r30, 0x0D	; 13
     fe4:	0c 94 37 12 	jmp	0x246e	; 0x246e <__epilogue_restores__+0xa>

00000fe8 <__vector_13>:
     fe8:	1f 92       	push	r1
     fea:	0f 92       	push	r0
     fec:	0f b6       	in	r0, 0x3f	; 63
     fee:	0f 92       	push	r0
     ff0:	11 24       	eor	r1, r1
     ff2:	2f 93       	push	r18
     ff4:	3f 93       	push	r19
     ff6:	4f 93       	push	r20
     ff8:	5f 93       	push	r21
     ffa:	6f 93       	push	r22
     ffc:	7f 93       	push	r23
     ffe:	8f 93       	push	r24
    1000:	9f 93       	push	r25
    1002:	af 93       	push	r26
    1004:	bf 93       	push	r27
    1006:	ef 93       	push	r30
    1008:	ff 93       	push	r31
    100a:	80 91 57 01 	lds	r24, 0x0157
    100e:	90 91 58 01 	lds	r25, 0x0158
    1012:	9c 01       	movw	r18, r24
    1014:	21 50       	subi	r18, 0x01	; 1
    1016:	30 40       	sbci	r19, 0x00	; 0
    1018:	30 93 58 01 	sts	0x0158, r19
    101c:	20 93 57 01 	sts	0x0157, r18
    1020:	00 97       	sbiw	r24, 0x00	; 0
    1022:	11 f5       	brne	.+68     	; 0x1068 <__vector_13+0x80>
    1024:	10 92 6f 00 	sts	0x006F, r1
    1028:	78 94       	sei
    102a:	80 91 81 00 	lds	r24, 0x0081
    102e:	88 7f       	andi	r24, 0xF8	; 248
    1030:	81 60       	ori	r24, 0x01	; 1
    1032:	80 93 81 00 	sts	0x0081, r24
    1036:	80 e1       	ldi	r24, 0x10	; 16
    1038:	97 e2       	ldi	r25, 0x27	; 39
    103a:	90 93 89 00 	sts	0x0089, r25
    103e:	80 93 88 00 	sts	0x0088, r24
    1042:	10 92 8b 00 	sts	0x008B, r1
    1046:	10 92 8a 00 	sts	0x008A, r1
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	80 93 00 01 	sts	0x0100, r24
    1050:	80 91 51 01 	lds	r24, 0x0151
    1054:	90 91 52 01 	lds	r25, 0x0152
    1058:	00 97       	sbiw	r24, 0x00	; 0
    105a:	31 f0       	breq	.+12     	; 0x1068 <__vector_13+0x80>
    105c:	80 91 56 01 	lds	r24, 0x0156
    1060:	88 23       	and	r24, r24
    1062:	11 f4       	brne	.+4      	; 0x1068 <__vector_13+0x80>
    1064:	0e 94 a3 06 	call	0xd46	; 0xd46 <_ZL8nextNotev>
    1068:	ff 91       	pop	r31
    106a:	ef 91       	pop	r30
    106c:	bf 91       	pop	r27
    106e:	af 91       	pop	r26
    1070:	9f 91       	pop	r25
    1072:	8f 91       	pop	r24
    1074:	7f 91       	pop	r23
    1076:	6f 91       	pop	r22
    1078:	5f 91       	pop	r21
    107a:	4f 91       	pop	r20
    107c:	3f 91       	pop	r19
    107e:	2f 91       	pop	r18
    1080:	0f 90       	pop	r0
    1082:	0f be       	out	0x3f, r0	; 63
    1084:	0f 90       	pop	r0
    1086:	1f 90       	pop	r1
    1088:	18 95       	reti

0000108a <delayMicroseconds.clone.0>:
    108a:	81 e0       	ldi	r24, 0x01	; 1
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	6f 93       	push	r22
    1090:	64 e0       	ldi	r22, 0x04	; 4
    1092:	6a 95       	dec	r22
    1094:	f1 f7       	brne	.-4      	; 0x1092 <delayMicroseconds.clone.0+0x8>
    1096:	6f 91       	pop	r22
    1098:	01 97       	sbiw	r24, 0x01	; 1
    109a:	c9 f7       	brne	.-14     	; 0x108e <delayMicroseconds.clone.0+0x4>
    109c:	08 95       	ret

0000109e <_ZN12OrangutanLCD8busyWaitEv>:
    109e:	0f 93       	push	r16
    10a0:	1f 93       	push	r17
    10a2:	cf 93       	push	r28
    10a4:	df 93       	push	r29
    10a6:	1a b1       	in	r17, 0x0a	; 10
    10a8:	57 98       	cbi	0x0a, 7	; 10
    10aa:	5a 98       	cbi	0x0b, 2	; 11
    10ac:	28 9a       	sbi	0x05, 0	; 5
    10ae:	c0 e0       	ldi	r28, 0x00	; 0
    10b0:	d0 e0       	ldi	r29, 0x00	; 0
    10b2:	0e 94 45 08 	call	0x108a	; 0x108a <delayMicroseconds.clone.0>
    10b6:	5c 9a       	sbi	0x0b, 4	; 11
    10b8:	0e 94 45 08 	call	0x108a	; 0x108a <delayMicroseconds.clone.0>
    10bc:	09 b1       	in	r16, 0x09	; 9
    10be:	5c 98       	cbi	0x0b, 4	; 11
    10c0:	0e 94 45 08 	call	0x108a	; 0x108a <delayMicroseconds.clone.0>
    10c4:	5c 9a       	sbi	0x0b, 4	; 11
    10c6:	0e 94 45 08 	call	0x108a	; 0x108a <delayMicroseconds.clone.0>
    10ca:	5c 98       	cbi	0x0b, 4	; 11
    10cc:	07 ff       	sbrs	r16, 7
    10ce:	11 c0       	rjmp	.+34     	; 0x10f2 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    10d0:	24 96       	adiw	r28, 0x04	; 4
    10d2:	9e 01       	movw	r18, r28
    10d4:	40 e0       	ldi	r20, 0x00	; 0
    10d6:	50 e0       	ldi	r21, 0x00	; 0
    10d8:	80 91 5d 01 	lds	r24, 0x015D
    10dc:	90 91 5e 01 	lds	r25, 0x015E
    10e0:	a0 91 5f 01 	lds	r26, 0x015F
    10e4:	b0 91 60 01 	lds	r27, 0x0160
    10e8:	28 17       	cp	r18, r24
    10ea:	39 07       	cpc	r19, r25
    10ec:	4a 07       	cpc	r20, r26
    10ee:	5b 07       	cpc	r21, r27
    10f0:	00 f3       	brcs	.-64     	; 0x10b2 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    10f2:	1a b9       	out	0x0a, r17	; 10
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	0f 91       	pop	r16
    10fc:	08 95       	ret

000010fe <_ZN12OrangutanLCD8sendDataEh>:
    10fe:	65 b1       	in	r22, 0x05	; 5
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	ac 01       	movw	r20, r24
    1104:	41 70       	andi	r20, 0x01	; 1
    1106:	50 70       	andi	r21, 0x00	; 0
    1108:	44 0f       	add	r20, r20
    110a:	55 1f       	adc	r21, r21
    110c:	9c 01       	movw	r18, r24
    110e:	26 70       	andi	r18, 0x06	; 6
    1110:	30 70       	andi	r19, 0x00	; 0
    1112:	53 e0       	ldi	r21, 0x03	; 3
    1114:	22 0f       	add	r18, r18
    1116:	33 1f       	adc	r19, r19
    1118:	5a 95       	dec	r21
    111a:	e1 f7       	brne	.-8      	; 0x1114 <_ZN12OrangutanLCD8sendDataEh+0x16>
    111c:	24 2b       	or	r18, r20
    111e:	6d 7c       	andi	r22, 0xCD	; 205
    1120:	26 2b       	or	r18, r22
    1122:	25 b9       	out	0x05, r18	; 5
    1124:	2b b1       	in	r18, 0x0b	; 11
    1126:	88 70       	andi	r24, 0x08	; 8
    1128:	90 70       	andi	r25, 0x00	; 0
    112a:	34 e0       	ldi	r19, 0x04	; 4
    112c:	88 0f       	add	r24, r24
    112e:	99 1f       	adc	r25, r25
    1130:	3a 95       	dec	r19
    1132:	e1 f7       	brne	.-8      	; 0x112c <_ZN12OrangutanLCD8sendDataEh+0x2e>
    1134:	2f 77       	andi	r18, 0x7F	; 127
    1136:	28 2b       	or	r18, r24
    1138:	2b b9       	out	0x0b, r18	; 11
    113a:	5c 9a       	sbi	0x0b, 4	; 11
    113c:	0e 94 45 08 	call	0x108a	; 0x108a <delayMicroseconds.clone.0>
    1140:	5c 98       	cbi	0x0b, 4	; 11
    1142:	0e 94 45 08 	call	0x108a	; 0x108a <delayMicroseconds.clone.0>
    1146:	08 95       	ret

00001148 <_ZN12OrangutanLCD4sendEhhh>:
    1148:	a2 e0       	ldi	r26, 0x02	; 2
    114a:	b0 e0       	ldi	r27, 0x00	; 0
    114c:	ea ea       	ldi	r30, 0xAA	; 170
    114e:	f8 e0       	ldi	r31, 0x08	; 8
    1150:	0c 94 21 12 	jmp	0x2442	; 0x2442 <__prologue_saves__+0x16>
    1154:	18 2f       	mov	r17, r24
    1156:	4a 83       	std	Y+2, r20	; 0x02
    1158:	69 83       	std	Y+1, r22	; 0x01
    115a:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD4initEv>
    115e:	0e 94 4f 08 	call	0x109e	; 0x109e <_ZN12OrangutanLCD8busyWaitEv>
    1162:	f4 b0       	in	r15, 0x04	; 4
    1164:	05 b1       	in	r16, 0x05	; 5
    1166:	da b0       	in	r13, 0x0a	; 10
    1168:	eb b0       	in	r14, 0x0b	; 11
    116a:	28 98       	cbi	0x05, 0	; 5
    116c:	69 81       	ldd	r22, Y+1	; 0x01
    116e:	4a 81       	ldd	r20, Y+2	; 0x02
    1170:	66 23       	and	r22, r22
    1172:	11 f0       	breq	.+4      	; 0x1178 <_ZN12OrangutanLCD4sendEhhh+0x30>
    1174:	5a 9a       	sbi	0x0b, 2	; 11
    1176:	01 c0       	rjmp	.+2      	; 0x117a <_ZN12OrangutanLCD4sendEhhh+0x32>
    1178:	5a 98       	cbi	0x0b, 2	; 11
    117a:	84 b1       	in	r24, 0x04	; 4
    117c:	82 63       	ori	r24, 0x32	; 50
    117e:	84 b9       	out	0x04, r24	; 4
    1180:	57 9a       	sbi	0x0a, 7	; 10
    1182:	41 30       	cpi	r20, 0x01	; 1
    1184:	29 f0       	breq	.+10     	; 0x1190 <_ZN12OrangutanLCD4sendEhhh+0x48>
    1186:	81 2f       	mov	r24, r17
    1188:	82 95       	swap	r24
    118a:	8f 70       	andi	r24, 0x0F	; 15
    118c:	0e 94 7f 08 	call	0x10fe	; 0x10fe <_ZN12OrangutanLCD8sendDataEh>
    1190:	81 2f       	mov	r24, r17
    1192:	8f 70       	andi	r24, 0x0F	; 15
    1194:	0e 94 7f 08 	call	0x10fe	; 0x10fe <_ZN12OrangutanLCD8sendDataEh>
    1198:	da b8       	out	0x0a, r13	; 10
    119a:	eb b8       	out	0x0b, r14	; 11
    119c:	f4 b8       	out	0x04, r15	; 4
    119e:	05 b9       	out	0x05, r16	; 5
    11a0:	22 96       	adiw	r28, 0x02	; 2
    11a2:	e7 e0       	ldi	r30, 0x07	; 7
    11a4:	0c 94 3d 12 	jmp	0x247a	; 0x247a <__epilogue_restores__+0x16>

000011a8 <_ZN12OrangutanLCD8send_cmdEh>:
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	42 e0       	ldi	r20, 0x02	; 2
    11ac:	0e 94 a4 08 	call	0x1148	; 0x1148 <_ZN12OrangutanLCD4sendEhhh>
    11b0:	08 95       	ret

000011b2 <_ZN12OrangutanLCD9send_dataEh>:
    11b2:	61 e0       	ldi	r22, 0x01	; 1
    11b4:	42 e0       	ldi	r20, 0x02	; 2
    11b6:	0e 94 a4 08 	call	0x1148	; 0x1148 <_ZN12OrangutanLCD4sendEhhh>
    11ba:	08 95       	ret

000011bc <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    11bc:	ef 92       	push	r14
    11be:	ff 92       	push	r15
    11c0:	1f 93       	push	r17
    11c2:	df 93       	push	r29
    11c4:	cf 93       	push	r28
    11c6:	0f 92       	push	r0
    11c8:	cd b7       	in	r28, 0x3d	; 61
    11ca:	de b7       	in	r29, 0x3e	; 62
    11cc:	66 0f       	add	r22, r22
    11ce:	66 0f       	add	r22, r22
    11d0:	66 0f       	add	r22, r22
    11d2:	48 2f       	mov	r20, r24
    11d4:	59 2f       	mov	r21, r25
    11d6:	7a 01       	movw	r14, r20
    11d8:	10 e0       	ldi	r17, 0x00	; 0
    11da:	81 2f       	mov	r24, r17
    11dc:	86 0f       	add	r24, r22
    11de:	80 64       	ori	r24, 0x40	; 64
    11e0:	69 83       	std	Y+1, r22	; 0x01
    11e2:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    11e6:	f7 01       	movw	r30, r14
    11e8:	84 91       	lpm	r24, Z
    11ea:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_ZN12OrangutanLCD9send_dataEh>
    11ee:	1f 5f       	subi	r17, 0xFF	; 255
    11f0:	08 94       	sec
    11f2:	e1 1c       	adc	r14, r1
    11f4:	f1 1c       	adc	r15, r1
    11f6:	69 81       	ldd	r22, Y+1	; 0x01
    11f8:	18 30       	cpi	r17, 0x08	; 8
    11fa:	79 f7       	brne	.-34     	; 0x11da <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x1e>
    11fc:	0f 90       	pop	r0
    11fe:	cf 91       	pop	r28
    1200:	df 91       	pop	r29
    1202:	1f 91       	pop	r17
    1204:	ff 90       	pop	r15
    1206:	ef 90       	pop	r14
    1208:	08 95       	ret

0000120a <lcd_load_custom_character>:
    120a:	0e 94 de 08 	call	0x11bc	; 0x11bc <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    120e:	08 95       	ret

00001210 <print_character>:
    1210:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_ZN12OrangutanLCD9send_dataEh>
    1214:	08 95       	ret

00001216 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1216:	60 e0       	ldi	r22, 0x00	; 0
    1218:	41 e0       	ldi	r20, 0x01	; 1
    121a:	0e 94 a4 08 	call	0x1148	; 0x1148 <_ZN12OrangutanLCD4sendEhhh>
    121e:	08 95       	ret

00001220 <_ZN12OrangutanLCD5init2Ev>:
    1220:	80 e1       	ldi	r24, 0x10	; 16
    1222:	97 e2       	ldi	r25, 0x27	; 39
    1224:	a0 e0       	ldi	r26, 0x00	; 0
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	80 93 5d 01 	sts	0x015D, r24
    122c:	90 93 5e 01 	sts	0x015E, r25
    1230:	a0 93 5f 01 	sts	0x015F, r26
    1234:	b0 93 60 01 	sts	0x0160, r27
    1238:	52 9a       	sbi	0x0a, 2	; 10
    123a:	20 9a       	sbi	0x04, 0	; 4
    123c:	54 9a       	sbi	0x0a, 4	; 10
    123e:	8e e1       	ldi	r24, 0x1E	; 30
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
    1246:	83 e0       	ldi	r24, 0x03	; 3
    1248:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    124c:	86 e0       	ldi	r24, 0x06	; 6
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
    1254:	83 e0       	ldi	r24, 0x03	; 3
    1256:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    125a:	82 e0       	ldi	r24, 0x02	; 2
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
    1262:	83 e0       	ldi	r24, 0x03	; 3
    1264:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1268:	82 e0       	ldi	r24, 0x02	; 2
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
    1270:	82 e0       	ldi	r24, 0x02	; 2
    1272:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1276:	82 e0       	ldi	r24, 0x02	; 2
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 94 a7 0b 	call	0x174e	; 0x174e <delay_ms>
    127e:	88 e2       	ldi	r24, 0x28	; 40
    1280:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    1284:	88 e0       	ldi	r24, 0x08	; 8
    1286:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    128a:	81 e0       	ldi	r24, 0x01	; 1
    128c:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    1290:	86 e0       	ldi	r24, 0x06	; 6
    1292:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    1296:	8c e0       	ldi	r24, 0x0C	; 12
    1298:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    129c:	08 95       	ret

0000129e <_ZN12OrangutanLCD4initEv>:
    129e:	80 91 61 01 	lds	r24, 0x0161
    12a2:	88 23       	and	r24, r24
    12a4:	29 f4       	brne	.+10     	; 0x12b0 <_ZN12OrangutanLCD4initEv+0x12>
    12a6:	81 e0       	ldi	r24, 0x01	; 1
    12a8:	80 93 61 01 	sts	0x0161, r24
    12ac:	0e 94 10 09 	call	0x1220	; 0x1220 <_ZN12OrangutanLCD5init2Ev>
    12b0:	08 95       	ret

000012b2 <_ZN12OrangutanLCD5clearEv>:
    12b2:	81 e0       	ldi	r24, 0x01	; 1
    12b4:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    12b8:	80 91 59 01 	lds	r24, 0x0159
    12bc:	90 91 5a 01 	lds	r25, 0x015A
    12c0:	00 97       	sbiw	r24, 0x00	; 0
    12c2:	11 f1       	breq	.+68     	; 0x1308 <_ZN12OrangutanLCD5clearEv+0x56>
    12c4:	a0 e0       	ldi	r26, 0x00	; 0
    12c6:	b0 e2       	ldi	r27, 0x20	; 32
    12c8:	08 c0       	rjmp	.+16     	; 0x12da <_ZN12OrangutanLCD5clearEv+0x28>
    12ca:	e0 91 59 01 	lds	r30, 0x0159
    12ce:	f0 91 5a 01 	lds	r31, 0x015A
    12d2:	e2 0f       	add	r30, r18
    12d4:	f3 1f       	adc	r31, r19
    12d6:	b0 83       	st	Z, r27
    12d8:	af 5f       	subi	r26, 0xFF	; 255
    12da:	2a 2f       	mov	r18, r26
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	80 91 22 01 	lds	r24, 0x0122
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	01 97       	sbiw	r24, 0x01	; 1
    12e6:	60 91 23 01 	lds	r22, 0x0123
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	86 9f       	mul	r24, r22
    12ee:	a0 01       	movw	r20, r0
    12f0:	87 9f       	mul	r24, r23
    12f2:	50 0d       	add	r21, r0
    12f4:	96 9f       	mul	r25, r22
    12f6:	50 0d       	add	r21, r0
    12f8:	11 24       	eor	r1, r1
    12fa:	24 17       	cp	r18, r20
    12fc:	35 07       	cpc	r19, r21
    12fe:	2c f3       	brlt	.-54     	; 0x12ca <_ZN12OrangutanLCD5clearEv+0x18>
    1300:	10 92 5c 01 	sts	0x015C, r1
    1304:	10 92 5b 01 	sts	0x015B, r1
    1308:	08 95       	ret

0000130a <clear>:
    130a:	0e 94 59 09 	call	0x12b2	; 0x12b2 <_ZN12OrangutanLCD5clearEv>
    130e:	08 95       	ret

00001310 <_ZN12OrangutanLCD5printEPKc>:
    1310:	ef 92       	push	r14
    1312:	ff 92       	push	r15
    1314:	cf 93       	push	r28
    1316:	df 93       	push	r29
    1318:	e8 2e       	mov	r14, r24
    131a:	e7 01       	movw	r28, r14
    131c:	7e 01       	movw	r14, r28
    131e:	f9 2e       	mov	r15, r25
    1320:	e7 01       	movw	r28, r14
    1322:	02 c0       	rjmp	.+4      	; 0x1328 <_ZN12OrangutanLCD5printEPKc+0x18>
    1324:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_ZN12OrangutanLCD9send_dataEh>
    1328:	89 91       	ld	r24, Y+
    132a:	88 23       	and	r24, r24
    132c:	d9 f7       	brne	.-10     	; 0x1324 <_ZN12OrangutanLCD5printEPKc+0x14>
    132e:	df 91       	pop	r29
    1330:	cf 91       	pop	r28
    1332:	ff 90       	pop	r15
    1334:	ef 90       	pop	r14
    1336:	08 95       	ret

00001338 <print>:
    1338:	0e 94 88 09 	call	0x1310	; 0x1310 <_ZN12OrangutanLCD5printEPKc>
    133c:	08 95       	ret

0000133e <_ZN12OrangutanLCD5printEm>:
    133e:	aa e0       	ldi	r26, 0x0A	; 10
    1340:	b0 e0       	ldi	r27, 0x00	; 0
    1342:	e5 ea       	ldi	r30, 0xA5	; 165
    1344:	f9 e0       	ldi	r31, 0x09	; 9
    1346:	0c 94 1e 12 	jmp	0x243c	; 0x243c <__prologue_saves__+0x10>
    134a:	9b 01       	movw	r18, r22
    134c:	ac 01       	movw	r20, r24
    134e:	1a e0       	ldi	r17, 0x0A	; 10
    1350:	ea e0       	ldi	r30, 0x0A	; 10
    1352:	ce 2e       	mov	r12, r30
    1354:	d1 2c       	mov	r13, r1
    1356:	e1 2c       	mov	r14, r1
    1358:	f1 2c       	mov	r15, r1
    135a:	5e 01       	movw	r10, r28
    135c:	08 94       	sec
    135e:	a1 1c       	adc	r10, r1
    1360:	b1 1c       	adc	r11, r1
    1362:	02 2f       	mov	r16, r18
    1364:	ca 01       	movw	r24, r20
    1366:	b9 01       	movw	r22, r18
    1368:	a7 01       	movw	r20, r14
    136a:	96 01       	movw	r18, r12
    136c:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    1370:	11 50       	subi	r17, 0x01	; 1
    1372:	f5 01       	movw	r30, r10
    1374:	e1 0f       	add	r30, r17
    1376:	f1 1d       	adc	r31, r1
    1378:	00 5d       	subi	r16, 0xD0	; 208
    137a:	92 2f       	mov	r25, r18
    137c:	99 0f       	add	r25, r25
    137e:	89 2f       	mov	r24, r25
    1380:	88 0f       	add	r24, r24
    1382:	88 0f       	add	r24, r24
    1384:	89 0f       	add	r24, r25
    1386:	08 1b       	sub	r16, r24
    1388:	00 83       	st	Z, r16
    138a:	21 15       	cp	r18, r1
    138c:	31 05       	cpc	r19, r1
    138e:	41 05       	cpc	r20, r1
    1390:	51 05       	cpc	r21, r1
    1392:	39 f7       	brne	.-50     	; 0x1362 <_ZN12OrangutanLCD5printEm+0x24>
    1394:	08 c0       	rjmp	.+16     	; 0x13a6 <_ZN12OrangutanLCD5printEm+0x68>
    1396:	f6 01       	movw	r30, r12
    1398:	e1 0f       	add	r30, r17
    139a:	f1 1d       	adc	r31, r1
    139c:	80 81       	ld	r24, Z
    139e:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_ZN12OrangutanLCD9send_dataEh>
    13a2:	1f 5f       	subi	r17, 0xFF	; 255
    13a4:	04 c0       	rjmp	.+8      	; 0x13ae <_ZN12OrangutanLCD5printEm+0x70>
    13a6:	6e 01       	movw	r12, r28
    13a8:	08 94       	sec
    13aa:	c1 1c       	adc	r12, r1
    13ac:	d1 1c       	adc	r13, r1
    13ae:	1a 30       	cpi	r17, 0x0A	; 10
    13b0:	90 f3       	brcs	.-28     	; 0x1396 <_ZN12OrangutanLCD5printEm+0x58>
    13b2:	2a 96       	adiw	r28, 0x0a	; 10
    13b4:	ea e0       	ldi	r30, 0x0A	; 10
    13b6:	0c 94 3a 12 	jmp	0x2474	; 0x2474 <__epilogue_restores__+0x10>

000013ba <_ZN12OrangutanLCD5printEl>:
    13ba:	ef 92       	push	r14
    13bc:	ff 92       	push	r15
    13be:	0f 93       	push	r16
    13c0:	1f 93       	push	r17
    13c2:	7b 01       	movw	r14, r22
    13c4:	8c 01       	movw	r16, r24
    13c6:	97 ff       	sbrs	r25, 7
    13c8:	0b c0       	rjmp	.+22     	; 0x13e0 <_ZN12OrangutanLCD5printEl+0x26>
    13ca:	10 95       	com	r17
    13cc:	00 95       	com	r16
    13ce:	f0 94       	com	r15
    13d0:	e0 94       	com	r14
    13d2:	e1 1c       	adc	r14, r1
    13d4:	f1 1c       	adc	r15, r1
    13d6:	01 1d       	adc	r16, r1
    13d8:	11 1d       	adc	r17, r1
    13da:	8d e2       	ldi	r24, 0x2D	; 45
    13dc:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <_ZN12OrangutanLCD9send_dataEh>
    13e0:	c8 01       	movw	r24, r16
    13e2:	b7 01       	movw	r22, r14
    13e4:	0e 94 9f 09 	call	0x133e	; 0x133e <_ZN12OrangutanLCD5printEm>
    13e8:	1f 91       	pop	r17
    13ea:	0f 91       	pop	r16
    13ec:	ff 90       	pop	r15
    13ee:	ef 90       	pop	r14
    13f0:	08 95       	ret

000013f2 <print_long>:
    13f2:	0e 94 dd 09 	call	0x13ba	; 0x13ba <_ZN12OrangutanLCD5printEl>
    13f6:	08 95       	ret

000013f8 <_ZN12OrangutanLCD6gotoXYEhh>:
    13f8:	a5 e0       	ldi	r26, 0x05	; 5
    13fa:	b0 e0       	ldi	r27, 0x00	; 0
    13fc:	e2 e0       	ldi	r30, 0x02	; 2
    13fe:	fa e0       	ldi	r31, 0x0A	; 10
    1400:	0c 94 25 12 	jmp	0x244a	; 0x244a <__prologue_saves__+0x1e>
    1404:	18 2f       	mov	r17, r24
    1406:	80 e8       	ldi	r24, 0x80	; 128
    1408:	89 83       	std	Y+1, r24	; 0x01
    140a:	80 ec       	ldi	r24, 0xC0	; 192
    140c:	8a 83       	std	Y+2, r24	; 0x02
    140e:	84 e9       	ldi	r24, 0x94	; 148
    1410:	8b 83       	std	Y+3, r24	; 0x03
    1412:	84 ed       	ldi	r24, 0xD4	; 212
    1414:	8c 83       	std	Y+4, r24	; 0x04
    1416:	fe 01       	movw	r30, r28
    1418:	e6 0f       	add	r30, r22
    141a:	f1 1d       	adc	r31, r1
    141c:	81 81       	ldd	r24, Z+1	; 0x01
    141e:	81 0f       	add	r24, r17
    1420:	6d 83       	std	Y+5, r22	; 0x05
    1422:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <_ZN12OrangutanLCD8send_cmdEh>
    1426:	10 93 5c 01 	sts	0x015C, r17
    142a:	6d 81       	ldd	r22, Y+5	; 0x05
    142c:	60 93 5b 01 	sts	0x015B, r22
    1430:	25 96       	adiw	r28, 0x05	; 5
    1432:	e3 e0       	ldi	r30, 0x03	; 3
    1434:	0c 94 41 12 	jmp	0x2482	; 0x2482 <__epilogue_restores__+0x1e>

00001438 <lcd_goto_xy>:
    1438:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <_ZN12OrangutanLCD6gotoXYEhh>
    143c:	08 95       	ret

0000143e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    143e:	fc 01       	movw	r30, r24
    1440:	11 82       	std	Z+1, r1	; 0x01
    1442:	10 82       	st	Z, r1
    1444:	13 82       	std	Z+3, r1	; 0x03
    1446:	12 82       	std	Z+2, r1	; 0x02
    1448:	15 82       	std	Z+5, r1	; 0x05
    144a:	14 82       	std	Z+4, r1	; 0x04
    144c:	16 82       	std	Z+6, r1	; 0x06
    144e:	68 30       	cpi	r22, 0x08	; 8
    1450:	68 f4       	brcc	.+26     	; 0x146c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1452:	89 e2       	ldi	r24, 0x29	; 41
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	91 83       	std	Z+1, r25	; 0x01
    1458:	80 83       	st	Z, r24
    145a:	8b e2       	ldi	r24, 0x2B	; 43
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	93 83       	std	Z+3, r25	; 0x03
    1460:	82 83       	std	Z+2, r24	; 0x02
    1462:	8a e2       	ldi	r24, 0x2A	; 42
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	95 83       	std	Z+5, r25	; 0x05
    1468:	84 83       	std	Z+4, r24	; 0x04
    146a:	11 c0       	rjmp	.+34     	; 0x148e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
    146c:	6e 30       	cpi	r22, 0x0E	; 14
    146e:	c0 f4       	brcc	.+48     	; 0x14a0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
    1470:	83 e2       	ldi	r24, 0x23	; 35
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	91 83       	std	Z+1, r25	; 0x01
    1476:	80 83       	st	Z, r24
    1478:	85 e2       	ldi	r24, 0x25	; 37
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	93 83       	std	Z+3, r25	; 0x03
    147e:	82 83       	std	Z+2, r24	; 0x02
    1480:	84 e2       	ldi	r24, 0x24	; 36
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	95 83       	std	Z+5, r25	; 0x05
    1486:	84 83       	std	Z+4, r24	; 0x04
    1488:	70 e0       	ldi	r23, 0x00	; 0
    148a:	68 50       	subi	r22, 0x08	; 8
    148c:	70 40       	sbci	r23, 0x00	; 0
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
    1494:	88 0f       	add	r24, r24
    1496:	99 1f       	adc	r25, r25
    1498:	6a 95       	dec	r22
    149a:	e2 f7       	brpl	.-8      	; 0x1494 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
    149c:	86 83       	std	Z+6, r24	; 0x06
    149e:	08 95       	ret
    14a0:	65 31       	cpi	r22, 0x15	; 21
    14a2:	b8 f4       	brcc	.+46     	; 0x14d2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
    14a4:	86 e2       	ldi	r24, 0x26	; 38
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	91 83       	std	Z+1, r25	; 0x01
    14aa:	80 83       	st	Z, r24
    14ac:	88 e2       	ldi	r24, 0x28	; 40
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	93 83       	std	Z+3, r25	; 0x03
    14b2:	82 83       	std	Z+2, r24	; 0x02
    14b4:	87 e2       	ldi	r24, 0x27	; 39
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	95 83       	std	Z+5, r25	; 0x05
    14ba:	84 83       	std	Z+4, r24	; 0x04
    14bc:	70 e0       	ldi	r23, 0x00	; 0
    14be:	6e 50       	subi	r22, 0x0E	; 14
    14c0:	70 40       	sbci	r23, 0x00	; 0
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
    14c8:	88 0f       	add	r24, r24
    14ca:	99 1f       	adc	r25, r25
    14cc:	6a 95       	dec	r22
    14ce:	e2 f7       	brpl	.-8      	; 0x14c8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
    14d0:	86 83       	std	Z+6, r24	; 0x06
    14d2:	08 95       	ret

000014d4 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
    14d4:	fc 01       	movw	r30, r24
    14d6:	a4 81       	ldd	r26, Z+4	; 0x04
    14d8:	b5 81       	ldd	r27, Z+5	; 0x05
    14da:	86 81       	ldd	r24, Z+6	; 0x06
    14dc:	66 23       	and	r22, r22
    14de:	21 f0       	breq	.+8      	; 0x14e8 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
    14e0:	9c 91       	ld	r25, X
    14e2:	98 2b       	or	r25, r24
    14e4:	9c 93       	st	X, r25
    14e6:	08 95       	ret
    14e8:	9c 91       	ld	r25, X
    14ea:	80 95       	com	r24
    14ec:	89 23       	and	r24, r25
    14ee:	8c 93       	st	X, r24
    14f0:	08 95       	ret

000014f2 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
    14f2:	fc 01       	movw	r30, r24
    14f4:	6f 3f       	cpi	r22, 0xFF	; 255
    14f6:	31 f4       	brne	.+12     	; 0x1504 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
    14f8:	a2 81       	ldd	r26, Z+2	; 0x02
    14fa:	b3 81       	ldd	r27, Z+3	; 0x03
    14fc:	8c 91       	ld	r24, X
    14fe:	96 81       	ldd	r25, Z+6	; 0x06
    1500:	89 27       	eor	r24, r25
    1502:	0c c0       	rjmp	.+24     	; 0x151c <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
    1504:	a2 81       	ldd	r26, Z+2	; 0x02
    1506:	b3 81       	ldd	r27, Z+3	; 0x03
    1508:	86 81       	ldd	r24, Z+6	; 0x06
    150a:	66 23       	and	r22, r22
    150c:	21 f0       	breq	.+8      	; 0x1516 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
    150e:	9c 91       	ld	r25, X
    1510:	98 2b       	or	r25, r24
    1512:	9c 93       	st	X, r25
    1514:	08 95       	ret
    1516:	9c 91       	ld	r25, X
    1518:	80 95       	com	r24
    151a:	89 23       	and	r24, r25
    151c:	8c 93       	st	X, r24
    151e:	08 95       	ret

00001520 <_ZN16OrangutanDigital9setOutputEhh>:
    1520:	a7 e0       	ldi	r26, 0x07	; 7
    1522:	b0 e0       	ldi	r27, 0x00	; 0
    1524:	e6 e9       	ldi	r30, 0x96	; 150
    1526:	fa e0       	ldi	r31, 0x0A	; 10
    1528:	0c 94 23 12 	jmp	0x2446	; 0x2446 <__prologue_saves__+0x1a>
    152c:	28 2f       	mov	r18, r24
    152e:	f6 2e       	mov	r15, r22
    1530:	8e 01       	movw	r16, r28
    1532:	0f 5f       	subi	r16, 0xFF	; 255
    1534:	1f 4f       	sbci	r17, 0xFF	; 255
    1536:	c8 01       	movw	r24, r16
    1538:	62 2f       	mov	r22, r18
    153a:	0e 94 1f 0a 	call	0x143e	; 0x143e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    153e:	c8 01       	movw	r24, r16
    1540:	6f 2d       	mov	r22, r15
    1542:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
    1546:	c8 01       	movw	r24, r16
    1548:	61 e0       	ldi	r22, 0x01	; 1
    154a:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
    154e:	27 96       	adiw	r28, 0x07	; 7
    1550:	e5 e0       	ldi	r30, 0x05	; 5
    1552:	0c 94 3f 12 	jmp	0x247e	; 0x247e <__epilogue_restores__+0x1a>

00001556 <_ZN15OrangutanMotors5init2Ev>:
    1556:	e0 eb       	ldi	r30, 0xB0	; 176
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	83 ef       	ldi	r24, 0xF3	; 243
    155c:	80 83       	st	Z, r24
    155e:	80 81       	ld	r24, Z
    1560:	84 bd       	out	0x24, r24	; 36
    1562:	e1 eb       	ldi	r30, 0xB1	; 177
    1564:	f0 e0       	ldi	r31, 0x00	; 0
    1566:	82 e0       	ldi	r24, 0x02	; 2
    1568:	80 83       	st	Z, r24
    156a:	80 81       	ld	r24, Z
    156c:	85 bd       	out	0x25, r24	; 37
    156e:	e4 eb       	ldi	r30, 0xB4	; 180
    1570:	f0 e0       	ldi	r31, 0x00	; 0
    1572:	10 82       	st	Z, r1
    1574:	80 81       	ld	r24, Z
    1576:	e3 eb       	ldi	r30, 0xB3	; 179
    1578:	f0 e0       	ldi	r31, 0x00	; 0
    157a:	80 83       	st	Z, r24
    157c:	80 81       	ld	r24, Z
    157e:	88 bd       	out	0x28, r24	; 40
    1580:	88 b5       	in	r24, 0x28	; 40
    1582:	87 bd       	out	0x27, r24	; 39
    1584:	86 e0       	ldi	r24, 0x06	; 6
    1586:	60 e0       	ldi	r22, 0x00	; 0
    1588:	0e 94 90 0a 	call	0x1520	; 0x1520 <_ZN16OrangutanDigital9setOutputEhh>
    158c:	85 e0       	ldi	r24, 0x05	; 5
    158e:	60 e0       	ldi	r22, 0x00	; 0
    1590:	0e 94 90 0a 	call	0x1520	; 0x1520 <_ZN16OrangutanDigital9setOutputEhh>
    1594:	8b e0       	ldi	r24, 0x0B	; 11
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	0e 94 90 0a 	call	0x1520	; 0x1520 <_ZN16OrangutanDigital9setOutputEhh>
    159c:	83 e0       	ldi	r24, 0x03	; 3
    159e:	60 e0       	ldi	r22, 0x00	; 0
    15a0:	0e 94 90 0a 	call	0x1520	; 0x1520 <_ZN16OrangutanDigital9setOutputEhh>
    15a4:	08 95       	ret

000015a6 <_ZN15OrangutanMotors4initEv>:
    15a6:	80 91 62 01 	lds	r24, 0x0162
    15aa:	88 23       	and	r24, r24
    15ac:	29 f4       	brne	.+10     	; 0x15b8 <_ZN15OrangutanMotors4initEv+0x12>
    15ae:	81 e0       	ldi	r24, 0x01	; 1
    15b0:	80 93 62 01 	sts	0x0162, r24
    15b4:	0e 94 ab 0a 	call	0x1556	; 0x1556 <_ZN15OrangutanMotors5init2Ev>
    15b8:	08 95       	ret

000015ba <_ZN15OrangutanMotors10setM1SpeedEi>:
    15ba:	cf 93       	push	r28
    15bc:	df 93       	push	r29
    15be:	ec 01       	movw	r28, r24
    15c0:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <_ZN15OrangutanMotors4initEv>
    15c4:	d7 ff       	sbrs	r29, 7
    15c6:	05 c0       	rjmp	.+10     	; 0x15d2 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    15c8:	d0 95       	com	r29
    15ca:	c1 95       	neg	r28
    15cc:	df 4f       	sbci	r29, 0xFF	; 255
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	01 c0       	rjmp	.+2      	; 0x15d4 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	cf 3f       	cpi	r28, 0xFF	; 255
    15d6:	d1 05       	cpc	r29, r1
    15d8:	19 f0       	breq	.+6      	; 0x15e0 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    15da:	14 f0       	brlt	.+4      	; 0x15e0 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    15dc:	cf ef       	ldi	r28, 0xFF	; 255
    15de:	d0 e0       	ldi	r29, 0x00	; 0
    15e0:	88 23       	and	r24, r24
    15e2:	19 f0       	breq	.+6      	; 0x15ea <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    15e4:	18 bc       	out	0x28, r1	; 40
    15e6:	c7 bd       	out	0x27, r28	; 39
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    15ea:	c8 bd       	out	0x28, r28	; 40
    15ec:	17 bc       	out	0x27, r1	; 39
    15ee:	df 91       	pop	r29
    15f0:	cf 91       	pop	r28
    15f2:	08 95       	ret

000015f4 <_ZN15OrangutanMotors10setM2SpeedEi>:
    15f4:	cf 93       	push	r28
    15f6:	df 93       	push	r29
    15f8:	ec 01       	movw	r28, r24
    15fa:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <_ZN15OrangutanMotors4initEv>
    15fe:	d7 ff       	sbrs	r29, 7
    1600:	05 c0       	rjmp	.+10     	; 0x160c <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1602:	d0 95       	com	r29
    1604:	c1 95       	neg	r28
    1606:	df 4f       	sbci	r29, 0xFF	; 255
    1608:	81 e0       	ldi	r24, 0x01	; 1
    160a:	01 c0       	rjmp	.+2      	; 0x160e <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    160c:	80 e0       	ldi	r24, 0x00	; 0
    160e:	cf 3f       	cpi	r28, 0xFF	; 255
    1610:	d1 05       	cpc	r29, r1
    1612:	19 f0       	breq	.+6      	; 0x161a <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1614:	14 f0       	brlt	.+4      	; 0x161a <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1616:	cf ef       	ldi	r28, 0xFF	; 255
    1618:	d0 e0       	ldi	r29, 0x00	; 0
    161a:	88 23       	and	r24, r24
    161c:	29 f0       	breq	.+10     	; 0x1628 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    161e:	10 92 b4 00 	sts	0x00B4, r1
    1622:	c0 93 b3 00 	sts	0x00B3, r28
    1626:	04 c0       	rjmp	.+8      	; 0x1630 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1628:	c0 93 b4 00 	sts	0x00B4, r28
    162c:	10 92 b3 00 	sts	0x00B3, r1
    1630:	df 91       	pop	r29
    1632:	cf 91       	pop	r28
    1634:	08 95       	ret

00001636 <_ZN15OrangutanMotors9setSpeedsEii>:
    1636:	cf 93       	push	r28
    1638:	df 93       	push	r29
    163a:	eb 01       	movw	r28, r22
    163c:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <_ZN15OrangutanMotors10setM1SpeedEi>
    1640:	ce 01       	movw	r24, r28
    1642:	0e 94 fa 0a 	call	0x15f4	; 0x15f4 <_ZN15OrangutanMotors10setM2SpeedEi>
    1646:	df 91       	pop	r29
    1648:	cf 91       	pop	r28
    164a:	08 95       	ret

0000164c <set_motors>:
    164c:	0e 94 1b 0b 	call	0x1636	; 0x1636 <_ZN15OrangutanMotors9setSpeedsEii>
    1650:	08 95       	ret

00001652 <_ZN20OrangutanPushbuttons5init2Ev>:
    1652:	84 b1       	in	r24, 0x04	; 4
    1654:	8d 7c       	andi	r24, 0xCD	; 205
    1656:	84 b9       	out	0x04, r24	; 4
    1658:	85 b1       	in	r24, 0x05	; 5
    165a:	82 63       	ori	r24, 0x32	; 50
    165c:	85 b9       	out	0x05, r24	; 5
    165e:	85 e0       	ldi	r24, 0x05	; 5
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	6f 93       	push	r22
    1664:	64 e0       	ldi	r22, 0x04	; 4
    1666:	6a 95       	dec	r22
    1668:	f1 f7       	brne	.-4      	; 0x1666 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    166a:	6f 91       	pop	r22
    166c:	01 97       	sbiw	r24, 0x01	; 1
    166e:	c9 f7       	brne	.-14     	; 0x1662 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1670:	08 95       	ret

00001672 <_ZN20OrangutanPushbuttons4initEv>:
    1672:	80 91 63 01 	lds	r24, 0x0163
    1676:	88 23       	and	r24, r24
    1678:	29 f4       	brne	.+10     	; 0x1684 <_ZN20OrangutanPushbuttons4initEv+0x12>
    167a:	81 e0       	ldi	r24, 0x01	; 1
    167c:	80 93 63 01 	sts	0x0163, r24
    1680:	0e 94 29 0b 	call	0x1652	; 0x1652 <_ZN20OrangutanPushbuttons5init2Ev>
    1684:	08 95       	ret

00001686 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1686:	a1 e0       	ldi	r26, 0x01	; 1
    1688:	b0 e0       	ldi	r27, 0x00	; 0
    168a:	e9 e4       	ldi	r30, 0x49	; 73
    168c:	fb e0       	ldi	r31, 0x0B	; 11
    168e:	0c 94 26 12 	jmp	0x244c	; 0x244c <__prologue_saves__+0x20>
    1692:	89 83       	std	Y+1, r24	; 0x01
    1694:	0e 94 39 0b 	call	0x1672	; 0x1672 <_ZN20OrangutanPushbuttons4initEv>
    1698:	93 b1       	in	r25, 0x03	; 3
    169a:	90 95       	com	r25
    169c:	89 81       	ldd	r24, Y+1	; 0x01
    169e:	89 23       	and	r24, r25
    16a0:	21 96       	adiw	r28, 0x01	; 1
    16a2:	e2 e0       	ldi	r30, 0x02	; 2
    16a4:	0c 94 42 12 	jmp	0x2484	; 0x2484 <__epilogue_restores__+0x20>

000016a8 <button_is_pressed>:
    16a8:	0e 94 43 0b 	call	0x1686	; 0x1686 <_ZN20OrangutanPushbuttons9isPressedEh>
    16ac:	08 95       	ret

000016ae <_ZN13OrangutanTime17delayMicrosecondsEj>:
    16ae:	6f 93       	push	r22
    16b0:	64 e0       	ldi	r22, 0x04	; 4
    16b2:	6a 95       	dec	r22
    16b4:	f1 f7       	brne	.-4      	; 0x16b2 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    16b6:	6f 91       	pop	r22
    16b8:	01 97       	sbiw	r24, 0x01	; 1
    16ba:	c9 f7       	brne	.-14     	; 0x16ae <_ZN13OrangutanTime17delayMicrosecondsEj>
    16bc:	08 95       	ret

000016be <__vector_9>:
    16be:	2f 92       	push	r2
    16c0:	8f 93       	push	r24
    16c2:	9f 93       	push	r25
    16c4:	2f b6       	in	r2, 0x3f	; 63
    16c6:	80 91 71 01 	lds	r24, 0x0171
    16ca:	90 91 72 01 	lds	r25, 0x0172
    16ce:	01 96       	adiw	r24, 0x01	; 1
    16d0:	80 93 71 01 	sts	0x0171, r24
    16d4:	90 93 72 01 	sts	0x0172, r25
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	80 91 73 01 	lds	r24, 0x0173
    16de:	89 1f       	adc	r24, r25
    16e0:	80 93 73 01 	sts	0x0173, r24
    16e4:	90 91 79 01 	lds	r25, 0x0179
    16e8:	9c 5f       	subi	r25, 0xFC	; 252
    16ea:	90 93 79 01 	sts	0x0179, r25
    16ee:	80 91 78 01 	lds	r24, 0x0178
    16f2:	80 51       	subi	r24, 0x10	; 16
    16f4:	97 42       	sbci	r25, 0x27	; 39
    16f6:	c0 f0       	brcs	.+48     	; 0x1728 <end>
    16f8:	90 93 79 01 	sts	0x0179, r25
    16fc:	80 93 78 01 	sts	0x0178, r24
    1700:	80 91 74 01 	lds	r24, 0x0174
    1704:	90 91 75 01 	lds	r25, 0x0175
    1708:	01 96       	adiw	r24, 0x01	; 1
    170a:	80 93 74 01 	sts	0x0174, r24
    170e:	90 93 75 01 	sts	0x0175, r25
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	80 91 76 01 	lds	r24, 0x0176
    1718:	89 1f       	adc	r24, r25
    171a:	80 93 76 01 	sts	0x0176, r24
    171e:	80 91 77 01 	lds	r24, 0x0177
    1722:	89 1f       	adc	r24, r25
    1724:	80 93 77 01 	sts	0x0177, r24

00001728 <end>:
    1728:	2f be       	out	0x3f, r2	; 63
    172a:	9f 91       	pop	r25
    172c:	8f 91       	pop	r24
    172e:	2f 90       	pop	r2
    1730:	18 95       	reti

00001732 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1732:	cf 93       	push	r28
    1734:	df 93       	push	r29
    1736:	ec 01       	movw	r28, r24
    1738:	05 c0       	rjmp	.+10     	; 0x1744 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    173a:	88 ee       	ldi	r24, 0xE8	; 232
    173c:	93 e0       	ldi	r25, 0x03	; 3
    173e:	0e 94 57 0b 	call	0x16ae	; 0x16ae <_ZN13OrangutanTime17delayMicrosecondsEj>
    1742:	21 97       	sbiw	r28, 0x01	; 1
    1744:	20 97       	sbiw	r28, 0x00	; 0
    1746:	c9 f7       	brne	.-14     	; 0x173a <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1748:	df 91       	pop	r29
    174a:	cf 91       	pop	r28
    174c:	08 95       	ret

0000174e <delay_ms>:
    174e:	0e 94 99 0b 	call	0x1732	; 0x1732 <_ZN13OrangutanTime17delayMillisecondsEj>
    1752:	08 95       	ret

00001754 <_ZN13OrangutanTime5init2Ev>:
    1754:	e0 e7       	ldi	r30, 0x70	; 112
    1756:	f0 e0       	ldi	r31, 0x00	; 0
    1758:	80 81       	ld	r24, Z
    175a:	8e 7f       	andi	r24, 0xFE	; 254
    175c:	80 83       	st	Z, r24
    175e:	a0 eb       	ldi	r26, 0xB0	; 176
    1760:	b0 e0       	ldi	r27, 0x00	; 0
    1762:	8c 91       	ld	r24, X
    1764:	83 60       	ori	r24, 0x03	; 3
    1766:	8c 93       	st	X, r24
    1768:	a1 eb       	ldi	r26, 0xB1	; 177
    176a:	b0 e0       	ldi	r27, 0x00	; 0
    176c:	8c 91       	ld	r24, X
    176e:	80 7f       	andi	r24, 0xF0	; 240
    1770:	8c 93       	st	X, r24
    1772:	8c 91       	ld	r24, X
    1774:	82 60       	ori	r24, 0x02	; 2
    1776:	8c 93       	st	X, r24
    1778:	b8 9a       	sbi	0x17, 0	; 23
    177a:	80 81       	ld	r24, Z
    177c:	81 60       	ori	r24, 0x01	; 1
    177e:	80 83       	st	Z, r24
    1780:	78 94       	sei
    1782:	08 95       	ret

00001784 <_ZN13OrangutanTime4initEv>:
    1784:	80 91 7a 01 	lds	r24, 0x017A
    1788:	88 23       	and	r24, r24
    178a:	29 f4       	brne	.+10     	; 0x1796 <_ZN13OrangutanTime4initEv+0x12>
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	80 93 7a 01 	sts	0x017A, r24
    1792:	0e 94 aa 0b 	call	0x1754	; 0x1754 <_ZN13OrangutanTime5init2Ev>
    1796:	08 95       	ret

00001798 <_ZN13OrangutanTime2msEv>:
    1798:	0e 94 c2 0b 	call	0x1784	; 0x1784 <_ZN13OrangutanTime4initEv>
    179c:	e0 e7       	ldi	r30, 0x70	; 112
    179e:	f0 e0       	ldi	r31, 0x00	; 0
    17a0:	80 81       	ld	r24, Z
    17a2:	8e 7f       	andi	r24, 0xFE	; 254
    17a4:	80 83       	st	Z, r24
    17a6:	20 91 74 01 	lds	r18, 0x0174
    17aa:	30 91 75 01 	lds	r19, 0x0175
    17ae:	40 91 76 01 	lds	r20, 0x0176
    17b2:	50 91 77 01 	lds	r21, 0x0177
    17b6:	80 81       	ld	r24, Z
    17b8:	81 60       	ori	r24, 0x01	; 1
    17ba:	80 83       	st	Z, r24
    17bc:	b9 01       	movw	r22, r18
    17be:	ca 01       	movw	r24, r20
    17c0:	08 95       	ret

000017c2 <get_ms>:
    17c2:	0e 94 cc 0b 	call	0x1798	; 0x1798 <_ZN13OrangutanTime2msEv>
    17c6:	08 95       	ret

000017c8 <_ZN13OrangutanTime5resetEv>:
    17c8:	0e 94 c2 0b 	call	0x1784	; 0x1784 <_ZN13OrangutanTime4initEv>
    17cc:	e0 e7       	ldi	r30, 0x70	; 112
    17ce:	f0 e0       	ldi	r31, 0x00	; 0
    17d0:	80 81       	ld	r24, Z
    17d2:	8e 7f       	andi	r24, 0xFE	; 254
    17d4:	80 83       	st	Z, r24
    17d6:	10 92 74 01 	sts	0x0174, r1
    17da:	10 92 75 01 	sts	0x0175, r1
    17de:	10 92 76 01 	sts	0x0176, r1
    17e2:	10 92 77 01 	sts	0x0177, r1
    17e6:	10 92 79 01 	sts	0x0179, r1
    17ea:	10 92 78 01 	sts	0x0178, r1
    17ee:	80 81       	ld	r24, Z
    17f0:	81 60       	ori	r24, 0x01	; 1
    17f2:	80 83       	st	Z, r24
    17f4:	08 95       	ret

000017f6 <calibrate_line_sensors>:
    17f6:	68 2f       	mov	r22, r24
    17f8:	8b e7       	ldi	r24, 0x7B	; 123
    17fa:	91 e0       	ldi	r25, 0x01	; 1
    17fc:	0e 94 35 11 	call	0x226a	; 0x226a <_ZN16PololuQTRSensors9calibrateEh>
    1800:	08 95       	ret

00001802 <read_line>:
    1802:	9c 01       	movw	r18, r24
    1804:	46 2f       	mov	r20, r22
    1806:	8b e7       	ldi	r24, 0x7B	; 123
    1808:	91 e0       	ldi	r25, 0x01	; 1
    180a:	b9 01       	movw	r22, r18
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	0e 94 93 0f 	call	0x1f26	; 0x1f26 <_ZN16PololuQTRSensors8readLineEPjhh>
    1812:	08 95       	ret

00001814 <get_line_sensors_calibrated_minimum_on>:
    1814:	80 91 7b 01 	lds	r24, 0x017B
    1818:	90 91 7c 01 	lds	r25, 0x017C
    181c:	08 95       	ret

0000181e <get_line_sensors_calibrated_maximum_on>:
    181e:	80 91 7d 01 	lds	r24, 0x017D
    1822:	90 91 7e 01 	lds	r25, 0x017E
    1826:	08 95       	ret

00001828 <_ZN9Pololu3pi4initEjh>:
    1828:	0f 93       	push	r16
    182a:	df 93       	push	r29
    182c:	cf 93       	push	r28
    182e:	00 d0       	rcall	.+0      	; 0x1830 <_ZN9Pololu3pi4initEjh+0x8>
    1830:	00 d0       	rcall	.+0      	; 0x1832 <_ZN9Pololu3pi4initEjh+0xa>
    1832:	0f 92       	push	r0
    1834:	cd b7       	in	r28, 0x3d	; 61
    1836:	de b7       	in	r29, 0x3e	; 62
    1838:	9c 01       	movw	r18, r24
    183a:	96 2f       	mov	r25, r22
    183c:	de 01       	movw	r26, r28
    183e:	11 96       	adiw	r26, 0x01	; 1
    1840:	e4 e2       	ldi	r30, 0x24	; 36
    1842:	f1 e0       	ldi	r31, 0x01	; 1
    1844:	85 e0       	ldi	r24, 0x05	; 5
    1846:	01 90       	ld	r0, Z+
    1848:	0d 92       	st	X+, r0
    184a:	81 50       	subi	r24, 0x01	; 1
    184c:	e1 f7       	brne	.-8      	; 0x1846 <_ZN9Pololu3pi4initEjh+0x1e>
    184e:	be 01       	movw	r22, r28
    1850:	6f 5f       	subi	r22, 0xFF	; 255
    1852:	7f 4f       	sbci	r23, 0xFF	; 255
    1854:	99 23       	and	r25, r25
    1856:	29 f0       	breq	.+10     	; 0x1862 <_ZN9Pololu3pi4initEjh+0x3a>
    1858:	8b e7       	ldi	r24, 0x7B	; 123
    185a:	91 e0       	ldi	r25, 0x01	; 1
    185c:	45 e0       	ldi	r20, 0x05	; 5
    185e:	0f ef       	ldi	r16, 0xFF	; 255
    1860:	04 c0       	rjmp	.+8      	; 0x186a <_ZN9Pololu3pi4initEjh+0x42>
    1862:	8b e7       	ldi	r24, 0x7B	; 123
    1864:	91 e0       	ldi	r25, 0x01	; 1
    1866:	45 e0       	ldi	r20, 0x05	; 5
    1868:	03 e1       	ldi	r16, 0x13	; 19
    186a:	0e 94 ae 0c 	call	0x195c	; 0x195c <_ZN18PololuQTRSensorsRC4initEPhhjh>
    186e:	8b e7       	ldi	r24, 0x7B	; 123
    1870:	91 e0       	ldi	r25, 0x01	; 1
    1872:	0e 94 85 0c 	call	0x190a	; 0x190a <_ZN16PololuQTRSensors11emittersOffEv>
    1876:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <_ZN13OrangutanTime5resetEv>
    187a:	0f 90       	pop	r0
    187c:	0f 90       	pop	r0
    187e:	0f 90       	pop	r0
    1880:	0f 90       	pop	r0
    1882:	0f 90       	pop	r0
    1884:	cf 91       	pop	r28
    1886:	df 91       	pop	r29
    1888:	0f 91       	pop	r16
    188a:	08 95       	ret

0000188c <pololu_3pi_init>:
    188c:	60 e0       	ldi	r22, 0x00	; 0
    188e:	0e 94 14 0c 	call	0x1828	; 0x1828 <_ZN9Pololu3pi4initEjh>
    1892:	08 95       	ret

00001894 <_GLOBAL__I_pololu_3pi_init>:
    1894:	08 95       	ret

00001896 <_GLOBAL__D_pololu_3pi_init>:
    1896:	8b e7       	ldi	r24, 0x7B	; 123
    1898:	91 e0       	ldi	r25, 0x01	; 1
    189a:	0e 94 59 11 	call	0x22b2	; 0x22b2 <_ZN16PololuQTRSensorsD1Ev>
    189e:	08 95       	ret

000018a0 <delayMicroseconds>:
    18a0:	6f 93       	push	r22
    18a2:	64 e0       	ldi	r22, 0x04	; 4
    18a4:	6a 95       	dec	r22
    18a6:	f1 f7       	brne	.-4      	; 0x18a4 <delayMicroseconds+0x4>
    18a8:	6f 91       	pop	r22
    18aa:	01 97       	sbiw	r24, 0x01	; 1
    18ac:	c9 f7       	brne	.-14     	; 0x18a0 <delayMicroseconds>
    18ae:	08 95       	ret

000018b0 <_ZN16PololuQTRSensors4initEhhh>:
    18b0:	a7 e0       	ldi	r26, 0x07	; 7
    18b2:	b0 e0       	ldi	r27, 0x00	; 0
    18b4:	ee e5       	ldi	r30, 0x5E	; 94
    18b6:	fc e0       	ldi	r31, 0x0C	; 12
    18b8:	0c 94 24 12 	jmp	0x2448	; 0x2448 <__prologue_saves__+0x1c>
    18bc:	8c 01       	movw	r16, r24
    18be:	fc 01       	movw	r30, r24
    18c0:	11 82       	std	Z+1, r1	; 0x01
    18c2:	10 82       	st	Z, r1
    18c4:	13 82       	std	Z+3, r1	; 0x03
    18c6:	12 82       	std	Z+2, r1	; 0x02
    18c8:	15 82       	std	Z+5, r1	; 0x05
    18ca:	14 82       	std	Z+4, r1	; 0x04
    18cc:	17 82       	std	Z+7, r1	; 0x07
    18ce:	16 82       	std	Z+6, r1	; 0x06
    18d0:	61 31       	cpi	r22, 0x11	; 17
    18d2:	18 f0       	brcs	.+6      	; 0x18da <_ZN16PololuQTRSensors4initEhhh+0x2a>
    18d4:	80 e1       	ldi	r24, 0x10	; 16
    18d6:	80 87       	std	Z+8, r24	; 0x08
    18d8:	02 c0       	rjmp	.+4      	; 0x18de <_ZN16PololuQTRSensors4initEhhh+0x2e>
    18da:	fc 01       	movw	r30, r24
    18dc:	60 87       	std	Z+8, r22	; 0x08
    18de:	f8 01       	movw	r30, r16
    18e0:	20 8b       	std	Z+16, r18	; 0x10
    18e2:	ce 01       	movw	r24, r28
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	64 2f       	mov	r22, r20
    18e8:	0e 94 1f 0a 	call	0x143e	; 0x143e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    18ec:	8f 81       	ldd	r24, Y+7	; 0x07
    18ee:	f8 01       	movw	r30, r16
    18f0:	81 87       	std	Z+9, r24	; 0x09
    18f2:	8b 81       	ldd	r24, Y+3	; 0x03
    18f4:	9c 81       	ldd	r25, Y+4	; 0x04
    18f6:	93 87       	std	Z+11, r25	; 0x0b
    18f8:	82 87       	std	Z+10, r24	; 0x0a
    18fa:	8d 81       	ldd	r24, Y+5	; 0x05
    18fc:	9e 81       	ldd	r25, Y+6	; 0x06
    18fe:	95 87       	std	Z+13, r25	; 0x0d
    1900:	84 87       	std	Z+12, r24	; 0x0c
    1902:	27 96       	adiw	r28, 0x07	; 7
    1904:	e4 e0       	ldi	r30, 0x04	; 4
    1906:	0c 94 40 12 	jmp	0x2480	; 0x2480 <__epilogue_restores__+0x1c>

0000190a <_ZN16PololuQTRSensors11emittersOffEv>:
    190a:	fc 01       	movw	r30, r24
    190c:	a4 85       	ldd	r26, Z+12	; 0x0c
    190e:	b5 85       	ldd	r27, Z+13	; 0x0d
    1910:	10 97       	sbiw	r26, 0x00	; 0
    1912:	79 f0       	breq	.+30     	; 0x1932 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1914:	8c 91       	ld	r24, X
    1916:	91 85       	ldd	r25, Z+9	; 0x09
    1918:	89 2b       	or	r24, r25
    191a:	8c 93       	st	X, r24
    191c:	a2 85       	ldd	r26, Z+10	; 0x0a
    191e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1920:	9c 91       	ld	r25, X
    1922:	81 85       	ldd	r24, Z+9	; 0x09
    1924:	80 95       	com	r24
    1926:	89 23       	and	r24, r25
    1928:	8c 93       	st	X, r24
    192a:	88 ec       	ldi	r24, 0xC8	; 200
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <delayMicroseconds>
    1932:	08 95       	ret

00001934 <_ZN16PololuQTRSensors10emittersOnEv>:
    1934:	fc 01       	movw	r30, r24
    1936:	a4 85       	ldd	r26, Z+12	; 0x0c
    1938:	b5 85       	ldd	r27, Z+13	; 0x0d
    193a:	10 97       	sbiw	r26, 0x00	; 0
    193c:	71 f0       	breq	.+28     	; 0x195a <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    193e:	8c 91       	ld	r24, X
    1940:	91 85       	ldd	r25, Z+9	; 0x09
    1942:	89 2b       	or	r24, r25
    1944:	8c 93       	st	X, r24
    1946:	a2 85       	ldd	r26, Z+10	; 0x0a
    1948:	b3 85       	ldd	r27, Z+11	; 0x0b
    194a:	8c 91       	ld	r24, X
    194c:	91 85       	ldd	r25, Z+9	; 0x09
    194e:	89 2b       	or	r24, r25
    1950:	8c 93       	st	X, r24
    1952:	88 ec       	ldi	r24, 0xC8	; 200
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <delayMicroseconds>
    195a:	08 95       	ret

0000195c <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    195c:	a7 e0       	ldi	r26, 0x07	; 7
    195e:	b0 e0       	ldi	r27, 0x00	; 0
    1960:	e4 eb       	ldi	r30, 0xB4	; 180
    1962:	fc e0       	ldi	r31, 0x0C	; 12
    1964:	0c 94 16 12 	jmp	0x242c	; 0x242c <__prologue_saves__>
    1968:	7c 01       	movw	r14, r24
    196a:	1b 01       	movw	r2, r22
    196c:	64 2f       	mov	r22, r20
    196e:	39 01       	movw	r6, r18
    1970:	40 2f       	mov	r20, r16
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <_ZN16PololuQTRSensors4initEhhh>
    1978:	97 01       	movw	r18, r14
    197a:	2f 5b       	subi	r18, 0xBF	; 191
    197c:	3f 4f       	sbci	r19, 0xFF	; 255
    197e:	f9 01       	movw	r30, r18
    1980:	10 82       	st	Z, r1
    1982:	d7 01       	movw	r26, r14
    1984:	ae 5b       	subi	r26, 0xBE	; 190
    1986:	bf 4f       	sbci	r27, 0xFF	; 255
    1988:	1c 92       	st	X, r1
    198a:	c7 01       	movw	r24, r14
    198c:	8d 5b       	subi	r24, 0xBD	; 189
    198e:	9f 4f       	sbci	r25, 0xFF	; 255
    1990:	fc 01       	movw	r30, r24
    1992:	10 82       	st	Z, r1
    1994:	f7 01       	movw	r30, r14
    1996:	77 86       	std	Z+15, r7	; 0x0f
    1998:	66 86       	std	Z+14, r6	; 0x0e
    199a:	66 24       	eor	r6, r6
    199c:	2e 01       	movw	r4, r28
    199e:	08 94       	sec
    19a0:	41 1c       	adc	r4, r1
    19a2:	51 1c       	adc	r5, r1
    19a4:	6c 01       	movw	r12, r24
    19a6:	5d 01       	movw	r10, r26
    19a8:	49 01       	movw	r8, r18
    19aa:	29 c0       	rjmp	.+82     	; 0x19fe <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    19ac:	06 2d       	mov	r16, r6
    19ae:	10 e0       	ldi	r17, 0x00	; 0
    19b0:	f1 01       	movw	r30, r2
    19b2:	e0 0f       	add	r30, r16
    19b4:	f1 1f       	adc	r31, r17
    19b6:	c2 01       	movw	r24, r4
    19b8:	60 81       	ld	r22, Z
    19ba:	0e 94 1f 0a 	call	0x143e	; 0x143e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    19be:	2f 81       	ldd	r18, Y+7	; 0x07
    19c0:	f7 01       	movw	r30, r14
    19c2:	e0 0f       	add	r30, r16
    19c4:	f1 1f       	adc	r31, r17
    19c6:	21 8b       	std	Z+17, r18	; 0x11
    19c8:	89 81       	ldd	r24, Y+1	; 0x01
    19ca:	9a 81       	ldd	r25, Y+2	; 0x02
    19cc:	f8 01       	movw	r30, r16
    19ce:	ee 0f       	add	r30, r30
    19d0:	ff 1f       	adc	r31, r31
    19d2:	ee 0d       	add	r30, r14
    19d4:	ff 1d       	adc	r31, r15
    19d6:	92 a3       	std	Z+34, r25	; 0x22
    19d8:	81 a3       	std	Z+33, r24	; 0x21
    19da:	83 32       	cpi	r24, 0x23	; 35
    19dc:	91 05       	cpc	r25, r1
    19de:	11 f4       	brne	.+4      	; 0x19e4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    19e0:	f4 01       	movw	r30, r8
    19e2:	09 c0       	rjmp	.+18     	; 0x19f6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    19e4:	86 32       	cpi	r24, 0x26	; 38
    19e6:	91 05       	cpc	r25, r1
    19e8:	11 f4       	brne	.+4      	; 0x19ee <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    19ea:	f5 01       	movw	r30, r10
    19ec:	04 c0       	rjmp	.+8      	; 0x19f6 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    19ee:	89 32       	cpi	r24, 0x29	; 41
    19f0:	91 05       	cpc	r25, r1
    19f2:	21 f4       	brne	.+8      	; 0x19fc <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
    19f4:	f6 01       	movw	r30, r12
    19f6:	80 81       	ld	r24, Z
    19f8:	82 2b       	or	r24, r18
    19fa:	80 83       	st	Z, r24
    19fc:	63 94       	inc	r6
    19fe:	f7 01       	movw	r30, r14
    1a00:	80 85       	ldd	r24, Z+8	; 0x08
    1a02:	68 16       	cp	r6, r24
    1a04:	98 f2       	brcs	.-90     	; 0x19ac <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
    1a06:	27 96       	adiw	r28, 0x07	; 7
    1a08:	e2 e1       	ldi	r30, 0x12	; 18
    1a0a:	0c 94 32 12 	jmp	0x2464	; 0x2464 <__epilogue_restores__>

00001a0e <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1a0e:	a0 e0       	ldi	r26, 0x00	; 0
    1a10:	b0 e0       	ldi	r27, 0x00	; 0
    1a12:	ed e0       	ldi	r30, 0x0D	; 13
    1a14:	fd e0       	ldi	r31, 0x0D	; 13
    1a16:	0c 94 1b 12 	jmp	0x2436	; 0x2436 <__prologue_saves__+0xa>
    1a1a:	ec 01       	movw	r28, r24
    1a1c:	5b 01       	movw	r10, r22
    1a1e:	fc 01       	movw	r30, r24
    1a20:	ef 5b       	subi	r30, 0xBF	; 191
    1a22:	ff 4f       	sbci	r31, 0xFF	; 255
    1a24:	90 80       	ld	r9, Z
    1a26:	fc 01       	movw	r30, r24
    1a28:	ee 5b       	subi	r30, 0xBE	; 190
    1a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2c:	80 80       	ld	r8, Z
    1a2e:	fc 01       	movw	r30, r24
    1a30:	ed 5b       	subi	r30, 0xBD	; 189
    1a32:	ff 4f       	sbci	r31, 0xFF	; 255
    1a34:	70 80       	ld	r7, Z
    1a36:	80 e0       	ldi	r24, 0x00	; 0
    1a38:	09 c0       	rjmp	.+18     	; 0x1a4c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
    1a3a:	e8 2f       	mov	r30, r24
    1a3c:	f0 e0       	ldi	r31, 0x00	; 0
    1a3e:	ee 0f       	add	r30, r30
    1a40:	ff 1f       	adc	r31, r31
    1a42:	ea 0d       	add	r30, r10
    1a44:	fb 1d       	adc	r31, r11
    1a46:	11 82       	std	Z+1, r1	; 0x01
    1a48:	10 82       	st	Z, r1
    1a4a:	8f 5f       	subi	r24, 0xFF	; 255
    1a4c:	98 85       	ldd	r25, Y+8	; 0x08
    1a4e:	89 17       	cp	r24, r25
    1a50:	a0 f3       	brcs	.-24     	; 0x1a3a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
    1a52:	84 b1       	in	r24, 0x04	; 4
    1a54:	21 e4       	ldi	r18, 0x41	; 65
    1a56:	e2 2e       	mov	r14, r18
    1a58:	f1 2c       	mov	r15, r1
    1a5a:	ec 0e       	add	r14, r28
    1a5c:	fd 1e       	adc	r15, r29
    1a5e:	d7 01       	movw	r26, r14
    1a60:	9c 91       	ld	r25, X
    1a62:	89 2b       	or	r24, r25
    1a64:	84 b9       	out	0x04, r24	; 4
    1a66:	87 b1       	in	r24, 0x07	; 7
    1a68:	8e 01       	movw	r16, r28
    1a6a:	0e 5b       	subi	r16, 0xBE	; 190
    1a6c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a6e:	f8 01       	movw	r30, r16
    1a70:	90 81       	ld	r25, Z
    1a72:	89 2b       	or	r24, r25
    1a74:	87 b9       	out	0x07, r24	; 7
    1a76:	8a b1       	in	r24, 0x0a	; 10
    1a78:	93 e4       	ldi	r25, 0x43	; 67
    1a7a:	c9 2e       	mov	r12, r25
    1a7c:	d1 2c       	mov	r13, r1
    1a7e:	cc 0e       	add	r12, r28
    1a80:	dd 1e       	adc	r13, r29
    1a82:	d6 01       	movw	r26, r12
    1a84:	9c 91       	ld	r25, X
    1a86:	89 2b       	or	r24, r25
    1a88:	8a b9       	out	0x0a, r24	; 10
    1a8a:	85 b1       	in	r24, 0x05	; 5
    1a8c:	f7 01       	movw	r30, r14
    1a8e:	90 81       	ld	r25, Z
    1a90:	89 2b       	or	r24, r25
    1a92:	85 b9       	out	0x05, r24	; 5
    1a94:	88 b1       	in	r24, 0x08	; 8
    1a96:	d8 01       	movw	r26, r16
    1a98:	9c 91       	ld	r25, X
    1a9a:	89 2b       	or	r24, r25
    1a9c:	88 b9       	out	0x08, r24	; 8
    1a9e:	8b b1       	in	r24, 0x0b	; 11
    1aa0:	f6 01       	movw	r30, r12
    1aa2:	90 81       	ld	r25, Z
    1aa4:	89 2b       	or	r24, r25
    1aa6:	8b b9       	out	0x0b, r24	; 11
    1aa8:	8a e0       	ldi	r24, 0x0A	; 10
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <delayMicroseconds>
    1ab0:	94 b1       	in	r25, 0x04	; 4
    1ab2:	d7 01       	movw	r26, r14
    1ab4:	8c 91       	ld	r24, X
    1ab6:	80 95       	com	r24
    1ab8:	89 23       	and	r24, r25
    1aba:	84 b9       	out	0x04, r24	; 4
    1abc:	97 b1       	in	r25, 0x07	; 7
    1abe:	f8 01       	movw	r30, r16
    1ac0:	80 81       	ld	r24, Z
    1ac2:	80 95       	com	r24
    1ac4:	89 23       	and	r24, r25
    1ac6:	87 b9       	out	0x07, r24	; 7
    1ac8:	9a b1       	in	r25, 0x0a	; 10
    1aca:	d6 01       	movw	r26, r12
    1acc:	8c 91       	ld	r24, X
    1ace:	80 95       	com	r24
    1ad0:	89 23       	and	r24, r25
    1ad2:	8a b9       	out	0x0a, r24	; 10
    1ad4:	95 b1       	in	r25, 0x05	; 5
    1ad6:	f7 01       	movw	r30, r14
    1ad8:	80 81       	ld	r24, Z
    1ada:	80 95       	com	r24
    1adc:	89 23       	and	r24, r25
    1ade:	85 b9       	out	0x05, r24	; 5
    1ae0:	98 b1       	in	r25, 0x08	; 8
    1ae2:	d8 01       	movw	r26, r16
    1ae4:	8c 91       	ld	r24, X
    1ae6:	80 95       	com	r24
    1ae8:	89 23       	and	r24, r25
    1aea:	88 b9       	out	0x08, r24	; 8
    1aec:	9b b1       	in	r25, 0x0b	; 11
    1aee:	f6 01       	movw	r30, r12
    1af0:	80 81       	ld	r24, Z
    1af2:	80 95       	com	r24
    1af4:	89 23       	and	r24, r25
    1af6:	8b b9       	out	0x0b, r24	; 11
    1af8:	c0 90 b0 00 	lds	r12, 0x00B0
    1afc:	e0 90 b1 00 	lds	r14, 0x00B1
    1b00:	80 91 b0 00 	lds	r24, 0x00B0
    1b04:	83 60       	ori	r24, 0x03	; 3
    1b06:	80 93 b0 00 	sts	0x00B0, r24
    1b0a:	82 e0       	ldi	r24, 0x02	; 2
    1b0c:	80 93 b1 00 	sts	0x00B1, r24
    1b10:	00 91 b2 00 	lds	r16, 0x00B2
    1b14:	80 e0       	ldi	r24, 0x00	; 0
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	39 c0       	rjmp	.+114    	; 0x1b8c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
    1b1a:	20 91 b2 00 	lds	r18, 0x00B2
    1b1e:	20 1b       	sub	r18, r16
    1b20:	82 0f       	add	r24, r18
    1b22:	91 1d       	adc	r25, r1
    1b24:	02 0f       	add	r16, r18
    1b26:	f3 b0       	in	r15, 0x03	; 3
    1b28:	f9 14       	cp	r15, r9
    1b2a:	09 f0       	breq	.+2      	; 0x1b2e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
    1b2c:	4d c0       	rjmp	.+154    	; 0x1bc8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1b2e:	96 b0       	in	r9, 0x06	; 6
    1b30:	98 14       	cp	r9, r8
    1b32:	09 f0       	breq	.+2      	; 0x1b36 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
    1b34:	49 c0       	rjmp	.+146    	; 0x1bc8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1b36:	29 b1       	in	r18, 0x09	; 9
    1b38:	27 15       	cp	r18, r7
    1b3a:	09 f0       	breq	.+2      	; 0x1b3e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1b3c:	45 c0       	rjmp	.+138    	; 0x1bc8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1b3e:	24 c0       	rjmp	.+72     	; 0x1b88 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1b40:	21 2f       	mov	r18, r17
    1b42:	30 e0       	ldi	r19, 0x00	; 0
    1b44:	a9 01       	movw	r20, r18
    1b46:	44 0f       	add	r20, r20
    1b48:	55 1f       	adc	r21, r21
    1b4a:	f5 01       	movw	r30, r10
    1b4c:	e4 0f       	add	r30, r20
    1b4e:	f5 1f       	adc	r31, r21
    1b50:	60 81       	ld	r22, Z
    1b52:	71 81       	ldd	r23, Z+1	; 0x01
    1b54:	61 15       	cp	r22, r1
    1b56:	71 05       	cpc	r23, r1
    1b58:	99 f4       	brne	.+38     	; 0x1b80 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1b5a:	4c 0f       	add	r20, r28
    1b5c:	5d 1f       	adc	r21, r29
    1b5e:	da 01       	movw	r26, r20
    1b60:	91 96       	adiw	r26, 0x21	; 33
    1b62:	4d 91       	ld	r20, X+
    1b64:	5c 91       	ld	r21, X
    1b66:	92 97       	sbiw	r26, 0x22	; 34
    1b68:	da 01       	movw	r26, r20
    1b6a:	4c 91       	ld	r20, X
    1b6c:	2c 0f       	add	r18, r28
    1b6e:	3d 1f       	adc	r19, r29
    1b70:	d9 01       	movw	r26, r18
    1b72:	51 96       	adiw	r26, 0x11	; 17
    1b74:	2c 91       	ld	r18, X
    1b76:	51 97       	sbiw	r26, 0x11	; 17
    1b78:	42 23       	and	r20, r18
    1b7a:	11 f4       	brne	.+4      	; 0x1b80 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1b7c:	91 83       	std	Z+1, r25	; 0x01
    1b7e:	80 83       	st	Z, r24
    1b80:	1f 5f       	subi	r17, 0xFF	; 255
    1b82:	28 85       	ldd	r18, Y+8	; 0x08
    1b84:	12 17       	cp	r17, r18
    1b86:	e0 f2       	brcs	.-72     	; 0x1b40 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    1b88:	89 2c       	mov	r8, r9
    1b8a:	9f 2c       	mov	r9, r15
    1b8c:	2e 85       	ldd	r18, Y+14	; 0x0e
    1b8e:	3f 85       	ldd	r19, Y+15	; 0x0f
    1b90:	82 17       	cp	r24, r18
    1b92:	93 07       	cpc	r25, r19
    1b94:	10 f2       	brcs	.-124    	; 0x1b1a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
    1b96:	c0 92 b0 00 	sts	0x00B0, r12
    1b9a:	e0 92 b1 00 	sts	0x00B1, r14
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	0f c0       	rjmp	.+30     	; 0x1bc0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
    1ba2:	e2 2f       	mov	r30, r18
    1ba4:	f0 e0       	ldi	r31, 0x00	; 0
    1ba6:	ee 0f       	add	r30, r30
    1ba8:	ff 1f       	adc	r31, r31
    1baa:	ea 0d       	add	r30, r10
    1bac:	fb 1d       	adc	r31, r11
    1bae:	80 81       	ld	r24, Z
    1bb0:	91 81       	ldd	r25, Z+1	; 0x01
    1bb2:	00 97       	sbiw	r24, 0x00	; 0
    1bb4:	21 f4       	brne	.+8      	; 0x1bbe <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
    1bb6:	8e 85       	ldd	r24, Y+14	; 0x0e
    1bb8:	9f 85       	ldd	r25, Y+15	; 0x0f
    1bba:	91 83       	std	Z+1, r25	; 0x01
    1bbc:	80 83       	st	Z, r24
    1bbe:	2f 5f       	subi	r18, 0xFF	; 255
    1bc0:	88 85       	ldd	r24, Y+8	; 0x08
    1bc2:	28 17       	cp	r18, r24
    1bc4:	70 f3       	brcs	.-36     	; 0x1ba2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
    1bc6:	05 c0       	rjmp	.+10     	; 0x1bd2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
    1bc8:	f3 b0       	in	r15, 0x03	; 3
    1bca:	96 b0       	in	r9, 0x06	; 6
    1bcc:	79 b0       	in	r7, 0x09	; 9
    1bce:	10 e0       	ldi	r17, 0x00	; 0
    1bd0:	d8 cf       	rjmp	.-80     	; 0x1b82 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1bd2:	cd b7       	in	r28, 0x3d	; 61
    1bd4:	de b7       	in	r29, 0x3e	; 62
    1bd6:	ed e0       	ldi	r30, 0x0D	; 13
    1bd8:	0c 94 37 12 	jmp	0x246e	; 0x246e <__epilogue_restores__+0xa>

00001bdc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1bdc:	ef 92       	push	r14
    1bde:	ff 92       	push	r15
    1be0:	0f 93       	push	r16
    1be2:	1f 93       	push	r17
    1be4:	cf 93       	push	r28
    1be6:	df 93       	push	r29
    1be8:	fc 01       	movw	r30, r24
    1bea:	9b 01       	movw	r18, r22
    1bec:	00 91 7c 00 	lds	r16, 0x007C
    1bf0:	10 91 7a 00 	lds	r17, 0x007A
    1bf4:	e7 b0       	in	r14, 0x07	; 7
    1bf6:	f8 b0       	in	r15, 0x08	; 8
    1bf8:	80 91 7a 00 	lds	r24, 0x007A
    1bfc:	86 fd       	sbrc	r24, 6
    1bfe:	fc cf       	rjmp	.-8      	; 0x1bf8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1c00:	80 e0       	ldi	r24, 0x00	; 0
    1c02:	0a c0       	rjmp	.+20     	; 0x1c18 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
    1c04:	a8 2f       	mov	r26, r24
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	aa 0f       	add	r26, r26
    1c0a:	bb 1f       	adc	r27, r27
    1c0c:	a2 0f       	add	r26, r18
    1c0e:	b3 1f       	adc	r27, r19
    1c10:	11 96       	adiw	r26, 0x01	; 1
    1c12:	1c 92       	st	X, r1
    1c14:	1e 92       	st	-X, r1
    1c16:	8f 5f       	subi	r24, 0xFF	; 255
    1c18:	90 85       	ldd	r25, Z+8	; 0x08
    1c1a:	89 17       	cp	r24, r25
    1c1c:	98 f3       	brcs	.-26     	; 0x1c04 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1c1e:	97 b1       	in	r25, 0x07	; 7
    1c20:	82 a1       	ldd	r24, Z+34	; 0x22
    1c22:	80 95       	com	r24
    1c24:	89 23       	and	r24, r25
    1c26:	87 b9       	out	0x07, r24	; 7
    1c28:	98 b1       	in	r25, 0x08	; 8
    1c2a:	82 a1       	ldd	r24, Z+34	; 0x22
    1c2c:	80 95       	com	r24
    1c2e:	89 23       	and	r24, r25
    1c30:	88 b9       	out	0x08, r24	; 8
    1c32:	87 e8       	ldi	r24, 0x87	; 135
    1c34:	80 93 7a 00 	sts	0x007A, r24
    1c38:	70 e0       	ldi	r23, 0x00	; 0
    1c3a:	29 c0       	rjmp	.+82     	; 0x1c8e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1c3c:	df 01       	movw	r26, r30
    1c3e:	a6 0f       	add	r26, r22
    1c40:	b1 1d       	adc	r27, r1
    1c42:	51 96       	adiw	r26, 0x11	; 17
    1c44:	8c 91       	ld	r24, X
    1c46:	51 97       	sbiw	r26, 0x11	; 17
    1c48:	80 64       	ori	r24, 0x40	; 64
    1c4a:	80 93 7c 00 	sts	0x007C, r24
    1c4e:	80 91 7a 00 	lds	r24, 0x007A
    1c52:	80 64       	ori	r24, 0x40	; 64
    1c54:	80 93 7a 00 	sts	0x007A, r24
    1c58:	80 91 7a 00 	lds	r24, 0x007A
    1c5c:	86 fd       	sbrc	r24, 6
    1c5e:	fc cf       	rjmp	.-8      	; 0x1c58 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
    1c60:	a6 2f       	mov	r26, r22
    1c62:	b0 e0       	ldi	r27, 0x00	; 0
    1c64:	aa 0f       	add	r26, r26
    1c66:	bb 1f       	adc	r27, r27
    1c68:	a2 0f       	add	r26, r18
    1c6a:	b3 1f       	adc	r27, r19
    1c6c:	40 91 78 00 	lds	r20, 0x0078
    1c70:	50 91 79 00 	lds	r21, 0x0079
    1c74:	8d 91       	ld	r24, X+
    1c76:	9c 91       	ld	r25, X
    1c78:	11 97       	sbiw	r26, 0x01	; 1
    1c7a:	84 0f       	add	r24, r20
    1c7c:	95 1f       	adc	r25, r21
    1c7e:	11 96       	adiw	r26, 0x01	; 1
    1c80:	9c 93       	st	X, r25
    1c82:	8e 93       	st	-X, r24
    1c84:	6f 5f       	subi	r22, 0xFF	; 255
    1c86:	80 85       	ldd	r24, Z+8	; 0x08
    1c88:	68 17       	cp	r22, r24
    1c8a:	c0 f2       	brcs	.-80     	; 0x1c3c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
    1c8c:	7f 5f       	subi	r23, 0xFF	; 255
    1c8e:	81 a1       	ldd	r24, Z+33	; 0x21
    1c90:	78 17       	cp	r23, r24
    1c92:	10 f4       	brcc	.+4      	; 0x1c98 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
    1c94:	60 e0       	ldi	r22, 0x00	; 0
    1c96:	f7 cf       	rjmp	.-18     	; 0x1c86 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
    1c98:	40 e0       	ldi	r20, 0x00	; 0
    1c9a:	14 c0       	rjmp	.+40     	; 0x1cc4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
    1c9c:	c4 2f       	mov	r28, r20
    1c9e:	d0 e0       	ldi	r29, 0x00	; 0
    1ca0:	cc 0f       	add	r28, r28
    1ca2:	dd 1f       	adc	r29, r29
    1ca4:	c2 0f       	add	r28, r18
    1ca6:	d3 1f       	adc	r29, r19
    1ca8:	61 a1       	ldd	r22, Z+33	; 0x21
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	cb 01       	movw	r24, r22
    1cae:	95 95       	asr	r25
    1cb0:	87 95       	ror	r24
    1cb2:	a8 81       	ld	r26, Y
    1cb4:	b9 81       	ldd	r27, Y+1	; 0x01
    1cb6:	8a 0f       	add	r24, r26
    1cb8:	9b 1f       	adc	r25, r27
    1cba:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
    1cbe:	79 83       	std	Y+1, r23	; 0x01
    1cc0:	68 83       	st	Y, r22
    1cc2:	4f 5f       	subi	r20, 0xFF	; 255
    1cc4:	80 85       	ldd	r24, Z+8	; 0x08
    1cc6:	48 17       	cp	r20, r24
    1cc8:	48 f3       	brcs	.-46     	; 0x1c9c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
    1cca:	00 93 7c 00 	sts	0x007C, r16
    1cce:	10 93 7a 00 	sts	0x007A, r17
    1cd2:	f8 b8       	out	0x08, r15	; 8
    1cd4:	e7 b8       	out	0x07, r14	; 7
    1cd6:	cd b7       	in	r28, 0x3d	; 61
    1cd8:	de b7       	in	r29, 0x3e	; 62
    1cda:	e6 e0       	ldi	r30, 0x06	; 6
    1cdc:	0c 94 3e 12 	jmp	0x247c	; 0x247c <__epilogue_restores__+0x18>

00001ce0 <_ZN16PololuQTRSensors4readEPjh>:
    1ce0:	a0 e2       	ldi	r26, 0x20	; 32
    1ce2:	b0 e0       	ldi	r27, 0x00	; 0
    1ce4:	e6 e7       	ldi	r30, 0x76	; 118
    1ce6:	fe e0       	ldi	r31, 0x0E	; 14
    1ce8:	0c 94 21 12 	jmp	0x2442	; 0x2442 <__prologue_saves__+0x16>
    1cec:	8c 01       	movw	r16, r24
    1cee:	7b 01       	movw	r14, r22
    1cf0:	d4 2e       	mov	r13, r20
    1cf2:	84 2f       	mov	r24, r20
    1cf4:	81 50       	subi	r24, 0x01	; 1
    1cf6:	82 30       	cpi	r24, 0x02	; 2
    1cf8:	18 f4       	brcc	.+6      	; 0x1d00 <_ZN16PololuQTRSensors4readEPjh+0x20>
    1cfa:	c8 01       	movw	r24, r16
    1cfc:	0e 94 9a 0c 	call	0x1934	; 0x1934 <_ZN16PololuQTRSensors10emittersOnEv>
    1d00:	d8 01       	movw	r26, r16
    1d02:	50 96       	adiw	r26, 0x10	; 16
    1d04:	8c 91       	ld	r24, X
    1d06:	50 97       	sbiw	r26, 0x10	; 16
    1d08:	88 23       	and	r24, r24
    1d0a:	89 f4       	brne	.+34     	; 0x1d2e <_ZN16PololuQTRSensors4readEPjh+0x4e>
    1d0c:	c8 01       	movw	r24, r16
    1d0e:	b7 01       	movw	r22, r14
    1d10:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1d14:	c8 01       	movw	r24, r16
    1d16:	0e 94 85 0c 	call	0x190a	; 0x190a <_ZN16PololuQTRSensors11emittersOffEv>
    1d1a:	bd 2d       	mov	r27, r13
    1d1c:	b2 30       	cpi	r27, 0x02	; 2
    1d1e:	d9 f5       	brne	.+118    	; 0x1d96 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1d20:	c8 01       	movw	r24, r16
    1d22:	be 01       	movw	r22, r28
    1d24:	6f 5f       	subi	r22, 0xFF	; 255
    1d26:	7f 4f       	sbci	r23, 0xFF	; 255
    1d28:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1d2c:	10 c0       	rjmp	.+32     	; 0x1d4e <_ZN16PololuQTRSensors4readEPjh+0x6e>
    1d2e:	c8 01       	movw	r24, r16
    1d30:	b7 01       	movw	r22, r14
    1d32:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1d36:	c8 01       	movw	r24, r16
    1d38:	0e 94 85 0c 	call	0x190a	; 0x190a <_ZN16PololuQTRSensors11emittersOffEv>
    1d3c:	ed 2d       	mov	r30, r13
    1d3e:	e2 30       	cpi	r30, 0x02	; 2
    1d40:	51 f5       	brne	.+84     	; 0x1d96 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1d42:	c8 01       	movw	r24, r16
    1d44:	be 01       	movw	r22, r28
    1d46:	6f 5f       	subi	r22, 0xFF	; 255
    1d48:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4a:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1d4e:	60 e0       	ldi	r22, 0x00	; 0
    1d50:	ae 01       	movw	r20, r28
    1d52:	4f 5f       	subi	r20, 0xFF	; 255
    1d54:	5f 4f       	sbci	r21, 0xFF	; 255
    1d56:	1b c0       	rjmp	.+54     	; 0x1d8e <_ZN16PololuQTRSensors4readEPjh+0xae>
    1d58:	86 2f       	mov	r24, r22
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	88 0f       	add	r24, r24
    1d5e:	99 1f       	adc	r25, r25
    1d60:	f7 01       	movw	r30, r14
    1d62:	e8 0f       	add	r30, r24
    1d64:	f9 1f       	adc	r31, r25
    1d66:	84 0f       	add	r24, r20
    1d68:	95 1f       	adc	r25, r21
    1d6a:	d8 01       	movw	r26, r16
    1d6c:	1e 96       	adiw	r26, 0x0e	; 14
    1d6e:	2d 91       	ld	r18, X+
    1d70:	3c 91       	ld	r19, X
    1d72:	1f 97       	sbiw	r26, 0x0f	; 15
    1d74:	dc 01       	movw	r26, r24
    1d76:	8d 91       	ld	r24, X+
    1d78:	9c 91       	ld	r25, X
    1d7a:	11 97       	sbiw	r26, 0x01	; 1
    1d7c:	28 1b       	sub	r18, r24
    1d7e:	39 0b       	sbc	r19, r25
    1d80:	80 81       	ld	r24, Z
    1d82:	91 81       	ldd	r25, Z+1	; 0x01
    1d84:	82 0f       	add	r24, r18
    1d86:	93 1f       	adc	r25, r19
    1d88:	91 83       	std	Z+1, r25	; 0x01
    1d8a:	80 83       	st	Z, r24
    1d8c:	6f 5f       	subi	r22, 0xFF	; 255
    1d8e:	f8 01       	movw	r30, r16
    1d90:	80 85       	ldd	r24, Z+8	; 0x08
    1d92:	68 17       	cp	r22, r24
    1d94:	08 f3       	brcs	.-62     	; 0x1d58 <_ZN16PololuQTRSensors4readEPjh+0x78>
    1d96:	a0 96       	adiw	r28, 0x20	; 32
    1d98:	e7 e0       	ldi	r30, 0x07	; 7
    1d9a:	0c 94 3d 12 	jmp	0x247a	; 0x247a <__epilogue_restores__+0x16>

00001d9e <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1d9e:	8f 92       	push	r8
    1da0:	9f 92       	push	r9
    1da2:	af 92       	push	r10
    1da4:	bf 92       	push	r11
    1da6:	cf 92       	push	r12
    1da8:	df 92       	push	r13
    1daa:	ff 92       	push	r15
    1dac:	0f 93       	push	r16
    1dae:	1f 93       	push	r17
    1db0:	cf 93       	push	r28
    1db2:	df 93       	push	r29
    1db4:	ec 01       	movw	r28, r24
    1db6:	c6 2e       	mov	r12, r22
    1db8:	07 2f       	mov	r16, r23
    1dba:	f4 2e       	mov	r15, r20
    1dbc:	42 30       	cpi	r20, 0x02	; 2
    1dbe:	11 f0       	breq	.+4      	; 0x1dc4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
    1dc0:	ff 20       	and	r15, r15
    1dc2:	51 f4       	brne	.+20     	; 0x1dd8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1dc4:	8c 81       	ldd	r24, Y+4	; 0x04
    1dc6:	9d 81       	ldd	r25, Y+5	; 0x05
    1dc8:	00 97       	sbiw	r24, 0x00	; 0
    1dca:	09 f4       	brne	.+2      	; 0x1dce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
    1dcc:	a0 c0       	rjmp	.+320    	; 0x1f0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1dce:	8e 81       	ldd	r24, Y+6	; 0x06
    1dd0:	9f 81       	ldd	r25, Y+7	; 0x07
    1dd2:	00 97       	sbiw	r24, 0x00	; 0
    1dd4:	09 f4       	brne	.+2      	; 0x1dd8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1dd6:	9b c0       	rjmp	.+310    	; 0x1f0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1dd8:	8f 2d       	mov	r24, r15
    1dda:	81 50       	subi	r24, 0x01	; 1
    1ddc:	82 30       	cpi	r24, 0x02	; 2
    1dde:	50 f4       	brcc	.+20     	; 0x1df4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1de0:	88 81       	ld	r24, Y
    1de2:	99 81       	ldd	r25, Y+1	; 0x01
    1de4:	00 97       	sbiw	r24, 0x00	; 0
    1de6:	09 f4       	brne	.+2      	; 0x1dea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
    1de8:	92 c0       	rjmp	.+292    	; 0x1f0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1dea:	8a 81       	ldd	r24, Y+2	; 0x02
    1dec:	9b 81       	ldd	r25, Y+3	; 0x03
    1dee:	00 97       	sbiw	r24, 0x00	; 0
    1df0:	09 f4       	brne	.+2      	; 0x1df4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1df2:	8d c0       	rjmp	.+282    	; 0x1f0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1df4:	ce 01       	movw	r24, r28
    1df6:	6c 2d       	mov	r22, r12
    1df8:	70 2f       	mov	r23, r16
    1dfa:	4f 2d       	mov	r20, r15
    1dfc:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <_ZN16PololuQTRSensors4readEPjh>
    1e00:	ac 2c       	mov	r10, r12
    1e02:	b0 2e       	mov	r11, r16
    1e04:	00 e0       	ldi	r16, 0x00	; 0
    1e06:	10 e0       	ldi	r17, 0x00	; 0
    1e08:	88 24       	eor	r8, r8
    1e0a:	99 24       	eor	r9, r9
    1e0c:	7a c0       	rjmp	.+244    	; 0x1f02 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    1e0e:	8f 2d       	mov	r24, r15
    1e10:	81 30       	cpi	r24, 0x01	; 1
    1e12:	59 f4       	brne	.+22     	; 0x1e2a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    1e14:	ea 81       	ldd	r30, Y+2	; 0x02
    1e16:	fb 81       	ldd	r31, Y+3	; 0x03
    1e18:	e0 0f       	add	r30, r16
    1e1a:	f1 1f       	adc	r31, r17
    1e1c:	c0 80       	ld	r12, Z
    1e1e:	d1 80       	ldd	r13, Z+1	; 0x01
    1e20:	e8 81       	ld	r30, Y
    1e22:	f9 81       	ldd	r31, Y+1	; 0x01
    1e24:	e0 0f       	add	r30, r16
    1e26:	f1 1f       	adc	r31, r17
    1e28:	0d c0       	rjmp	.+26     	; 0x1e44 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1e2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e2c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e2e:	ff 20       	and	r15, r15
    1e30:	61 f4       	brne	.+24     	; 0x1e4a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
    1e32:	ee 81       	ldd	r30, Y+6	; 0x06
    1e34:	ff 81       	ldd	r31, Y+7	; 0x07
    1e36:	e0 0f       	add	r30, r16
    1e38:	f1 1f       	adc	r31, r17
    1e3a:	c0 80       	ld	r12, Z
    1e3c:	d1 80       	ldd	r13, Z+1	; 0x01
    1e3e:	80 0f       	add	r24, r16
    1e40:	91 1f       	adc	r25, r17
    1e42:	fc 01       	movw	r30, r24
    1e44:	40 81       	ld	r20, Z
    1e46:	51 81       	ldd	r21, Z+1	; 0x01
    1e48:	2b c0       	rjmp	.+86     	; 0x1ea0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1e4a:	80 0f       	add	r24, r16
    1e4c:	91 1f       	adc	r25, r17
    1e4e:	fc 01       	movw	r30, r24
    1e50:	80 81       	ld	r24, Z
    1e52:	91 81       	ldd	r25, Z+1	; 0x01
    1e54:	e8 81       	ld	r30, Y
    1e56:	f9 81       	ldd	r31, Y+1	; 0x01
    1e58:	e0 0f       	add	r30, r16
    1e5a:	f1 1f       	adc	r31, r17
    1e5c:	40 81       	ld	r20, Z
    1e5e:	51 81       	ldd	r21, Z+1	; 0x01
    1e60:	ce 84       	ldd	r12, Y+14	; 0x0e
    1e62:	df 84       	ldd	r13, Y+15	; 0x0f
    1e64:	84 17       	cp	r24, r20
    1e66:	95 07       	cpc	r25, r21
    1e68:	10 f4       	brcc	.+4      	; 0x1e6e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
    1e6a:	a6 01       	movw	r20, r12
    1e6c:	04 c0       	rjmp	.+8      	; 0x1e76 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
    1e6e:	4c 0d       	add	r20, r12
    1e70:	5d 1d       	adc	r21, r13
    1e72:	48 1b       	sub	r20, r24
    1e74:	59 0b       	sbc	r21, r25
    1e76:	ee 81       	ldd	r30, Y+6	; 0x06
    1e78:	ff 81       	ldd	r31, Y+7	; 0x07
    1e7a:	e0 0f       	add	r30, r16
    1e7c:	f1 1f       	adc	r31, r17
    1e7e:	80 81       	ld	r24, Z
    1e80:	91 81       	ldd	r25, Z+1	; 0x01
    1e82:	ea 81       	ldd	r30, Y+2	; 0x02
    1e84:	fb 81       	ldd	r31, Y+3	; 0x03
    1e86:	e0 0f       	add	r30, r16
    1e88:	f1 1f       	adc	r31, r17
    1e8a:	20 81       	ld	r18, Z
    1e8c:	31 81       	ldd	r19, Z+1	; 0x01
    1e8e:	ce 84       	ldd	r12, Y+14	; 0x0e
    1e90:	df 84       	ldd	r13, Y+15	; 0x0f
    1e92:	82 17       	cp	r24, r18
    1e94:	93 07       	cpc	r25, r19
    1e96:	20 f0       	brcs	.+8      	; 0x1ea0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1e98:	c2 0e       	add	r12, r18
    1e9a:	d3 1e       	adc	r13, r19
    1e9c:	c8 1a       	sub	r12, r24
    1e9e:	d9 0a       	sbc	r13, r25
    1ea0:	c4 1a       	sub	r12, r20
    1ea2:	d5 0a       	sbc	r13, r21
    1ea4:	d1 f0       	breq	.+52     	; 0x1eda <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1ea6:	f5 01       	movw	r30, r10
    1ea8:	60 81       	ld	r22, Z
    1eaa:	71 81       	ldd	r23, Z+1	; 0x01
    1eac:	80 e0       	ldi	r24, 0x00	; 0
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	9a 01       	movw	r18, r20
    1eb2:	40 e0       	ldi	r20, 0x00	; 0
    1eb4:	50 e0       	ldi	r21, 0x00	; 0
    1eb6:	62 1b       	sub	r22, r18
    1eb8:	73 0b       	sbc	r23, r19
    1eba:	84 0b       	sbc	r24, r20
    1ebc:	95 0b       	sbc	r25, r21
    1ebe:	28 ee       	ldi	r18, 0xE8	; 232
    1ec0:	33 e0       	ldi	r19, 0x03	; 3
    1ec2:	40 e0       	ldi	r20, 0x00	; 0
    1ec4:	50 e0       	ldi	r21, 0x00	; 0
    1ec6:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsi3>
    1eca:	96 01       	movw	r18, r12
    1ecc:	40 e0       	ldi	r20, 0x00	; 0
    1ece:	50 e0       	ldi	r21, 0x00	; 0
    1ed0:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodsi4>
    1ed4:	37 fd       	sbrc	r19, 7
    1ed6:	0a c0       	rjmp	.+20     	; 0x1eec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    1ed8:	02 c0       	rjmp	.+4      	; 0x1ede <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
    1eda:	20 e0       	ldi	r18, 0x00	; 0
    1edc:	30 e0       	ldi	r19, 0x00	; 0
    1ede:	f3 e0       	ldi	r31, 0x03	; 3
    1ee0:	29 3e       	cpi	r18, 0xE9	; 233
    1ee2:	3f 07       	cpc	r19, r31
    1ee4:	2c f0       	brlt	.+10     	; 0x1ef0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1ee6:	28 ee       	ldi	r18, 0xE8	; 232
    1ee8:	33 e0       	ldi	r19, 0x03	; 3
    1eea:	02 c0       	rjmp	.+4      	; 0x1ef0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1eec:	20 e0       	ldi	r18, 0x00	; 0
    1eee:	30 e0       	ldi	r19, 0x00	; 0
    1ef0:	f5 01       	movw	r30, r10
    1ef2:	21 93       	st	Z+, r18
    1ef4:	31 93       	st	Z+, r19
    1ef6:	5f 01       	movw	r10, r30
    1ef8:	08 94       	sec
    1efa:	81 1c       	adc	r8, r1
    1efc:	91 1c       	adc	r9, r1
    1efe:	0e 5f       	subi	r16, 0xFE	; 254
    1f00:	1f 4f       	sbci	r17, 0xFF	; 255
    1f02:	88 85       	ldd	r24, Y+8	; 0x08
    1f04:	90 e0       	ldi	r25, 0x00	; 0
    1f06:	88 16       	cp	r8, r24
    1f08:	99 06       	cpc	r9, r25
    1f0a:	0c f4       	brge	.+2      	; 0x1f0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1f0c:	80 cf       	rjmp	.-256    	; 0x1e0e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
    1f0e:	df 91       	pop	r29
    1f10:	cf 91       	pop	r28
    1f12:	1f 91       	pop	r17
    1f14:	0f 91       	pop	r16
    1f16:	ff 90       	pop	r15
    1f18:	df 90       	pop	r13
    1f1a:	cf 90       	pop	r12
    1f1c:	bf 90       	pop	r11
    1f1e:	af 90       	pop	r10
    1f20:	9f 90       	pop	r9
    1f22:	8f 90       	pop	r8
    1f24:	08 95       	ret

00001f26 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1f26:	a5 e0       	ldi	r26, 0x05	; 5
    1f28:	b0 e0       	ldi	r27, 0x00	; 0
    1f2a:	e9 e9       	ldi	r30, 0x99	; 153
    1f2c:	ff e0       	ldi	r31, 0x0F	; 15
    1f2e:	0c 94 16 12 	jmp	0x242c	; 0x242c <__prologue_saves__>
    1f32:	4c 01       	movw	r8, r24
    1f34:	c6 2e       	mov	r12, r22
    1f36:	e7 2e       	mov	r14, r23
    1f38:	2d 83       	std	Y+5, r18	; 0x05
    1f3a:	0e 94 cf 0e 	call	0x1d9e	; 0x1d9e <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1f3e:	d4 01       	movw	r26, r8
    1f40:	18 96       	adiw	r26, 0x08	; 8
    1f42:	4c 90       	ld	r4, X
    1f44:	18 97       	sbiw	r26, 0x08	; 8
    1f46:	de 2c       	mov	r13, r14
    1f48:	64 2d       	mov	r22, r4
    1f4a:	70 e0       	ldi	r23, 0x00	; 0
    1f4c:	80 e0       	ldi	r24, 0x00	; 0
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	28 ee       	ldi	r18, 0xE8	; 232
    1f52:	33 e0       	ldi	r19, 0x03	; 3
    1f54:	40 e0       	ldi	r20, 0x00	; 0
    1f56:	50 e0       	ldi	r21, 0x00	; 0
    1f58:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsi3>
    1f5c:	69 83       	std	Y+1, r22	; 0x01
    1f5e:	7a 83       	std	Y+2, r23	; 0x02
    1f60:	8b 83       	std	Y+3, r24	; 0x03
    1f62:	9c 83       	std	Y+4, r25	; 0x04
    1f64:	ee 24       	eor	r14, r14
    1f66:	ff 24       	eor	r15, r15
    1f68:	87 01       	movw	r16, r14
    1f6a:	66 24       	eor	r6, r6
    1f6c:	77 24       	eor	r7, r7
    1f6e:	88 24       	eor	r8, r8
    1f70:	99 24       	eor	r9, r9
    1f72:	54 01       	movw	r10, r8
    1f74:	55 24       	eor	r5, r5
    1f76:	36 c0       	rjmp	.+108    	; 0x1fe4 <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
    1f78:	f6 01       	movw	r30, r12
    1f7a:	30 81       	ld	r19, Z
    1f7c:	21 81       	ldd	r18, Z+1	; 0x01
    1f7e:	42 e0       	ldi	r20, 0x02	; 2
    1f80:	24 2e       	mov	r2, r20
    1f82:	31 2c       	mov	r3, r1
    1f84:	c2 0c       	add	r12, r2
    1f86:	d3 1c       	adc	r13, r3
    1f88:	c9 01       	movw	r24, r18
    1f8a:	49 2f       	mov	r20, r25
    1f8c:	58 2f       	mov	r21, r24
    1f8e:	1a 01       	movw	r2, r20
    1f90:	2d 81       	ldd	r18, Y+5	; 0x05
    1f92:	22 23       	and	r18, r18
    1f94:	29 f0       	breq	.+10     	; 0x1fa0 <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
    1f96:	88 ee       	ldi	r24, 0xE8	; 232
    1f98:	93 e0       	ldi	r25, 0x03	; 3
    1f9a:	82 19       	sub	r24, r2
    1f9c:	93 09       	sbc	r25, r3
    1f9e:	1c 01       	movw	r2, r24
    1fa0:	99 ec       	ldi	r25, 0xC9	; 201
    1fa2:	29 16       	cp	r2, r25
    1fa4:	31 04       	cpc	r3, r1
    1fa6:	2c f4       	brge	.+10     	; 0x1fb2 <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
    1fa8:	a3 e3       	ldi	r26, 0x33	; 51
    1faa:	2a 16       	cp	r2, r26
    1fac:	31 04       	cpc	r3, r1
    1fae:	94 f0       	brlt	.+36     	; 0x1fd4 <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
    1fb0:	02 c0       	rjmp	.+4      	; 0x1fb6 <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
    1fb2:	55 24       	eor	r5, r5
    1fb4:	53 94       	inc	r5
    1fb6:	b1 01       	movw	r22, r2
    1fb8:	88 27       	eor	r24, r24
    1fba:	77 fd       	sbrc	r23, 7
    1fbc:	80 95       	com	r24
    1fbe:	98 2f       	mov	r25, r24
    1fc0:	a8 01       	movw	r20, r16
    1fc2:	97 01       	movw	r18, r14
    1fc4:	0e 94 77 11 	call	0x22ee	; 0x22ee <__mulsi3>
    1fc8:	86 0e       	add	r8, r22
    1fca:	97 1e       	adc	r9, r23
    1fcc:	a8 1e       	adc	r10, r24
    1fce:	b9 1e       	adc	r11, r25
    1fd0:	62 0c       	add	r6, r2
    1fd2:	73 1c       	adc	r7, r3
    1fd4:	88 ee       	ldi	r24, 0xE8	; 232
    1fd6:	93 e0       	ldi	r25, 0x03	; 3
    1fd8:	a0 e0       	ldi	r26, 0x00	; 0
    1fda:	b0 e0       	ldi	r27, 0x00	; 0
    1fdc:	e8 0e       	add	r14, r24
    1fde:	f9 1e       	adc	r15, r25
    1fe0:	0a 1f       	adc	r16, r26
    1fe2:	1b 1f       	adc	r17, r27
    1fe4:	89 81       	ldd	r24, Y+1	; 0x01
    1fe6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fe8:	ab 81       	ldd	r26, Y+3	; 0x03
    1fea:	bc 81       	ldd	r27, Y+4	; 0x04
    1fec:	e8 16       	cp	r14, r24
    1fee:	f9 06       	cpc	r15, r25
    1ff0:	0a 07       	cpc	r16, r26
    1ff2:	1b 07       	cpc	r17, r27
    1ff4:	09 f6       	brne	.-126    	; 0x1f78 <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
    1ff6:	55 20       	and	r5, r5
    1ff8:	f1 f4       	brne	.+60     	; 0x2036 <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    1ffa:	55 24       	eor	r5, r5
    1ffc:	08 94       	sec
    1ffe:	41 08       	sbc	r4, r1
    2000:	51 08       	sbc	r5, r1
    2002:	24 ef       	ldi	r18, 0xF4	; 244
    2004:	31 e0       	ldi	r19, 0x01	; 1
    2006:	42 9e       	mul	r4, r18
    2008:	c0 01       	movw	r24, r0
    200a:	43 9e       	mul	r4, r19
    200c:	90 0d       	add	r25, r0
    200e:	52 9e       	mul	r5, r18
    2010:	90 0d       	add	r25, r0
    2012:	11 24       	eor	r1, r1
    2014:	20 91 bf 01 	lds	r18, 0x01BF
    2018:	30 91 c0 01 	lds	r19, 0x01C0
    201c:	28 17       	cp	r18, r24
    201e:	39 07       	cpc	r19, r25
    2020:	b4 f0       	brlt	.+44     	; 0x204e <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
    2022:	88 ee       	ldi	r24, 0xE8	; 232
    2024:	93 e0       	ldi	r25, 0x03	; 3
    2026:	48 9e       	mul	r4, r24
    2028:	90 01       	movw	r18, r0
    202a:	49 9e       	mul	r4, r25
    202c:	30 0d       	add	r19, r0
    202e:	58 9e       	mul	r5, r24
    2030:	30 0d       	add	r19, r0
    2032:	11 24       	eor	r1, r1
    2034:	0e c0       	rjmp	.+28     	; 0x2052 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    2036:	93 01       	movw	r18, r6
    2038:	40 e0       	ldi	r20, 0x00	; 0
    203a:	50 e0       	ldi	r21, 0x00	; 0
    203c:	c5 01       	movw	r24, r10
    203e:	b4 01       	movw	r22, r8
    2040:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    2044:	20 93 bf 01 	sts	0x01BF, r18
    2048:	30 93 c0 01 	sts	0x01C0, r19
    204c:	02 c0       	rjmp	.+4      	; 0x2052 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    204e:	20 e0       	ldi	r18, 0x00	; 0
    2050:	30 e0       	ldi	r19, 0x00	; 0
    2052:	c9 01       	movw	r24, r18
    2054:	25 96       	adiw	r28, 0x05	; 5
    2056:	e2 e1       	ldi	r30, 0x12	; 18
    2058:	0c 94 32 12 	jmp	0x2464	; 0x2464 <__epilogue_restores__>

0000205c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    205c:	a7 e6       	ldi	r26, 0x67	; 103
    205e:	b0 e0       	ldi	r27, 0x00	; 0
    2060:	e4 e3       	ldi	r30, 0x34	; 52
    2062:	f0 e1       	ldi	r31, 0x10	; 16
    2064:	0c 94 16 12 	jmp	0x242c	; 0x242c <__prologue_saves__>
    2068:	8c 01       	movw	r16, r24
    206a:	4b 01       	movw	r8, r22
    206c:	6a 01       	movw	r12, r20
    206e:	a6 96       	adiw	r28, 0x26	; 38
    2070:	2f af       	std	Y+63, r18	; 0x3f
    2072:	a6 97       	sbiw	r28, 0x26	; 38
    2074:	da 01       	movw	r26, r20
    2076:	8d 91       	ld	r24, X+
    2078:	9c 91       	ld	r25, X
    207a:	11 97       	sbiw	r26, 0x01	; 1
    207c:	00 97       	sbiw	r24, 0x00	; 0
    207e:	e9 f4       	brne	.+58     	; 0x20ba <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
    2080:	f8 01       	movw	r30, r16
    2082:	80 85       	ldd	r24, Z+8	; 0x08
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	88 0f       	add	r24, r24
    2088:	99 1f       	adc	r25, r25
    208a:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
    208e:	d6 01       	movw	r26, r12
    2090:	11 96       	adiw	r26, 0x01	; 1
    2092:	9c 93       	st	X, r25
    2094:	8e 93       	st	-X, r24
    2096:	00 97       	sbiw	r24, 0x00	; 0
    2098:	09 f4       	brne	.+2      	; 0x209c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
    209a:	e2 c0       	rjmp	.+452    	; 0x2260 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    209c:	fc 01       	movw	r30, r24
    209e:	80 e0       	ldi	r24, 0x00	; 0
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	03 c0       	rjmp	.+6      	; 0x20aa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
    20a4:	11 92       	st	Z+, r1
    20a6:	11 92       	st	Z+, r1
    20a8:	01 96       	adiw	r24, 0x01	; 1
    20aa:	d8 01       	movw	r26, r16
    20ac:	18 96       	adiw	r26, 0x08	; 8
    20ae:	2c 91       	ld	r18, X
    20b0:	18 97       	sbiw	r26, 0x08	; 8
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	82 17       	cp	r24, r18
    20b6:	93 07       	cpc	r25, r19
    20b8:	ac f3       	brlt	.-22     	; 0x20a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
    20ba:	f4 01       	movw	r30, r8
    20bc:	80 81       	ld	r24, Z
    20be:	91 81       	ldd	r25, Z+1	; 0x01
    20c0:	00 97       	sbiw	r24, 0x00	; 0
    20c2:	89 f0       	breq	.+34     	; 0x20e6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
    20c4:	ee 24       	eor	r14, r14
    20c6:	ff 24       	eor	r15, r15
    20c8:	5e 01       	movw	r10, r28
    20ca:	08 94       	sec
    20cc:	a1 1c       	adc	r10, r1
    20ce:	b1 1c       	adc	r11, r1
    20d0:	b1 e4       	ldi	r27, 0x41	; 65
    20d2:	6b 2e       	mov	r6, r27
    20d4:	71 2c       	mov	r7, r1
    20d6:	6c 0e       	add	r6, r28
    20d8:	7d 1e       	adc	r7, r29
    20da:	a1 e2       	ldi	r26, 0x21	; 33
    20dc:	4a 2e       	mov	r4, r26
    20de:	51 2c       	mov	r5, r1
    20e0:	4c 0e       	add	r4, r28
    20e2:	5d 1e       	adc	r5, r29
    20e4:	23 c0       	rjmp	.+70     	; 0x212c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    20e6:	d8 01       	movw	r26, r16
    20e8:	18 96       	adiw	r26, 0x08	; 8
    20ea:	8c 91       	ld	r24, X
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	88 0f       	add	r24, r24
    20f0:	99 1f       	adc	r25, r25
    20f2:	0e 94 53 12 	call	0x24a6	; 0x24a6 <malloc>
    20f6:	f4 01       	movw	r30, r8
    20f8:	91 83       	std	Z+1, r25	; 0x01
    20fa:	80 83       	st	Z, r24
    20fc:	00 97       	sbiw	r24, 0x00	; 0
    20fe:	09 f4       	brne	.+2      	; 0x2102 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
    2100:	af c0       	rjmp	.+350    	; 0x2260 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    2102:	fc 01       	movw	r30, r24
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	d8 01       	movw	r26, r16
    210a:	07 c0       	rjmp	.+14     	; 0x211a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
    210c:	1e 96       	adiw	r26, 0x0e	; 14
    210e:	2d 91       	ld	r18, X+
    2110:	3c 91       	ld	r19, X
    2112:	1f 97       	sbiw	r26, 0x0f	; 15
    2114:	21 93       	st	Z+, r18
    2116:	31 93       	st	Z+, r19
    2118:	01 96       	adiw	r24, 0x01	; 1
    211a:	18 96       	adiw	r26, 0x08	; 8
    211c:	2c 91       	ld	r18, X
    211e:	18 97       	sbiw	r26, 0x08	; 8
    2120:	30 e0       	ldi	r19, 0x00	; 0
    2122:	82 17       	cp	r24, r18
    2124:	93 07       	cpc	r25, r19
    2126:	94 f3       	brlt	.-28     	; 0x210c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    2128:	8d 01       	movw	r16, r26
    212a:	cc cf       	rjmp	.-104    	; 0x20c4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    212c:	c8 01       	movw	r24, r16
    212e:	b5 01       	movw	r22, r10
    2130:	a6 96       	adiw	r28, 0x26	; 38
    2132:	4f ad       	ldd	r20, Y+63	; 0x3f
    2134:	a6 97       	sbiw	r28, 0x26	; 38
    2136:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <_ZN16PololuQTRSensors4readEPjh>
    213a:	d8 01       	movw	r26, r16
    213c:	18 96       	adiw	r26, 0x08	; 8
    213e:	8c 91       	ld	r24, X
    2140:	18 97       	sbiw	r26, 0x08	; 8
    2142:	e8 2f       	mov	r30, r24
    2144:	f0 e0       	ldi	r31, 0x00	; 0
    2146:	a5 96       	adiw	r28, 0x25	; 37
    2148:	ff af       	std	Y+63, r31	; 0x3f
    214a:	ee af       	std	Y+62, r30	; 0x3e
    214c:	a5 97       	sbiw	r28, 0x25	; 37
    214e:	13 01       	movw	r2, r6
    2150:	f5 01       	movw	r30, r10
    2152:	a3 96       	adiw	r28, 0x23	; 35
    2154:	5f ae       	std	Y+63, r5	; 0x3f
    2156:	4e ae       	std	Y+62, r4	; 0x3e
    2158:	a3 97       	sbiw	r28, 0x23	; 35
    215a:	93 01       	movw	r18, r6
    215c:	40 e0       	ldi	r20, 0x00	; 0
    215e:	50 e0       	ldi	r21, 0x00	; 0
    2160:	a8 96       	adiw	r28, 0x28	; 40
    2162:	5f ae       	std	Y+63, r5	; 0x3f
    2164:	4e ae       	std	Y+62, r4	; 0x3e
    2166:	a8 97       	sbiw	r28, 0x28	; 40
    2168:	37 c0       	rjmp	.+110    	; 0x21d8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    216a:	e1 14       	cp	r14, r1
    216c:	f1 04       	cpc	r15, r1
    216e:	61 f0       	breq	.+24     	; 0x2188 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    2170:	a8 96       	adiw	r28, 0x28	; 40
    2172:	ae ad       	ldd	r26, Y+62	; 0x3e
    2174:	bf ad       	ldd	r27, Y+63	; 0x3f
    2176:	a8 97       	sbiw	r28, 0x28	; 40
    2178:	6d 91       	ld	r22, X+
    217a:	7c 91       	ld	r23, X
    217c:	11 97       	sbiw	r26, 0x01	; 1
    217e:	80 81       	ld	r24, Z
    2180:	91 81       	ldd	r25, Z+1	; 0x01
    2182:	68 17       	cp	r22, r24
    2184:	79 07       	cpc	r23, r25
    2186:	60 f4       	brcc	.+24     	; 0x21a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    2188:	80 81       	ld	r24, Z
    218a:	91 81       	ldd	r25, Z+1	; 0x01
    218c:	a8 96       	adiw	r28, 0x28	; 40
    218e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2190:	bf ad       	ldd	r27, Y+63	; 0x3f
    2192:	a8 97       	sbiw	r28, 0x28	; 40
    2194:	11 96       	adiw	r26, 0x01	; 1
    2196:	9c 93       	st	X, r25
    2198:	8e 93       	st	-X, r24
    219a:	e1 14       	cp	r14, r1
    219c:	f1 04       	cpc	r15, r1
    219e:	49 f0       	breq	.+18     	; 0x21b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    21a0:	d9 01       	movw	r26, r18
    21a2:	6d 91       	ld	r22, X+
    21a4:	7c 91       	ld	r23, X
    21a6:	11 97       	sbiw	r26, 0x01	; 1
    21a8:	80 81       	ld	r24, Z
    21aa:	91 81       	ldd	r25, Z+1	; 0x01
    21ac:	86 17       	cp	r24, r22
    21ae:	97 07       	cpc	r25, r23
    21b0:	28 f4       	brcc	.+10     	; 0x21bc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    21b2:	80 81       	ld	r24, Z
    21b4:	91 81       	ldd	r25, Z+1	; 0x01
    21b6:	d9 01       	movw	r26, r18
    21b8:	8d 93       	st	X+, r24
    21ba:	9c 93       	st	X, r25
    21bc:	4f 5f       	subi	r20, 0xFF	; 255
    21be:	5f 4f       	sbci	r21, 0xFF	; 255
    21c0:	2e 5f       	subi	r18, 0xFE	; 254
    21c2:	3f 4f       	sbci	r19, 0xFF	; 255
    21c4:	32 96       	adiw	r30, 0x02	; 2
    21c6:	a8 96       	adiw	r28, 0x28	; 40
    21c8:	8e ad       	ldd	r24, Y+62	; 0x3e
    21ca:	9f ad       	ldd	r25, Y+63	; 0x3f
    21cc:	a8 97       	sbiw	r28, 0x28	; 40
    21ce:	02 96       	adiw	r24, 0x02	; 2
    21d0:	a8 96       	adiw	r28, 0x28	; 40
    21d2:	9f af       	std	Y+63, r25	; 0x3f
    21d4:	8e af       	std	Y+62, r24	; 0x3e
    21d6:	a8 97       	sbiw	r28, 0x28	; 40
    21d8:	a5 96       	adiw	r28, 0x25	; 37
    21da:	ae ad       	ldd	r26, Y+62	; 0x3e
    21dc:	bf ad       	ldd	r27, Y+63	; 0x3f
    21de:	a5 97       	sbiw	r28, 0x25	; 37
    21e0:	4a 17       	cp	r20, r26
    21e2:	5b 07       	cpc	r21, r27
    21e4:	14 f2       	brlt	.-124    	; 0x216a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    21e6:	08 94       	sec
    21e8:	e1 1c       	adc	r14, r1
    21ea:	f1 1c       	adc	r15, r1
    21ec:	ba e0       	ldi	r27, 0x0A	; 10
    21ee:	eb 16       	cp	r14, r27
    21f0:	f1 04       	cpc	r15, r1
    21f2:	09 f0       	breq	.+2      	; 0x21f6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    21f4:	9b cf       	rjmp	.-202    	; 0x212c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    21f6:	80 e0       	ldi	r24, 0x00	; 0
    21f8:	90 e0       	ldi	r25, 0x00	; 0
    21fa:	2c c0       	rjmp	.+88     	; 0x2254 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    21fc:	f1 01       	movw	r30, r2
    21fe:	41 91       	ld	r20, Z+
    2200:	51 91       	ld	r21, Z+
    2202:	1f 01       	movw	r2, r30
    2204:	bc 01       	movw	r22, r24
    2206:	66 0f       	add	r22, r22
    2208:	77 1f       	adc	r23, r23
    220a:	d6 01       	movw	r26, r12
    220c:	ed 91       	ld	r30, X+
    220e:	fc 91       	ld	r31, X
    2210:	11 97       	sbiw	r26, 0x01	; 1
    2212:	e6 0f       	add	r30, r22
    2214:	f7 1f       	adc	r31, r23
    2216:	20 81       	ld	r18, Z
    2218:	31 81       	ldd	r19, Z+1	; 0x01
    221a:	24 17       	cp	r18, r20
    221c:	35 07       	cpc	r19, r21
    221e:	10 f4       	brcc	.+4      	; 0x2224 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    2220:	51 83       	std	Z+1, r21	; 0x01
    2222:	40 83       	st	Z, r20
    2224:	a3 96       	adiw	r28, 0x23	; 35
    2226:	ee ad       	ldd	r30, Y+62	; 0x3e
    2228:	ff ad       	ldd	r31, Y+63	; 0x3f
    222a:	a3 97       	sbiw	r28, 0x23	; 35
    222c:	41 91       	ld	r20, Z+
    222e:	51 91       	ld	r21, Z+
    2230:	a3 96       	adiw	r28, 0x23	; 35
    2232:	ff af       	std	Y+63, r31	; 0x3f
    2234:	ee af       	std	Y+62, r30	; 0x3e
    2236:	a3 97       	sbiw	r28, 0x23	; 35
    2238:	d4 01       	movw	r26, r8
    223a:	ed 91       	ld	r30, X+
    223c:	fc 91       	ld	r31, X
    223e:	11 97       	sbiw	r26, 0x01	; 1
    2240:	e6 0f       	add	r30, r22
    2242:	f7 1f       	adc	r31, r23
    2244:	20 81       	ld	r18, Z
    2246:	31 81       	ldd	r19, Z+1	; 0x01
    2248:	42 17       	cp	r20, r18
    224a:	53 07       	cpc	r21, r19
    224c:	10 f4       	brcc	.+4      	; 0x2252 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    224e:	51 83       	std	Z+1, r21	; 0x01
    2250:	40 83       	st	Z, r20
    2252:	01 96       	adiw	r24, 0x01	; 1
    2254:	f8 01       	movw	r30, r16
    2256:	20 85       	ldd	r18, Z+8	; 0x08
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	82 17       	cp	r24, r18
    225c:	93 07       	cpc	r25, r19
    225e:	74 f2       	brlt	.-100    	; 0x21fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    2260:	c9 59       	subi	r28, 0x99	; 153
    2262:	df 4f       	sbci	r29, 0xFF	; 255
    2264:	e2 e1       	ldi	r30, 0x12	; 18
    2266:	0c 94 32 12 	jmp	0x2464	; 0x2464 <__epilogue_restores__>

0000226a <_ZN16PololuQTRSensors9calibrateEh>:
    226a:	1f 93       	push	r17
    226c:	cf 93       	push	r28
    226e:	df 93       	push	r29
    2270:	ec 01       	movw	r28, r24
    2272:	16 2f       	mov	r17, r22
    2274:	86 2f       	mov	r24, r22
    2276:	81 50       	subi	r24, 0x01	; 1
    2278:	82 30       	cpi	r24, 0x02	; 2
    227a:	58 f4       	brcc	.+22     	; 0x2292 <_ZN16PololuQTRSensors9calibrateEh+0x28>
    227c:	ae 01       	movw	r20, r28
    227e:	4e 5f       	subi	r20, 0xFE	; 254
    2280:	5f 4f       	sbci	r21, 0xFF	; 255
    2282:	ce 01       	movw	r24, r28
    2284:	be 01       	movw	r22, r28
    2286:	21 e0       	ldi	r18, 0x01	; 1
    2288:	0e 94 2e 10 	call	0x205c	; 0x205c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    228c:	12 30       	cpi	r17, 0x02	; 2
    228e:	19 f0       	breq	.+6      	; 0x2296 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    2290:	0c c0       	rjmp	.+24     	; 0x22aa <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2292:	66 23       	and	r22, r22
    2294:	51 f4       	brne	.+20     	; 0x22aa <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2296:	be 01       	movw	r22, r28
    2298:	6c 5f       	subi	r22, 0xFC	; 252
    229a:	7f 4f       	sbci	r23, 0xFF	; 255
    229c:	ae 01       	movw	r20, r28
    229e:	4a 5f       	subi	r20, 0xFA	; 250
    22a0:	5f 4f       	sbci	r21, 0xFF	; 255
    22a2:	ce 01       	movw	r24, r28
    22a4:	20 e0       	ldi	r18, 0x00	; 0
    22a6:	0e 94 2e 10 	call	0x205c	; 0x205c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    22aa:	df 91       	pop	r29
    22ac:	cf 91       	pop	r28
    22ae:	1f 91       	pop	r17
    22b0:	08 95       	ret

000022b2 <_ZN16PololuQTRSensorsD1Ev>:
    22b2:	cf 93       	push	r28
    22b4:	df 93       	push	r29
    22b6:	ec 01       	movw	r28, r24
    22b8:	8a 81       	ldd	r24, Y+2	; 0x02
    22ba:	9b 81       	ldd	r25, Y+3	; 0x03
    22bc:	00 97       	sbiw	r24, 0x00	; 0
    22be:	11 f0       	breq	.+4      	; 0x22c4 <_ZN16PololuQTRSensorsD1Ev+0x12>
    22c0:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <free>
    22c4:	8e 81       	ldd	r24, Y+6	; 0x06
    22c6:	9f 81       	ldd	r25, Y+7	; 0x07
    22c8:	00 97       	sbiw	r24, 0x00	; 0
    22ca:	11 f0       	breq	.+4      	; 0x22d0 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    22cc:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <free>
    22d0:	88 81       	ld	r24, Y
    22d2:	99 81       	ldd	r25, Y+1	; 0x01
    22d4:	00 97       	sbiw	r24, 0x00	; 0
    22d6:	11 f0       	breq	.+4      	; 0x22dc <_ZN16PololuQTRSensorsD1Ev+0x2a>
    22d8:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <free>
    22dc:	8c 81       	ldd	r24, Y+4	; 0x04
    22de:	9d 81       	ldd	r25, Y+5	; 0x05
    22e0:	00 97       	sbiw	r24, 0x00	; 0
    22e2:	11 f0       	breq	.+4      	; 0x22e8 <_ZN16PololuQTRSensorsD1Ev+0x36>
    22e4:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <free>
    22e8:	df 91       	pop	r29
    22ea:	cf 91       	pop	r28
    22ec:	08 95       	ret

000022ee <__mulsi3>:
    22ee:	db 01       	movw	r26, r22
    22f0:	8f 93       	push	r24
    22f2:	9f 93       	push	r25
    22f4:	0e 94 0b 12 	call	0x2416	; 0x2416 <__muluhisi3>
    22f8:	bf 91       	pop	r27
    22fa:	af 91       	pop	r26
    22fc:	a2 9f       	mul	r26, r18
    22fe:	80 0d       	add	r24, r0
    2300:	91 1d       	adc	r25, r1
    2302:	a3 9f       	mul	r26, r19
    2304:	90 0d       	add	r25, r0
    2306:	b2 9f       	mul	r27, r18
    2308:	90 0d       	add	r25, r0
    230a:	11 24       	eor	r1, r1
    230c:	08 95       	ret

0000230e <__udivmodqi4>:
    230e:	99 1b       	sub	r25, r25
    2310:	79 e0       	ldi	r23, 0x09	; 9
    2312:	04 c0       	rjmp	.+8      	; 0x231c <__udivmodqi4_ep>

00002314 <__udivmodqi4_loop>:
    2314:	99 1f       	adc	r25, r25
    2316:	96 17       	cp	r25, r22
    2318:	08 f0       	brcs	.+2      	; 0x231c <__udivmodqi4_ep>
    231a:	96 1b       	sub	r25, r22

0000231c <__udivmodqi4_ep>:
    231c:	88 1f       	adc	r24, r24
    231e:	7a 95       	dec	r23
    2320:	c9 f7       	brne	.-14     	; 0x2314 <__udivmodqi4_loop>
    2322:	80 95       	com	r24
    2324:	08 95       	ret

00002326 <__udivmodhi4>:
    2326:	aa 1b       	sub	r26, r26
    2328:	bb 1b       	sub	r27, r27
    232a:	51 e1       	ldi	r21, 0x11	; 17
    232c:	07 c0       	rjmp	.+14     	; 0x233c <__udivmodhi4_ep>

0000232e <__udivmodhi4_loop>:
    232e:	aa 1f       	adc	r26, r26
    2330:	bb 1f       	adc	r27, r27
    2332:	a6 17       	cp	r26, r22
    2334:	b7 07       	cpc	r27, r23
    2336:	10 f0       	brcs	.+4      	; 0x233c <__udivmodhi4_ep>
    2338:	a6 1b       	sub	r26, r22
    233a:	b7 0b       	sbc	r27, r23

0000233c <__udivmodhi4_ep>:
    233c:	88 1f       	adc	r24, r24
    233e:	99 1f       	adc	r25, r25
    2340:	5a 95       	dec	r21
    2342:	a9 f7       	brne	.-22     	; 0x232e <__udivmodhi4_loop>
    2344:	80 95       	com	r24
    2346:	90 95       	com	r25
    2348:	bc 01       	movw	r22, r24
    234a:	cd 01       	movw	r24, r26
    234c:	08 95       	ret

0000234e <__divmodhi4>:
    234e:	97 fb       	bst	r25, 7
    2350:	07 2e       	mov	r0, r23
    2352:	16 f4       	brtc	.+4      	; 0x2358 <__divmodhi4+0xa>
    2354:	00 94       	com	r0
    2356:	07 d0       	rcall	.+14     	; 0x2366 <__divmodhi4_neg1>
    2358:	77 fd       	sbrc	r23, 7
    235a:	09 d0       	rcall	.+18     	; 0x236e <__divmodhi4_neg2>
    235c:	0e 94 93 11 	call	0x2326	; 0x2326 <__udivmodhi4>
    2360:	07 fc       	sbrc	r0, 7
    2362:	05 d0       	rcall	.+10     	; 0x236e <__divmodhi4_neg2>
    2364:	3e f4       	brtc	.+14     	; 0x2374 <__divmodhi4_exit>

00002366 <__divmodhi4_neg1>:
    2366:	90 95       	com	r25
    2368:	81 95       	neg	r24
    236a:	9f 4f       	sbci	r25, 0xFF	; 255
    236c:	08 95       	ret

0000236e <__divmodhi4_neg2>:
    236e:	70 95       	com	r23
    2370:	61 95       	neg	r22
    2372:	7f 4f       	sbci	r23, 0xFF	; 255

00002374 <__divmodhi4_exit>:
    2374:	08 95       	ret

00002376 <__udivmodsi4>:
    2376:	a1 e2       	ldi	r26, 0x21	; 33
    2378:	1a 2e       	mov	r1, r26
    237a:	aa 1b       	sub	r26, r26
    237c:	bb 1b       	sub	r27, r27
    237e:	fd 01       	movw	r30, r26
    2380:	0d c0       	rjmp	.+26     	; 0x239c <__udivmodsi4_ep>

00002382 <__udivmodsi4_loop>:
    2382:	aa 1f       	adc	r26, r26
    2384:	bb 1f       	adc	r27, r27
    2386:	ee 1f       	adc	r30, r30
    2388:	ff 1f       	adc	r31, r31
    238a:	a2 17       	cp	r26, r18
    238c:	b3 07       	cpc	r27, r19
    238e:	e4 07       	cpc	r30, r20
    2390:	f5 07       	cpc	r31, r21
    2392:	20 f0       	brcs	.+8      	; 0x239c <__udivmodsi4_ep>
    2394:	a2 1b       	sub	r26, r18
    2396:	b3 0b       	sbc	r27, r19
    2398:	e4 0b       	sbc	r30, r20
    239a:	f5 0b       	sbc	r31, r21

0000239c <__udivmodsi4_ep>:
    239c:	66 1f       	adc	r22, r22
    239e:	77 1f       	adc	r23, r23
    23a0:	88 1f       	adc	r24, r24
    23a2:	99 1f       	adc	r25, r25
    23a4:	1a 94       	dec	r1
    23a6:	69 f7       	brne	.-38     	; 0x2382 <__udivmodsi4_loop>
    23a8:	60 95       	com	r22
    23aa:	70 95       	com	r23
    23ac:	80 95       	com	r24
    23ae:	90 95       	com	r25
    23b0:	9b 01       	movw	r18, r22
    23b2:	ac 01       	movw	r20, r24
    23b4:	bd 01       	movw	r22, r26
    23b6:	cf 01       	movw	r24, r30
    23b8:	08 95       	ret

000023ba <__divmodsi4>:
    23ba:	05 2e       	mov	r0, r21
    23bc:	97 fb       	bst	r25, 7
    23be:	1e f4       	brtc	.+6      	; 0x23c6 <__divmodsi4+0xc>
    23c0:	00 94       	com	r0
    23c2:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__negsi2>
    23c6:	57 fd       	sbrc	r21, 7
    23c8:	07 d0       	rcall	.+14     	; 0x23d8 <__divmodsi4_neg2>
    23ca:	0e 94 bb 11 	call	0x2376	; 0x2376 <__udivmodsi4>
    23ce:	07 fc       	sbrc	r0, 7
    23d0:	03 d0       	rcall	.+6      	; 0x23d8 <__divmodsi4_neg2>
    23d2:	4e f4       	brtc	.+18     	; 0x23e6 <__divmodsi4_exit>
    23d4:	0c 94 f4 11 	jmp	0x23e8	; 0x23e8 <__negsi2>

000023d8 <__divmodsi4_neg2>:
    23d8:	50 95       	com	r21
    23da:	40 95       	com	r20
    23dc:	30 95       	com	r19
    23de:	21 95       	neg	r18
    23e0:	3f 4f       	sbci	r19, 0xFF	; 255
    23e2:	4f 4f       	sbci	r20, 0xFF	; 255
    23e4:	5f 4f       	sbci	r21, 0xFF	; 255

000023e6 <__divmodsi4_exit>:
    23e6:	08 95       	ret

000023e8 <__negsi2>:
    23e8:	90 95       	com	r25
    23ea:	80 95       	com	r24
    23ec:	70 95       	com	r23
    23ee:	61 95       	neg	r22
    23f0:	7f 4f       	sbci	r23, 0xFF	; 255
    23f2:	8f 4f       	sbci	r24, 0xFF	; 255
    23f4:	9f 4f       	sbci	r25, 0xFF	; 255
    23f6:	08 95       	ret

000023f8 <__umulhisi3>:
    23f8:	a2 9f       	mul	r26, r18
    23fa:	b0 01       	movw	r22, r0
    23fc:	b3 9f       	mul	r27, r19
    23fe:	c0 01       	movw	r24, r0
    2400:	a3 9f       	mul	r26, r19
    2402:	70 0d       	add	r23, r0
    2404:	81 1d       	adc	r24, r1
    2406:	11 24       	eor	r1, r1
    2408:	91 1d       	adc	r25, r1
    240a:	b2 9f       	mul	r27, r18
    240c:	70 0d       	add	r23, r0
    240e:	81 1d       	adc	r24, r1
    2410:	11 24       	eor	r1, r1
    2412:	91 1d       	adc	r25, r1
    2414:	08 95       	ret

00002416 <__muluhisi3>:
    2416:	0e 94 fc 11 	call	0x23f8	; 0x23f8 <__umulhisi3>
    241a:	a5 9f       	mul	r26, r21
    241c:	90 0d       	add	r25, r0
    241e:	b4 9f       	mul	r27, r20
    2420:	90 0d       	add	r25, r0
    2422:	a4 9f       	mul	r26, r20
    2424:	80 0d       	add	r24, r0
    2426:	91 1d       	adc	r25, r1
    2428:	11 24       	eor	r1, r1
    242a:	08 95       	ret

0000242c <__prologue_saves__>:
    242c:	2f 92       	push	r2
    242e:	3f 92       	push	r3
    2430:	4f 92       	push	r4
    2432:	5f 92       	push	r5
    2434:	6f 92       	push	r6
    2436:	7f 92       	push	r7
    2438:	8f 92       	push	r8
    243a:	9f 92       	push	r9
    243c:	af 92       	push	r10
    243e:	bf 92       	push	r11
    2440:	cf 92       	push	r12
    2442:	df 92       	push	r13
    2444:	ef 92       	push	r14
    2446:	ff 92       	push	r15
    2448:	0f 93       	push	r16
    244a:	1f 93       	push	r17
    244c:	cf 93       	push	r28
    244e:	df 93       	push	r29
    2450:	cd b7       	in	r28, 0x3d	; 61
    2452:	de b7       	in	r29, 0x3e	; 62
    2454:	ca 1b       	sub	r28, r26
    2456:	db 0b       	sbc	r29, r27
    2458:	0f b6       	in	r0, 0x3f	; 63
    245a:	f8 94       	cli
    245c:	de bf       	out	0x3e, r29	; 62
    245e:	0f be       	out	0x3f, r0	; 63
    2460:	cd bf       	out	0x3d, r28	; 61
    2462:	09 94       	ijmp

00002464 <__epilogue_restores__>:
    2464:	2a 88       	ldd	r2, Y+18	; 0x12
    2466:	39 88       	ldd	r3, Y+17	; 0x11
    2468:	48 88       	ldd	r4, Y+16	; 0x10
    246a:	5f 84       	ldd	r5, Y+15	; 0x0f
    246c:	6e 84       	ldd	r6, Y+14	; 0x0e
    246e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2470:	8c 84       	ldd	r8, Y+12	; 0x0c
    2472:	9b 84       	ldd	r9, Y+11	; 0x0b
    2474:	aa 84       	ldd	r10, Y+10	; 0x0a
    2476:	b9 84       	ldd	r11, Y+9	; 0x09
    2478:	c8 84       	ldd	r12, Y+8	; 0x08
    247a:	df 80       	ldd	r13, Y+7	; 0x07
    247c:	ee 80       	ldd	r14, Y+6	; 0x06
    247e:	fd 80       	ldd	r15, Y+5	; 0x05
    2480:	0c 81       	ldd	r16, Y+4	; 0x04
    2482:	1b 81       	ldd	r17, Y+3	; 0x03
    2484:	aa 81       	ldd	r26, Y+2	; 0x02
    2486:	b9 81       	ldd	r27, Y+1	; 0x01
    2488:	ce 0f       	add	r28, r30
    248a:	d1 1d       	adc	r29, r1
    248c:	0f b6       	in	r0, 0x3f	; 63
    248e:	f8 94       	cli
    2490:	de bf       	out	0x3e, r29	; 62
    2492:	0f be       	out	0x3f, r0	; 63
    2494:	cd bf       	out	0x3d, r28	; 61
    2496:	ed 01       	movw	r28, r26
    2498:	08 95       	ret

0000249a <__tablejump2__>:
    249a:	ee 0f       	add	r30, r30
    249c:	ff 1f       	adc	r31, r31

0000249e <__tablejump__>:
    249e:	05 90       	lpm	r0, Z+
    24a0:	f4 91       	lpm	r31, Z
    24a2:	e0 2d       	mov	r30, r0
    24a4:	09 94       	ijmp

000024a6 <malloc>:
    24a6:	cf 93       	push	r28
    24a8:	df 93       	push	r29
    24aa:	82 30       	cpi	r24, 0x02	; 2
    24ac:	91 05       	cpc	r25, r1
    24ae:	10 f4       	brcc	.+4      	; 0x24b4 <malloc+0xe>
    24b0:	82 e0       	ldi	r24, 0x02	; 2
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	e0 91 08 02 	lds	r30, 0x0208
    24b8:	f0 91 09 02 	lds	r31, 0x0209
    24bc:	20 e0       	ldi	r18, 0x00	; 0
    24be:	30 e0       	ldi	r19, 0x00	; 0
    24c0:	a0 e0       	ldi	r26, 0x00	; 0
    24c2:	b0 e0       	ldi	r27, 0x00	; 0
    24c4:	30 97       	sbiw	r30, 0x00	; 0
    24c6:	39 f1       	breq	.+78     	; 0x2516 <malloc+0x70>
    24c8:	40 81       	ld	r20, Z
    24ca:	51 81       	ldd	r21, Z+1	; 0x01
    24cc:	48 17       	cp	r20, r24
    24ce:	59 07       	cpc	r21, r25
    24d0:	b8 f0       	brcs	.+46     	; 0x2500 <malloc+0x5a>
    24d2:	48 17       	cp	r20, r24
    24d4:	59 07       	cpc	r21, r25
    24d6:	71 f4       	brne	.+28     	; 0x24f4 <malloc+0x4e>
    24d8:	82 81       	ldd	r24, Z+2	; 0x02
    24da:	93 81       	ldd	r25, Z+3	; 0x03
    24dc:	10 97       	sbiw	r26, 0x00	; 0
    24de:	29 f0       	breq	.+10     	; 0x24ea <malloc+0x44>
    24e0:	13 96       	adiw	r26, 0x03	; 3
    24e2:	9c 93       	st	X, r25
    24e4:	8e 93       	st	-X, r24
    24e6:	12 97       	sbiw	r26, 0x02	; 2
    24e8:	2c c0       	rjmp	.+88     	; 0x2542 <malloc+0x9c>
    24ea:	90 93 09 02 	sts	0x0209, r25
    24ee:	80 93 08 02 	sts	0x0208, r24
    24f2:	27 c0       	rjmp	.+78     	; 0x2542 <malloc+0x9c>
    24f4:	21 15       	cp	r18, r1
    24f6:	31 05       	cpc	r19, r1
    24f8:	31 f0       	breq	.+12     	; 0x2506 <malloc+0x60>
    24fa:	42 17       	cp	r20, r18
    24fc:	53 07       	cpc	r21, r19
    24fe:	18 f0       	brcs	.+6      	; 0x2506 <malloc+0x60>
    2500:	a9 01       	movw	r20, r18
    2502:	db 01       	movw	r26, r22
    2504:	01 c0       	rjmp	.+2      	; 0x2508 <malloc+0x62>
    2506:	ef 01       	movw	r28, r30
    2508:	9a 01       	movw	r18, r20
    250a:	bd 01       	movw	r22, r26
    250c:	df 01       	movw	r26, r30
    250e:	02 80       	ldd	r0, Z+2	; 0x02
    2510:	f3 81       	ldd	r31, Z+3	; 0x03
    2512:	e0 2d       	mov	r30, r0
    2514:	d7 cf       	rjmp	.-82     	; 0x24c4 <malloc+0x1e>
    2516:	21 15       	cp	r18, r1
    2518:	31 05       	cpc	r19, r1
    251a:	f9 f0       	breq	.+62     	; 0x255a <malloc+0xb4>
    251c:	28 1b       	sub	r18, r24
    251e:	39 0b       	sbc	r19, r25
    2520:	24 30       	cpi	r18, 0x04	; 4
    2522:	31 05       	cpc	r19, r1
    2524:	80 f4       	brcc	.+32     	; 0x2546 <malloc+0xa0>
    2526:	8a 81       	ldd	r24, Y+2	; 0x02
    2528:	9b 81       	ldd	r25, Y+3	; 0x03
    252a:	61 15       	cp	r22, r1
    252c:	71 05       	cpc	r23, r1
    252e:	21 f0       	breq	.+8      	; 0x2538 <malloc+0x92>
    2530:	fb 01       	movw	r30, r22
    2532:	93 83       	std	Z+3, r25	; 0x03
    2534:	82 83       	std	Z+2, r24	; 0x02
    2536:	04 c0       	rjmp	.+8      	; 0x2540 <malloc+0x9a>
    2538:	90 93 09 02 	sts	0x0209, r25
    253c:	80 93 08 02 	sts	0x0208, r24
    2540:	fe 01       	movw	r30, r28
    2542:	32 96       	adiw	r30, 0x02	; 2
    2544:	44 c0       	rjmp	.+136    	; 0x25ce <malloc+0x128>
    2546:	fe 01       	movw	r30, r28
    2548:	e2 0f       	add	r30, r18
    254a:	f3 1f       	adc	r31, r19
    254c:	81 93       	st	Z+, r24
    254e:	91 93       	st	Z+, r25
    2550:	22 50       	subi	r18, 0x02	; 2
    2552:	31 09       	sbc	r19, r1
    2554:	39 83       	std	Y+1, r19	; 0x01
    2556:	28 83       	st	Y, r18
    2558:	3a c0       	rjmp	.+116    	; 0x25ce <malloc+0x128>
    255a:	20 91 06 02 	lds	r18, 0x0206
    255e:	30 91 07 02 	lds	r19, 0x0207
    2562:	23 2b       	or	r18, r19
    2564:	41 f4       	brne	.+16     	; 0x2576 <malloc+0xd0>
    2566:	20 91 2b 01 	lds	r18, 0x012B
    256a:	30 91 2c 01 	lds	r19, 0x012C
    256e:	30 93 07 02 	sts	0x0207, r19
    2572:	20 93 06 02 	sts	0x0206, r18
    2576:	20 91 29 01 	lds	r18, 0x0129
    257a:	30 91 2a 01 	lds	r19, 0x012A
    257e:	21 15       	cp	r18, r1
    2580:	31 05       	cpc	r19, r1
    2582:	41 f4       	brne	.+16     	; 0x2594 <malloc+0xee>
    2584:	2d b7       	in	r18, 0x3d	; 61
    2586:	3e b7       	in	r19, 0x3e	; 62
    2588:	40 91 2d 01 	lds	r20, 0x012D
    258c:	50 91 2e 01 	lds	r21, 0x012E
    2590:	24 1b       	sub	r18, r20
    2592:	35 0b       	sbc	r19, r21
    2594:	e0 91 06 02 	lds	r30, 0x0206
    2598:	f0 91 07 02 	lds	r31, 0x0207
    259c:	e2 17       	cp	r30, r18
    259e:	f3 07       	cpc	r31, r19
    25a0:	a0 f4       	brcc	.+40     	; 0x25ca <malloc+0x124>
    25a2:	2e 1b       	sub	r18, r30
    25a4:	3f 0b       	sbc	r19, r31
    25a6:	28 17       	cp	r18, r24
    25a8:	39 07       	cpc	r19, r25
    25aa:	78 f0       	brcs	.+30     	; 0x25ca <malloc+0x124>
    25ac:	ac 01       	movw	r20, r24
    25ae:	4e 5f       	subi	r20, 0xFE	; 254
    25b0:	5f 4f       	sbci	r21, 0xFF	; 255
    25b2:	24 17       	cp	r18, r20
    25b4:	35 07       	cpc	r19, r21
    25b6:	48 f0       	brcs	.+18     	; 0x25ca <malloc+0x124>
    25b8:	4e 0f       	add	r20, r30
    25ba:	5f 1f       	adc	r21, r31
    25bc:	50 93 07 02 	sts	0x0207, r21
    25c0:	40 93 06 02 	sts	0x0206, r20
    25c4:	81 93       	st	Z+, r24
    25c6:	91 93       	st	Z+, r25
    25c8:	02 c0       	rjmp	.+4      	; 0x25ce <malloc+0x128>
    25ca:	e0 e0       	ldi	r30, 0x00	; 0
    25cc:	f0 e0       	ldi	r31, 0x00	; 0
    25ce:	cf 01       	movw	r24, r30
    25d0:	df 91       	pop	r29
    25d2:	cf 91       	pop	r28
    25d4:	08 95       	ret

000025d6 <free>:
    25d6:	cf 93       	push	r28
    25d8:	df 93       	push	r29
    25da:	00 97       	sbiw	r24, 0x00	; 0
    25dc:	09 f4       	brne	.+2      	; 0x25e0 <free+0xa>
    25de:	87 c0       	rjmp	.+270    	; 0x26ee <free+0x118>
    25e0:	fc 01       	movw	r30, r24
    25e2:	32 97       	sbiw	r30, 0x02	; 2
    25e4:	13 82       	std	Z+3, r1	; 0x03
    25e6:	12 82       	std	Z+2, r1	; 0x02
    25e8:	c0 91 08 02 	lds	r28, 0x0208
    25ec:	d0 91 09 02 	lds	r29, 0x0209
    25f0:	20 97       	sbiw	r28, 0x00	; 0
    25f2:	81 f4       	brne	.+32     	; 0x2614 <free+0x3e>
    25f4:	20 81       	ld	r18, Z
    25f6:	31 81       	ldd	r19, Z+1	; 0x01
    25f8:	28 0f       	add	r18, r24
    25fa:	39 1f       	adc	r19, r25
    25fc:	80 91 06 02 	lds	r24, 0x0206
    2600:	90 91 07 02 	lds	r25, 0x0207
    2604:	82 17       	cp	r24, r18
    2606:	93 07       	cpc	r25, r19
    2608:	79 f5       	brne	.+94     	; 0x2668 <free+0x92>
    260a:	f0 93 07 02 	sts	0x0207, r31
    260e:	e0 93 06 02 	sts	0x0206, r30
    2612:	6d c0       	rjmp	.+218    	; 0x26ee <free+0x118>
    2614:	de 01       	movw	r26, r28
    2616:	20 e0       	ldi	r18, 0x00	; 0
    2618:	30 e0       	ldi	r19, 0x00	; 0
    261a:	ae 17       	cp	r26, r30
    261c:	bf 07       	cpc	r27, r31
    261e:	50 f4       	brcc	.+20     	; 0x2634 <free+0x5e>
    2620:	12 96       	adiw	r26, 0x02	; 2
    2622:	4d 91       	ld	r20, X+
    2624:	5c 91       	ld	r21, X
    2626:	13 97       	sbiw	r26, 0x03	; 3
    2628:	9d 01       	movw	r18, r26
    262a:	41 15       	cp	r20, r1
    262c:	51 05       	cpc	r21, r1
    262e:	09 f1       	breq	.+66     	; 0x2672 <free+0x9c>
    2630:	da 01       	movw	r26, r20
    2632:	f3 cf       	rjmp	.-26     	; 0x261a <free+0x44>
    2634:	b3 83       	std	Z+3, r27	; 0x03
    2636:	a2 83       	std	Z+2, r26	; 0x02
    2638:	40 81       	ld	r20, Z
    263a:	51 81       	ldd	r21, Z+1	; 0x01
    263c:	84 0f       	add	r24, r20
    263e:	95 1f       	adc	r25, r21
    2640:	8a 17       	cp	r24, r26
    2642:	9b 07       	cpc	r25, r27
    2644:	71 f4       	brne	.+28     	; 0x2662 <free+0x8c>
    2646:	8d 91       	ld	r24, X+
    2648:	9c 91       	ld	r25, X
    264a:	11 97       	sbiw	r26, 0x01	; 1
    264c:	84 0f       	add	r24, r20
    264e:	95 1f       	adc	r25, r21
    2650:	02 96       	adiw	r24, 0x02	; 2
    2652:	91 83       	std	Z+1, r25	; 0x01
    2654:	80 83       	st	Z, r24
    2656:	12 96       	adiw	r26, 0x02	; 2
    2658:	8d 91       	ld	r24, X+
    265a:	9c 91       	ld	r25, X
    265c:	13 97       	sbiw	r26, 0x03	; 3
    265e:	93 83       	std	Z+3, r25	; 0x03
    2660:	82 83       	std	Z+2, r24	; 0x02
    2662:	21 15       	cp	r18, r1
    2664:	31 05       	cpc	r19, r1
    2666:	29 f4       	brne	.+10     	; 0x2672 <free+0x9c>
    2668:	f0 93 09 02 	sts	0x0209, r31
    266c:	e0 93 08 02 	sts	0x0208, r30
    2670:	3e c0       	rjmp	.+124    	; 0x26ee <free+0x118>
    2672:	d9 01       	movw	r26, r18
    2674:	13 96       	adiw	r26, 0x03	; 3
    2676:	fc 93       	st	X, r31
    2678:	ee 93       	st	-X, r30
    267a:	12 97       	sbiw	r26, 0x02	; 2
    267c:	4d 91       	ld	r20, X+
    267e:	5d 91       	ld	r21, X+
    2680:	a4 0f       	add	r26, r20
    2682:	b5 1f       	adc	r27, r21
    2684:	ea 17       	cp	r30, r26
    2686:	fb 07       	cpc	r31, r27
    2688:	79 f4       	brne	.+30     	; 0x26a8 <free+0xd2>
    268a:	80 81       	ld	r24, Z
    268c:	91 81       	ldd	r25, Z+1	; 0x01
    268e:	84 0f       	add	r24, r20
    2690:	95 1f       	adc	r25, r21
    2692:	02 96       	adiw	r24, 0x02	; 2
    2694:	d9 01       	movw	r26, r18
    2696:	11 96       	adiw	r26, 0x01	; 1
    2698:	9c 93       	st	X, r25
    269a:	8e 93       	st	-X, r24
    269c:	82 81       	ldd	r24, Z+2	; 0x02
    269e:	93 81       	ldd	r25, Z+3	; 0x03
    26a0:	13 96       	adiw	r26, 0x03	; 3
    26a2:	9c 93       	st	X, r25
    26a4:	8e 93       	st	-X, r24
    26a6:	12 97       	sbiw	r26, 0x02	; 2
    26a8:	e0 e0       	ldi	r30, 0x00	; 0
    26aa:	f0 e0       	ldi	r31, 0x00	; 0
    26ac:	8a 81       	ldd	r24, Y+2	; 0x02
    26ae:	9b 81       	ldd	r25, Y+3	; 0x03
    26b0:	00 97       	sbiw	r24, 0x00	; 0
    26b2:	19 f0       	breq	.+6      	; 0x26ba <free+0xe4>
    26b4:	fe 01       	movw	r30, r28
    26b6:	ec 01       	movw	r28, r24
    26b8:	f9 cf       	rjmp	.-14     	; 0x26ac <free+0xd6>
    26ba:	ce 01       	movw	r24, r28
    26bc:	02 96       	adiw	r24, 0x02	; 2
    26be:	28 81       	ld	r18, Y
    26c0:	39 81       	ldd	r19, Y+1	; 0x01
    26c2:	82 0f       	add	r24, r18
    26c4:	93 1f       	adc	r25, r19
    26c6:	20 91 06 02 	lds	r18, 0x0206
    26ca:	30 91 07 02 	lds	r19, 0x0207
    26ce:	28 17       	cp	r18, r24
    26d0:	39 07       	cpc	r19, r25
    26d2:	69 f4       	brne	.+26     	; 0x26ee <free+0x118>
    26d4:	30 97       	sbiw	r30, 0x00	; 0
    26d6:	29 f4       	brne	.+10     	; 0x26e2 <free+0x10c>
    26d8:	10 92 09 02 	sts	0x0209, r1
    26dc:	10 92 08 02 	sts	0x0208, r1
    26e0:	02 c0       	rjmp	.+4      	; 0x26e6 <free+0x110>
    26e2:	13 82       	std	Z+3, r1	; 0x03
    26e4:	12 82       	std	Z+2, r1	; 0x02
    26e6:	d0 93 07 02 	sts	0x0207, r29
    26ea:	c0 93 06 02 	sts	0x0206, r28
    26ee:	df 91       	pop	r29
    26f0:	cf 91       	pop	r28
    26f2:	08 95       	ret

000026f4 <__eerd_word_m328p>:
    26f4:	a8 e1       	ldi	r26, 0x18	; 24
    26f6:	b0 e0       	ldi	r27, 0x00	; 0
    26f8:	42 e0       	ldi	r20, 0x02	; 2
    26fa:	50 e0       	ldi	r21, 0x00	; 0
    26fc:	0c 94 87 13 	jmp	0x270e	; 0x270e <__eerd_blraw_m328p>

00002700 <__eewr_word_m328p>:
    2700:	0e 94 95 13 	call	0x272a	; 0x272a <__eewr_byte_m328p>
    2704:	27 2f       	mov	r18, r23
    2706:	0c 94 96 13 	jmp	0x272c	; 0x272c <__eewr_r18_m328p>

0000270a <__eerd_block_m328p>:
    270a:	dc 01       	movw	r26, r24
    270c:	cb 01       	movw	r24, r22

0000270e <__eerd_blraw_m328p>:
    270e:	fc 01       	movw	r30, r24
    2710:	f9 99       	sbic	0x1f, 1	; 31
    2712:	fe cf       	rjmp	.-4      	; 0x2710 <__eerd_blraw_m328p+0x2>
    2714:	06 c0       	rjmp	.+12     	; 0x2722 <__eerd_blraw_m328p+0x14>
    2716:	f2 bd       	out	0x22, r31	; 34
    2718:	e1 bd       	out	0x21, r30	; 33
    271a:	f8 9a       	sbi	0x1f, 0	; 31
    271c:	31 96       	adiw	r30, 0x01	; 1
    271e:	00 b4       	in	r0, 0x20	; 32
    2720:	0d 92       	st	X+, r0
    2722:	41 50       	subi	r20, 0x01	; 1
    2724:	50 40       	sbci	r21, 0x00	; 0
    2726:	b8 f7       	brcc	.-18     	; 0x2716 <__eerd_blraw_m328p+0x8>
    2728:	08 95       	ret

0000272a <__eewr_byte_m328p>:
    272a:	26 2f       	mov	r18, r22

0000272c <__eewr_r18_m328p>:
    272c:	f9 99       	sbic	0x1f, 1	; 31
    272e:	fe cf       	rjmp	.-4      	; 0x272c <__eewr_r18_m328p>
    2730:	1f ba       	out	0x1f, r1	; 31
    2732:	92 bd       	out	0x22, r25	; 34
    2734:	81 bd       	out	0x21, r24	; 33
    2736:	20 bd       	out	0x20, r18	; 32
    2738:	0f b6       	in	r0, 0x3f	; 63
    273a:	f8 94       	cli
    273c:	fa 9a       	sbi	0x1f, 2	; 31
    273e:	f9 9a       	sbi	0x1f, 1	; 31
    2740:	0f be       	out	0x3f, r0	; 63
    2742:	01 96       	adiw	r24, 0x01	; 1
    2744:	08 95       	ret

00002746 <__do_global_dtors>:
    2746:	10 e0       	ldi	r17, 0x00	; 0
    2748:	c8 e7       	ldi	r28, 0x78	; 120
    274a:	d0 e0       	ldi	r29, 0x00	; 0
    274c:	04 c0       	rjmp	.+8      	; 0x2756 <__do_global_dtors+0x10>
    274e:	fe 01       	movw	r30, r28
    2750:	0e 94 4f 12 	call	0x249e	; 0x249e <__tablejump__>
    2754:	22 96       	adiw	r28, 0x02	; 2
    2756:	ca 37       	cpi	r28, 0x7A	; 122
    2758:	d1 07       	cpc	r29, r17
    275a:	c9 f7       	brne	.-14     	; 0x274e <__do_global_dtors+0x8>
    275c:	f8 94       	cli

0000275e <__stop_program>:
    275e:	ff cf       	rjmp	.-2      	; 0x275e <__stop_program>
