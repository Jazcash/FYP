
FYP - Line Maze.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  00002a18  00002acc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a18  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000080  0080013c  0080013c  00002b08  2**0
                  ALLOC
  3 .eeprom       00000014  00810000  00810000  00002b08  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         000061e0  00000000  00000000  00002b1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00008093  00000000  00000000  00008cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000030  00000000  00000000  00010d8f  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000110  00000000  00000000  00010dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000022f7  00000000  00000000  00010ecf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000671  00000000  00000000  000131c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000bd3  00000000  00000000  00013837  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000003c8  00000000  00000000  0001440c  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000a7e  00000000  00000000  000147d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00001159  00000000  00000000  00015252  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000148  00000000  00000000  000163ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 44 00 	jmp	0x88	; 0x88 <__dtors_end>
       4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
       c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      24:	0c 94 ce 0c 	jmp	0x199c	; 0x199c <__vector_9>
      28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      34:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__vector_13>
      38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
      64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 1f       	adc	r16, r16
      70:	1f 1f       	adc	r17, r31
      72:	1f 1f       	adc	r17, r31
      74:	1f 1f       	adc	r17, r31

00000076 <_ZL5bloop>:
      76:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

00000080 <__ctors_start>:
      80:	17 06       	cpc	r1, r23
      82:	b9 0d       	add	r27, r9

00000084 <__ctors_end>:
      84:	1c 06       	cpc	r1, r28
      86:	ba 0d       	add	r27, r10

00000088 <__dtors_end>:
      88:	11 24       	eor	r1, r1
      8a:	1f be       	out	0x3f, r1	; 63
      8c:	cf ef       	ldi	r28, 0xFF	; 255
      8e:	d8 e0       	ldi	r29, 0x08	; 8
      90:	de bf       	out	0x3e, r29	; 62
      92:	cd bf       	out	0x3d, r28	; 61

00000094 <__do_copy_data>:
      94:	11 e0       	ldi	r17, 0x01	; 1
      96:	a0 e0       	ldi	r26, 0x00	; 0
      98:	b1 e0       	ldi	r27, 0x01	; 1
      9a:	e8 e1       	ldi	r30, 0x18	; 24
      9c:	fa e2       	ldi	r31, 0x2A	; 42
      9e:	02 c0       	rjmp	.+4      	; 0xa4 <__do_copy_data+0x10>
      a0:	05 90       	lpm	r0, Z+
      a2:	0d 92       	st	X+, r0
      a4:	ac 33       	cpi	r26, 0x3C	; 60
      a6:	b1 07       	cpc	r27, r17
      a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0xc>

000000aa <__do_clear_bss>:
      aa:	21 e0       	ldi	r18, 0x01	; 1
      ac:	ac e3       	ldi	r26, 0x3C	; 60
      ae:	b1 e0       	ldi	r27, 0x01	; 1
      b0:	01 c0       	rjmp	.+2      	; 0xb4 <.do_clear_bss_start>

000000b2 <.do_clear_bss_loop>:
      b2:	1d 92       	st	X+, r1

000000b4 <.do_clear_bss_start>:
      b4:	ac 3b       	cpi	r26, 0xBC	; 188
      b6:	b2 07       	cpc	r27, r18
      b8:	e1 f7       	brne	.-8      	; 0xb2 <.do_clear_bss_loop>

000000ba <__do_global_ctors>:
      ba:	10 e0       	ldi	r17, 0x00	; 0
      bc:	c4 e8       	ldi	r28, 0x84	; 132
      be:	d0 e0       	ldi	r29, 0x00	; 0
      c0:	04 c0       	rjmp	.+8      	; 0xca <__do_global_ctors+0x10>
      c2:	22 97       	sbiw	r28, 0x02	; 2
      c4:	fe 01       	movw	r30, r28
      c6:	0e 94 af 13 	call	0x275e	; 0x275e <__tablejump__>
      ca:	c0 38       	cpi	r28, 0x80	; 128
      cc:	d1 07       	cpc	r29, r17
      ce:	c9 f7       	brne	.-14     	; 0xc2 <__do_global_ctors+0x8>
      d0:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <main>
      d4:	0c 94 ff 14 	jmp	0x29fe	; 0x29fe <__do_global_dtors>

000000d8 <__bad_interrupt>:
      d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <_ZN10cDirection11getOppositeEv>:
			faceInt = 4;
		}
		return static_cast<Direction>(faceInt - 1);
	}
	Direction getOpposite(){
		int faceInt = dir;
      dc:	fc 01       	movw	r30, r24
      de:	80 81       	ld	r24, Z
      e0:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt >= 3) {
      e2:	83 30       	cpi	r24, 0x03	; 3
      e4:	91 05       	cpc	r25, r1
      e6:	14 f0       	brlt	.+4      	; 0xec <_ZN10cDirection11getOppositeEv+0x10>
			faceInt = -1;
      e8:	8f ef       	ldi	r24, 0xFF	; 255
      ea:	9f ef       	ldi	r25, 0xFF	; 255
		}
		Direction temp = static_cast<Direction>(faceInt + 1);
      ec:	8f 5f       	subi	r24, 0xFF	; 255
		faceInt = temp;
      ee:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt >= 3) {
      f0:	83 30       	cpi	r24, 0x03	; 3
      f2:	91 05       	cpc	r25, r1
      f4:	11 f4       	brne	.+4      	; 0xfa <_ZN10cDirection11getOppositeEv+0x1e>
			faceInt = -1;
      f6:	8f ef       	ldi	r24, 0xFF	; 255
      f8:	9f ef       	ldi	r25, 0xFF	; 255
		}
		return static_cast<Direction>(faceInt + 1);
	}
      fa:	8f 5f       	subi	r24, 0xFF	; 255
      fc:	08 95       	ret

000000fe <_ZN4nodeC1Ev>:
	node* connections[4]; // 0 = South (where mouse came from), 1 = West, 2 = North, 3 = East
	//int8_t costs[4];
	//node* parent;
	//float f, g, h;

	node(){
      fe:	fc 01       	movw	r30, r24
		this->visited = false;
     100:	12 82       	std	Z+2, r1	; 0x02
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
     102:	14 82       	std	Z+4, r1	; 0x04
     104:	13 82       	std	Z+3, r1	; 0x03
     106:	16 82       	std	Z+6, r1	; 0x06
     108:	15 82       	std	Z+5, r1	; 0x05
     10a:	10 86       	std	Z+8, r1	; 0x08
     10c:	17 82       	std	Z+7, r1	; 0x07
     10e:	12 86       	std	Z+10, r1	; 0x0a
     110:	11 86       	std	Z+9, r1	; 0x09
     112:	08 95       	ret

00000114 <_ZN4nodeD1Ev>:
		}
	}
	~node(){
     114:	ef 92       	push	r14
     116:	ff 92       	push	r15
     118:	0f 93       	push	r16
     11a:	1f 93       	push	r17
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	7c 01       	movw	r14, r24
     122:	c0 e0       	ldi	r28, 0x00	; 0
     124:	d0 e0       	ldi	r29, 0x00	; 0
     126:	f7 01       	movw	r30, r14
     128:	ec 0f       	add	r30, r28
     12a:	fd 1f       	adc	r31, r29
		for (int i=0; i<4; i++){
			delete connections[i];
     12c:	03 81       	ldd	r16, Z+3	; 0x03
     12e:	14 81       	ldd	r17, Z+4	; 0x04
     130:	01 15       	cp	r16, r1
     132:	11 05       	cpc	r17, r1
     134:	31 f0       	breq	.+12     	; 0x142 <_ZN4nodeD1Ev+0x2e>
     136:	c8 01       	movw	r24, r16
     138:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN4nodeD1Ev>
void* operator new(size_t objsize) {
	return malloc(objsize);
}

void operator delete(void* obj) {
	free(obj);
     13c:	c8 01       	movw	r24, r16
     13e:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
     142:	22 96       	adiw	r28, 0x02	; 2
		for (int i=0; i<4; i++){
			this->connections[i] = NULL;
		}
	}
	~node(){
		for (int i=0; i<4; i++){
     144:	c8 30       	cpi	r28, 0x08	; 8
     146:	d1 05       	cpc	r29, r1
     148:	71 f7       	brne	.-36     	; 0x126 <_ZN4nodeD1Ev+0x12>
			delete connections[i];
		}
	}
     14a:	df 91       	pop	r29
     14c:	cf 91       	pop	r28
     14e:	1f 91       	pop	r17
     150:	0f 91       	pop	r16
     152:	ff 90       	pop	r15
     154:	ef 90       	pop	r14
     156:	08 95       	ret

00000158 <_ZN9NodeStack4pushEP4node9Direction>:
	
	StackNode* _getNodeByPosition(StackNode* n, position p);
	StackNode* _getNodeWithUnvisitedConnections(StackNode* n);
};

void NodeStack::push(node* n, Direction d) {
     158:	ef 92       	push	r14
     15a:	ff 92       	push	r15
     15c:	0f 93       	push	r16
     15e:	1f 93       	push	r17
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	1f 92       	push	r1
     166:	cd b7       	in	r28, 0x3d	; 61
     168:	de b7       	in	r29, 0x3e	; 62
     16a:	7c 01       	movw	r14, r24
     16c:	8b 01       	movw	r16, r22
#define UTILITY_H_

#include <stdlib.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     16e:	85 e0       	ldi	r24, 0x05	; 5
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	49 83       	std	Y+1, r20	; 0x01
     174:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     178:	fc 01       	movw	r30, r24
	top = new StackNode(n, top, d);
     17a:	d7 01       	movw	r26, r14
     17c:	8d 91       	ld	r24, X+
     17e:	9c 91       	ld	r25, X
     180:	11 97       	sbiw	r26, 0x01	; 1
	struct StackNode {
		node* data;
		StackNode* next;
		Direction enteredFrom;

		StackNode(node* newData, StackNode* nextNode, Direction d) : data(newData), next(nextNode), enteredFrom(d) {}
     182:	11 83       	std	Z+1, r17	; 0x01
     184:	00 83       	st	Z, r16
     186:	93 83       	std	Z+3, r25	; 0x03
     188:	82 83       	std	Z+2, r24	; 0x02
     18a:	49 81       	ldd	r20, Y+1	; 0x01
     18c:	44 83       	std	Z+4, r20	; 0x04
	StackNode* _getNodeByPosition(StackNode* n, position p);
	StackNode* _getNodeWithUnvisitedConnections(StackNode* n);
};

void NodeStack::push(node* n, Direction d) {
	top = new StackNode(n, top, d);
     18e:	ed 93       	st	X+, r30
     190:	fc 93       	st	X, r31
}
     192:	0f 90       	pop	r0
     194:	df 91       	pop	r29
     196:	cf 91       	pop	r28
     198:	1f 91       	pop	r17
     19a:	0f 91       	pop	r16
     19c:	ff 90       	pop	r15
     19e:	ef 90       	pop	r14
     1a0:	08 95       	ret

000001a2 <_ZN9NodeStack3popEv>:

Direction NodeStack::pop() {
     1a2:	cf 93       	push	r28
     1a4:	df 93       	push	r29
	}
	return NULL;
}

bool NodeStack::isEmpty() {
	if (top == 0) {
     1a6:	fc 01       	movw	r30, r24
     1a8:	c0 81       	ld	r28, Z
     1aa:	d1 81       	ldd	r29, Z+1	; 0x01
     1ac:	20 97       	sbiw	r28, 0x00	; 0
     1ae:	11 f4       	brne	.+4      	; 0x1b4 <_ZN9NodeStack3popEv+0x12>
		delete topNode;
		Direction d = topNode->enteredFrom;
		return d;
		//return data;
	}
	return NORTH;
     1b0:	82 e0       	ldi	r24, 0x02	; 2
     1b2:	09 c0       	rjmp	.+18     	; 0x1c6 <_ZN9NodeStack3popEv+0x24>
}

Direction NodeStack::pop() {
	if ( !isEmpty() ) {
		StackNode *topNode = top;
		top = top->next;
     1b4:	2a 81       	ldd	r18, Y+2	; 0x02
     1b6:	3b 81       	ldd	r19, Y+3	; 0x03
     1b8:	fc 01       	movw	r30, r24
     1ba:	31 83       	std	Z+1, r19	; 0x01
     1bc:	20 83       	st	Z, r18
}

void operator delete(void* obj) {
	free(obj);
     1be:	ce 01       	movw	r24, r28
     1c0:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
		//node* data = topNode->data;
		delete topNode;
		Direction d = topNode->enteredFrom;
     1c4:	8c 81       	ldd	r24, Y+4	; 0x04
		return d;
		//return data;
	}
	return NORTH;
}
     1c6:	df 91       	pop	r29
     1c8:	cf 91       	pop	r28
     1ca:	08 95       	ret

000001cc <_ZN9NodeStackD1Ev>:
struct NodeStack {
public:
	NodeStack() : top(0) {
		
	}
	~NodeStack() {
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	ec 01       	movw	r28, r24
	}
	return NULL;
}

bool NodeStack::isEmpty() {
	if (top == 0) {
     1d2:	88 81       	ld	r24, Y
     1d4:	99 81       	ldd	r25, Y+1	; 0x01
     1d6:	89 2b       	or	r24, r25
     1d8:	21 f0       	breq	.+8      	; 0x1e2 <_ZN9NodeStackD1Ev+0x16>
	NodeStack() : top(0) {
		
	}
	~NodeStack() {
		while (!isEmpty()) {
			pop();
     1da:	ce 01       	movw	r24, r28
     1dc:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN9NodeStack3popEv>
     1e0:	f8 cf       	rjmp	.-16     	; 0x1d2 <_ZN9NodeStackD1Ev+0x6>
		}
		isEmpty();
	}
     1e2:	df 91       	pop	r29
     1e4:	cf 91       	pop	r28
     1e6:	08 95       	ret

000001e8 <_ZN9NodeStack6getTopEv>:
	}
	return NULL;
}

bool NodeStack::isEmpty() {
	if (top == 0) {
     1e8:	dc 01       	movw	r26, r24
     1ea:	ed 91       	ld	r30, X+
     1ec:	fc 91       	ld	r31, X
     1ee:	30 97       	sbiw	r30, 0x00	; 0
     1f0:	19 f4       	brne	.+6      	; 0x1f8 <_ZN9NodeStack6getTopEv+0x10>

node* NodeStack::getTop() {
	if ( !isEmpty() ) {
		return top->data;
	}
	return NULL;
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	08 95       	ret
	return NORTH;
}

node* NodeStack::getTop() {
	if ( !isEmpty() ) {
		return top->data;
     1f8:	80 81       	ld	r24, Z
     1fa:	91 81       	ldd	r25, Z+1	; 0x01
	}
	return NULL;
}
     1fc:	08 95       	ret

000001fe <_Z22load_custom_charactersv>:
	currentPos.x = 0;
	currentPos.y = 0;
}

void load_custom_characters(){
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
     1fe:	60 e0       	ldi	r22, 0x00	; 0
     200:	88 e6       	ldi	r24, 0x68	; 104
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
     208:	61 e0       	ldi	r22, 0x01	; 1
     20a:	89 e6       	ldi	r24, 0x69	; 105
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
     212:	62 e0       	ldi	r22, 0x02	; 2
     214:	8a e6       	ldi	r24, 0x6A	; 106
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
     21c:	63 e0       	ldi	r22, 0x03	; 3
     21e:	8b e6       	ldi	r24, 0x6B	; 107
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     226:	64 e0       	ldi	r22, 0x04	; 4
     228:	8c e6       	ldi	r24, 0x6C	; 108
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     230:	65 e0       	ldi	r22, 0x05	; 5
     232:	8d e6       	ldi	r24, 0x6D	; 109
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     23a:	66 e0       	ldi	r22, 0x06	; 6
     23c:	8e e6       	ldi	r24, 0x6E	; 110
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	0e 94 12 0a 	call	0x1424	; 0x1424 <lcd_load_custom_character>
	clear();
     244:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <clear>

00000248 <_Z16display_readingsPKj>:
}

void display_readings(const unsigned int *calibrated_values){
     248:	cf 92       	push	r12
     24a:	df 92       	push	r13
     24c:	ef 92       	push	r14
     24e:	ff 92       	push	r15
     250:	0f 93       	push	r16
     252:	1f 93       	push	r17
     254:	cf 93       	push	r28
     256:	df 93       	push	r29
     258:	cd b7       	in	r28, 0x3d	; 61
     25a:	de b7       	in	r29, 0x3e	; 62
     25c:	2a 97       	sbiw	r28, 0x0a	; 10
     25e:	0f b6       	in	r0, 0x3f	; 63
     260:	f8 94       	cli
     262:	de bf       	out	0x3e, r29	; 62
     264:	0f be       	out	0x3f, r0	; 63
     266:	cd bf       	out	0x3d, r28	; 61
     268:	8c 01       	movw	r16, r24
	unsigned char i;
	for(i=0;i<5;i++) {
     26a:	d1 2c       	mov	r13, r1
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     26c:	8a e0       	ldi	r24, 0x0A	; 10
     26e:	c8 2e       	mov	r12, r24
		char c = display_characters[calibrated_values[i]/101];
     270:	95 e6       	ldi	r25, 0x65	; 101
     272:	e9 2e       	mov	r14, r25
     274:	f1 2c       	mov	r15, r1
}

void display_readings(const unsigned int *calibrated_values){
	unsigned char i;
	for(i=0;i<5;i++) {
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     276:	ef e2       	ldi	r30, 0x2F	; 47
     278:	f1 e0       	ldi	r31, 0x01	; 1
     27a:	de 01       	movw	r26, r28
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	8c 2d       	mov	r24, r12
     280:	01 90       	ld	r0, Z+
     282:	0d 92       	st	X+, r0
     284:	8a 95       	dec	r24
     286:	e1 f7       	brne	.-8      	; 0x280 <_Z16display_readingsPKj+0x38>
		char c = display_characters[calibrated_values[i]/101];
     288:	f8 01       	movw	r30, r16
     28a:	81 91       	ld	r24, Z+
     28c:	91 91       	ld	r25, Z+
     28e:	8f 01       	movw	r16, r30
     290:	b7 01       	movw	r22, r14
     292:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
     296:	81 e0       	ldi	r24, 0x01	; 1
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	8c 0f       	add	r24, r28
     29c:	9d 1f       	adc	r25, r29
     29e:	68 0f       	add	r22, r24
     2a0:	79 1f       	adc	r23, r25
		print_character(c);
     2a2:	fb 01       	movw	r30, r22
     2a4:	80 81       	ld	r24, Z
     2a6:	0e 94 15 0a 	call	0x142a	; 0x142a <print_character>
	clear();
}

void display_readings(const unsigned int *calibrated_values){
	unsigned char i;
	for(i=0;i<5;i++) {
     2aa:	d3 94       	inc	r13
     2ac:	f5 e0       	ldi	r31, 0x05	; 5
     2ae:	df 12       	cpse	r13, r31
     2b0:	e2 cf       	rjmp	.-60     	; 0x276 <_Z16display_readingsPKj+0x2e>
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
		char c = display_characters[calibrated_values[i]/101];
		print_character(c);
	}
}
     2b2:	2a 96       	adiw	r28, 0x0a	; 10
     2b4:	0f b6       	in	r0, 0x3f	; 63
     2b6:	f8 94       	cli
     2b8:	de bf       	out	0x3e, r29	; 62
     2ba:	0f be       	out	0x3f, r0	; 63
     2bc:	cd bf       	out	0x3d, r28	; 61
     2be:	df 91       	pop	r29
     2c0:	cf 91       	pop	r28
     2c2:	1f 91       	pop	r17
     2c4:	0f 91       	pop	r16
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	df 90       	pop	r13
     2cc:	cf 90       	pop	r12
     2ce:	08 95       	ret

000002d0 <_Z7memTestv>:
	set_motors(0,0);
	
	saveCalibration();
}

void memTest(){
     2d0:	ef 92       	push	r14
     2d2:	ff 92       	push	r15
     2d4:	0f 93       	push	r16
     2d6:	1f 93       	push	r17
     2d8:	cf 93       	push	r28
     2da:	df 93       	push	r29
     2dc:	00 d0       	rcall	.+0      	; 0x2de <_Z7memTestv+0xe>
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
	int startRam = get_free_ram();
     2e2:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     2e6:	8c 01       	movw	r16, r24
	clear();
     2e8:	0e 94 92 0a 	call	0x1524	; 0x1524 <clear>
	print(" ");
     2ec:	89 e3       	ldi	r24, 0x39	; 57
     2ee:	91 e0       	ldi	r25, 0x01	; 1
     2f0:	0e 94 a9 0a 	call	0x1552	; 0x1552 <print>
	print_long(startRam - get_free_ram());
     2f4:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     2f8:	b8 01       	movw	r22, r16
     2fa:	68 1b       	sub	r22, r24
     2fc:	79 0b       	sbc	r23, r25
     2fe:	88 27       	eor	r24, r24
     300:	77 fd       	sbrc	r23, 7
     302:	80 95       	com	r24
     304:	98 2f       	mov	r25, r24
     306:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
	lcd_goto_xy(0, 1);
     30a:	61 e0       	ldi	r22, 0x01	; 1
     30c:	80 e0       	ldi	r24, 0x00	; 0
     30e:	0e 94 29 0b 	call	0x1652	; 0x1652 <lcd_goto_xy>
#include "node.h"
#include <stdbool.h>

struct NodeStack {
public:
	NodeStack() : top(0) {
     312:	1a 82       	std	Y+2, r1	; 0x02
     314:	19 82       	std	Y+1, r1	; 0x01
#define UTILITY_H_

#include <stdlib.h>

void* operator new(size_t objsize) {
	return malloc(objsize);
     316:	8b e0       	ldi	r24, 0x0B	; 11
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     31e:	7c 01       	movw	r14, r24
	
	NodeStack myNodeStack;
	node* a = new node;
     320:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
	myNodeStack.push(a, NORTH);
     324:	42 e0       	ldi	r20, 0x02	; 2
     326:	b7 01       	movw	r22, r14
     328:	ce 01       	movw	r24, r28
     32a:	01 96       	adiw	r24, 0x01	; 1
     32c:	0e 94 ac 00 	call	0x158	; 0x158 <_ZN9NodeStack4pushEP4node9Direction>
	
	print(" ");
     330:	89 e3       	ldi	r24, 0x39	; 57
     332:	91 e0       	ldi	r25, 0x01	; 1
     334:	0e 94 a9 0a 	call	0x1552	; 0x1552 <print>
	print_long(startRam - get_free_ram());
     338:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     33c:	b8 01       	movw	r22, r16
     33e:	68 1b       	sub	r22, r24
     340:	79 0b       	sbc	r23, r25
     342:	88 27       	eor	r24, r24
     344:	77 fd       	sbrc	r23, 7
     346:	80 95       	com	r24
     348:	98 2f       	mov	r25, r24
     34a:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
     34e:	ce 01       	movw	r24, r28
     350:	01 96       	adiw	r24, 0x01	; 1
     352:	0e 94 e6 00 	call	0x1cc	; 0x1cc <_ZN9NodeStackD1Ev>
}
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	df 91       	pop	r29
     35c:	cf 91       	pop	r28
     35e:	1f 91       	pop	r17
     360:	0f 91       	pop	r16
     362:	ff 90       	pop	r15
     364:	ef 90       	pop	r14
     366:	08 95       	ret

00000368 <_Z15loadCalibrationv>:
		get_line_sensors_calibrated_maximum_on()[i]
		);
	}
}

void loadCalibration(){
     368:	0f 93       	push	r16
     36a:	1f 93       	push	r17
     36c:	cf 93       	push	r28
     36e:	df 93       	push	r29
	calibrate_line_sensors(IR_EMITTERS_ON); // need to do this to allocate the arrays
     370:	81 e0       	ldi	r24, 0x01	; 1
     372:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <calibrate_line_sensors>
     376:	c0 e0       	ldi	r28, 0x00	; 0
     378:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for(i=0;i<5;i++){
		get_line_sensors_calibrated_minimum_on()[i] =
     37a:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <get_line_sensors_calibrated_minimum_on>
     37e:	8c 01       	movw	r16, r24
     380:	0c 0f       	add	r16, r28
     382:	1d 1f       	adc	r17, r29
		eeprom_read_word(&calibrated_minimum_on[i]);
     384:	ce 01       	movw	r24, r28
     386:	80 50       	subi	r24, 0x00	; 0
     388:	90 40       	sbci	r25, 0x00	; 0
     38a:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <__eerd_word_m328p>
     38e:	f8 01       	movw	r30, r16
     390:	91 83       	std	Z+1, r25	; 0x01
     392:	80 83       	st	Z, r24

		get_line_sensors_calibrated_maximum_on()[i] =
     394:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <get_line_sensors_calibrated_maximum_on>
     398:	8c 01       	movw	r16, r24
     39a:	0c 0f       	add	r16, r28
     39c:	1d 1f       	adc	r17, r29
		eeprom_read_word(&calibrated_maximum_on[i]);
     39e:	ce 01       	movw	r24, r28
     3a0:	86 5f       	subi	r24, 0xF6	; 246
     3a2:	9f 4f       	sbci	r25, 0xFF	; 255
     3a4:	0e 94 e9 14 	call	0x29d2	; 0x29d2 <__eerd_word_m328p>
     3a8:	f8 01       	movw	r30, r16
     3aa:	91 83       	std	Z+1, r25	; 0x01
     3ac:	80 83       	st	Z, r24
     3ae:	22 96       	adiw	r28, 0x02	; 2
}

void loadCalibration(){
	calibrate_line_sensors(IR_EMITTERS_ON); // need to do this to allocate the arrays
	int i;
	for(i=0;i<5;i++){
     3b0:	ca 30       	cpi	r28, 0x0A	; 10
     3b2:	d1 05       	cpc	r29, r1
     3b4:	11 f7       	brne	.-60     	; 0x37a <_Z15loadCalibrationv+0x12>
		eeprom_read_word(&calibrated_minimum_on[i]);

		get_line_sensors_calibrated_maximum_on()[i] =
		eeprom_read_word(&calibrated_maximum_on[i]);
	}
}
     3b6:	df 91       	pop	r29
     3b8:	cf 91       	pop	r28
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	08 95       	ret

000003c0 <_Z10initialisev>:
#include "lineMaze.h"

void initialise(){
	pololu_3pi_init(2000);
     3c0:	80 ed       	ldi	r24, 0xD0	; 208
     3c2:	97 e0       	ldi	r25, 0x07	; 7
     3c4:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <pololu_3pi_init>
	load_custom_characters();
     3c8:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z22load_custom_charactersv>
	load_custom_characters();
     3cc:	0e 94 ff 00 	call	0x1fe	; 0x1fe <_Z22load_custom_charactersv>
	loadCalibration();
     3d0:	0e 94 b4 01 	call	0x368	; 0x368 <_Z15loadCalibrationv>
	play_from_program_space(bloop);
     3d4:	86 e7       	ldi	r24, 0x76	; 118
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	0e 94 4f 09 	call	0x129e	; 0x129e <play_from_program_space>
	
	foundFinish = false;
     3dc:	10 92 b4 01 	sts	0x01B4, r1
	isLeft = false;
     3e0:	10 92 b6 01 	sts	0x01B6, r1
	isRight = false;
     3e4:	10 92 b5 01 	sts	0x01B5, r1
	isForward = false;
     3e8:	10 92 b7 01 	sts	0x01B7, r1
	
	currentDir.dir = NORTH;
     3ec:	82 e0       	ldi	r24, 0x02	; 2
     3ee:	80 93 b3 01 	sts	0x01B3, r24
	currentPos.x = 0;
     3f2:	10 92 b1 01 	sts	0x01B1, r1
	currentPos.y = 0;
     3f6:	10 92 b2 01 	sts	0x01B2, r1
     3fa:	08 95       	ret

000003fc <_Z4stopv>:
	}
	stop();
}

void stop(){
	set_motors(0, 0);
     3fc:	60 e0       	ldi	r22, 0x00	; 0
     3fe:	70 e0       	ldi	r23, 0x00	; 0
     400:	80 e0       	ldi	r24, 0x00	; 0
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0c 94 33 0c 	jmp	0x1866	; 0x1866 <set_motors>

00000408 <_Z4turn4Turn>:
		get_line_sensors_calibrated_maximum_on()[i] =
		eeprom_read_word(&calibrated_maximum_on[i]);
	}
}

void turn(Turn t){
     408:	cf 93       	push	r28
     40a:	df 93       	push	r29
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
     410:	2a 97       	sbiw	r28, 0x0a	; 10
     412:	0f b6       	in	r0, 0x3f	; 63
     414:	f8 94       	cli
     416:	de bf       	out	0x3e, r29	; 62
     418:	0f be       	out	0x3f, r0	; 63
     41a:	cd bf       	out	0x3d, r28	; 61
	unsigned int sensors[5];
	unsigned int turnCalibration = 600;
	
	switch(t){
     41c:	81 30       	cpi	r24, 0x01	; 1
     41e:	61 f1       	breq	.+88     	; 0x478 <_Z4turn4Turn+0x70>
     420:	70 f0       	brcs	.+28     	; 0x43e <_Z4turn4Turn+0x36>
     422:	82 30       	cpi	r24, 0x02	; 2
     424:	09 f0       	breq	.+2      	; 0x428 <_Z4turn4Turn+0x20>
     426:	5d c0       	rjmp	.+186    	; 0x4e2 <_Z4turn4Turn+0xda>
			read_line(sensors,IR_EMITTERS_ON);
		}
		currentDir.next();
		break;
		case BACK:
		set_motors(40, -40);
     428:	68 ed       	ldi	r22, 0xD8	; 216
     42a:	7f ef       	ldi	r23, 0xFF	; 255
     42c:	88 e2       	ldi	r24, 0x28	; 40
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 33 0c 	call	0x1866	; 0x1866 <set_motors>
		delay_ms(700);
     434:	8c eb       	ldi	r24, 0xBC	; 188
     436:	92 e0       	ldi	r25, 0x02	; 2
     438:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
     43c:	34 c0       	rjmp	.+104    	; 0x4a6 <_Z4turn4Turn+0x9e>
	unsigned int sensors[5];
	unsigned int turnCalibration = 600;
	
	switch(t){
		case LEFT:
		set_motors(-40, 40);
     43e:	68 e2       	ldi	r22, 0x28	; 40
     440:	70 e0       	ldi	r23, 0x00	; 0
     442:	88 ed       	ldi	r24, 0xD8	; 216
     444:	9f ef       	ldi	r25, 0xFF	; 255
     446:	0e 94 33 0c 	call	0x1866	; 0x1866 <set_motors>
		delay_ms(200);
     44a:	88 ec       	ldi	r24, 0xC8	; 200
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
		read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] < turnCalibration){
			read_line(sensors,IR_EMITTERS_ON);
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	ce 01       	movw	r24, r28
     456:	01 96       	adiw	r24, 0x01	; 1
     458:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
	switch(t){
		case LEFT:
		set_motors(-40, 40);
		delay_ms(200);
		read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] < turnCalibration){
     45c:	8d 81       	ldd	r24, Y+5	; 0x05
     45e:	9e 81       	ldd	r25, Y+6	; 0x06
     460:	88 35       	cpi	r24, 0x58	; 88
     462:	92 40       	sbci	r25, 0x02	; 2
     464:	b0 f3       	brcs	.-20     	; 0x452 <_Z4turn4Turn+0x4a>
			faceInt = -1;
		}
		this->dir = static_cast<Direction>(faceInt + 1);
	}
	void previous() {
		int faceInt = dir;
     466:	80 91 b3 01 	lds	r24, 0x01B3
     46a:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt <= 0) {
     46c:	00 97       	sbiw	r24, 0x00	; 0
     46e:	11 f4       	brne	.+4      	; 0x474 <_Z4turn4Turn+0x6c>
			faceInt = 4;
     470:	84 e0       	ldi	r24, 0x04	; 4
     472:	90 e0       	ldi	r25, 0x00	; 0
		}
		this->dir = static_cast<Direction>(faceInt - 1);
     474:	81 50       	subi	r24, 0x01	; 1
     476:	33 c0       	rjmp	.+102    	; 0x4de <_Z4turn4Turn+0xd6>
			read_line(sensors,IR_EMITTERS_ON);
		}
		currentDir.previous();
		break;
		case RIGHT:
		set_motors(40, -40);
     478:	68 ed       	ldi	r22, 0xD8	; 216
     47a:	7f ef       	ldi	r23, 0xFF	; 255
     47c:	88 e2       	ldi	r24, 0x28	; 40
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	0e 94 33 0c 	call	0x1866	; 0x1866 <set_motors>
		delay_ms(200);
     484:	88 ec       	ldi	r24, 0xC8	; 200
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
		read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] < turnCalibration){
			read_line(sensors,IR_EMITTERS_ON);
     48c:	61 e0       	ldi	r22, 0x01	; 1
     48e:	ce 01       	movw	r24, r28
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
		break;
		case RIGHT:
		set_motors(40, -40);
		delay_ms(200);
		read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] < turnCalibration){
     496:	8d 81       	ldd	r24, Y+5	; 0x05
     498:	9e 81       	ldd	r25, Y+6	; 0x06
     49a:	88 35       	cpi	r24, 0x58	; 88
     49c:	92 40       	sbci	r25, 0x02	; 2
     49e:	b0 f3       	brcs	.-20     	; 0x48c <_Z4turn4Turn+0x84>

struct cDirection {
	Direction dir;

	void next() {
		int faceInt = dir;
     4a0:	80 91 b3 01 	lds	r24, 0x01B3
     4a4:	15 c0       	rjmp	.+42     	; 0x4d0 <_Z4turn4Turn+0xc8>
		case BACK:
		set_motors(40, -40);
		delay_ms(700);
		read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] < turnCalibration){
			read_line(sensors,IR_EMITTERS_ON);
     4a6:	61 e0       	ldi	r22, 0x01	; 1
     4a8:	ce 01       	movw	r24, r28
     4aa:	01 96       	adiw	r24, 0x01	; 1
     4ac:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
		break;
		case BACK:
		set_motors(40, -40);
		delay_ms(700);
		read_line(sensors,IR_EMITTERS_ON);
		while (sensors[2] < turnCalibration){
     4b0:	8d 81       	ldd	r24, Y+5	; 0x05
     4b2:	9e 81       	ldd	r25, Y+6	; 0x06
     4b4:	88 35       	cpi	r24, 0x58	; 88
     4b6:	92 40       	sbci	r25, 0x02	; 2
     4b8:	b0 f3       	brcs	.-20     	; 0x4a6 <_Z4turn4Turn+0x9e>
			read_line(sensors,IR_EMITTERS_ON);
		}
		stop();
     4ba:	0e 94 fe 01 	call	0x3fc	; 0x3fc <_Z4stopv>
     4be:	80 91 b3 01 	lds	r24, 0x01B3
     4c2:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt == 3) {
     4c4:	83 30       	cpi	r24, 0x03	; 3
     4c6:	91 05       	cpc	r25, r1
     4c8:	11 f4       	brne	.+4      	; 0x4ce <_Z4turn4Turn+0xc6>
			faceInt = -1;
     4ca:	8f ef       	ldi	r24, 0xFF	; 255
     4cc:	9f ef       	ldi	r25, 0xFF	; 255
		}
		this->dir = static_cast<Direction>(faceInt + 1);
     4ce:	8f 5f       	subi	r24, 0xFF	; 255

struct cDirection {
	Direction dir;

	void next() {
		int faceInt = dir;
     4d0:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt == 3) {
     4d2:	83 30       	cpi	r24, 0x03	; 3
     4d4:	91 05       	cpc	r25, r1
     4d6:	11 f4       	brne	.+4      	; 0x4dc <_Z4turn4Turn+0xd4>
			faceInt = -1;
     4d8:	8f ef       	ldi	r24, 0xFF	; 255
     4da:	9f ef       	ldi	r25, 0xFF	; 255
		}
		this->dir = static_cast<Direction>(faceInt + 1);
     4dc:	8f 5f       	subi	r24, 0xFF	; 255
     4de:	80 93 b3 01 	sts	0x01B3, r24
		currentDir.next();
		break;
		default:
		break;
	}
	stop();
     4e2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <_Z4stopv>
}
     4e6:	2a 96       	adiw	r28, 0x0a	; 10
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	08 95       	ret

000004f8 <_Z7faceDir9Direction>:
	}
	
	return 0;
}

void faceDir(Direction d){
     4f8:	cf 93       	push	r28
     4fa:	c8 2f       	mov	r28, r24
			faceInt = 4;
		}
		this->dir = static_cast<Direction>(faceInt - 1);
	}
	Direction getNext() {
		int faceInt = dir;
     4fc:	80 91 b3 01 	lds	r24, 0x01B3
     500:	28 2f       	mov	r18, r24
     502:	30 e0       	ldi	r19, 0x00	; 0
		if (faceInt >= 3) {
     504:	23 30       	cpi	r18, 0x03	; 3
     506:	31 05       	cpc	r19, r1
     508:	0c f0       	brlt	.+2      	; 0x50c <_Z7faceDir9Direction+0x14>
			faceInt = -1;
     50a:	8f ef       	ldi	r24, 0xFF	; 255
		}
		return static_cast<Direction>(faceInt + 1);
     50c:	8f 5f       	subi	r24, 0xFF	; 255
	if (currentDir.getNext() == d){
     50e:	8c 13       	cpse	r24, r28
     510:	02 c0       	rjmp	.+4      	; 0x516 <_Z7faceDir9Direction+0x1e>
		turn(RIGHT);
     512:	81 e0       	ldi	r24, 0x01	; 1
     514:	11 c0       	rjmp	.+34     	; 0x538 <_Z7faceDir9Direction+0x40>
	}
	Direction getPrevious() {
		int faceInt = dir;
		if (faceInt <= 0) {
     516:	21 15       	cp	r18, r1
     518:	31 05       	cpc	r19, r1
     51a:	11 f4       	brne	.+4      	; 0x520 <_Z7faceDir9Direction+0x28>
			faceInt = 4;
     51c:	24 e0       	ldi	r18, 0x04	; 4
     51e:	30 e0       	ldi	r19, 0x00	; 0
		}
		return static_cast<Direction>(faceInt - 1);
     520:	21 50       	subi	r18, 0x01	; 1
	} else if(currentDir.getPrevious() == d){
     522:	2c 13       	cpse	r18, r28
     524:	02 c0       	rjmp	.+4      	; 0x52a <_Z7faceDir9Direction+0x32>
		turn(LEFT);
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	07 c0       	rjmp	.+14     	; 0x538 <_Z7faceDir9Direction+0x40>
	} else if(currentDir.getOpposite() == d){
     52a:	83 eb       	ldi	r24, 0xB3	; 179
     52c:	91 e0       	ldi	r25, 0x01	; 1
     52e:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN10cDirection11getOppositeEv>
     532:	8c 13       	cpse	r24, r28
     534:	04 c0       	rjmp	.+8      	; 0x53e <_Z7faceDir9Direction+0x46>
		turn(BACK);
     536:	82 e0       	ldi	r24, 0x02	; 2
	}
}
     538:	cf 91       	pop	r28
	if (currentDir.getNext() == d){
		turn(RIGHT);
	} else if(currentDir.getPrevious() == d){
		turn(LEFT);
	} else if(currentDir.getOpposite() == d){
		turn(BACK);
     53a:	0c 94 04 02 	jmp	0x408	; 0x408 <_Z4turn4Turn>
	}
}
     53e:	cf 91       	pop	r28
     540:	08 95       	ret

00000542 <_Z13followSegmentv>:

void stop(){
	set_motors(0, 0);
}

int8_t followSegment(){
     542:	2f 92       	push	r2
     544:	3f 92       	push	r3
     546:	4f 92       	push	r4
     548:	5f 92       	push	r5
     54a:	6f 92       	push	r6
     54c:	7f 92       	push	r7
     54e:	8f 92       	push	r8
     550:	9f 92       	push	r9
     552:	af 92       	push	r10
     554:	bf 92       	push	r11
     556:	cf 92       	push	r12
     558:	df 92       	push	r13
     55a:	ef 92       	push	r14
     55c:	ff 92       	push	r15
     55e:	0f 93       	push	r16
     560:	1f 93       	push	r17
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	cd b7       	in	r28, 0x3d	; 61
     568:	de b7       	in	r29, 0x3e	; 62
     56a:	2a 97       	sbiw	r28, 0x0a	; 10
     56c:	0f b6       	in	r0, 0x3f	; 63
     56e:	f8 94       	cli
     570:	de bf       	out	0x3e, r29	; 62
     572:	0f be       	out	0x3f, r0	; 63
     574:	cd bf       	out	0x3d, r28	; 61
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
static inline unsigned long millis(void) { return get_ms(); }
     576:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <get_ms>
     57a:	4b 01       	movw	r8, r22
     57c:	5c 01       	movw	r10, r24
	unsigned long startTime = millis();
	
	int last_proportional = 0;
	long integral=0;
     57e:	c1 2c       	mov	r12, r1
     580:	d1 2c       	mov	r13, r1
     582:	76 01       	movw	r14, r12
}

int8_t followSegment(){
	unsigned long startTime = millis();
	
	int last_proportional = 0;
     584:	21 2c       	mov	r2, r1
     586:	31 2c       	mov	r3, r1
		// Compute the difference between the two motor power settings,
		// m1 - m2.  If this is a positive number the robot will turn
		// to the left.  If it is a negative number, the robot will
		// turn to the right, and the magnitude of the number determines
		// the sharpness of the turn.
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     588:	60 e1       	ldi	r22, 0x10	; 16
     58a:	46 2e       	mov	r4, r22
     58c:	67 e2       	ldi	r22, 0x27	; 39
     58e:	56 2e       	mov	r5, r22
     590:	61 2c       	mov	r6, r1
     592:	71 2c       	mov	r7, r1
		// Normally, we will be following a line.  The code below is
		// similar to the 3pi-linefollower-pid example, but the maximum
		// speed is turned down to 60 for reliability.
		
		// Get the position of the line.
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     594:	61 e0       	ldi	r22, 0x01	; 1
     596:	ce 01       	movw	r24, r28
     598:	01 96       	adiw	r24, 0x01	; 1
     59a:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
		
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
     59e:	8c 01       	movw	r16, r24
     5a0:	00 5d       	subi	r16, 0xD0	; 208
     5a2:	17 40       	sbci	r17, 0x07	; 7
		
		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
		integral += proportional;
     5a4:	c8 01       	movw	r24, r16
     5a6:	aa 27       	eor	r26, r26
     5a8:	97 fd       	sbrc	r25, 7
     5aa:	a0 95       	com	r26
     5ac:	ba 2f       	mov	r27, r26
     5ae:	c8 0e       	add	r12, r24
     5b0:	d9 1e       	adc	r13, r25
     5b2:	ea 1e       	adc	r14, r26
     5b4:	fb 1e       	adc	r15, r27
		// Compute the difference between the two motor power settings,
		// m1 - m2.  If this is a positive number the robot will turn
		// to the left.  If it is a negative number, the robot will
		// turn to the right, and the magnitude of the number determines
		// the sharpness of the turn.
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     5b6:	c7 01       	movw	r24, r14
     5b8:	b6 01       	movw	r22, r12
     5ba:	a3 01       	movw	r20, r6
     5bc:	92 01       	movw	r18, r4
     5be:	0e 94 4c 13 	call	0x2698	; 0x2698 <__divmodsi4>
		// The "proportional" term should be 0 when we are on the line.
		int proportional = ((int)position) - 2000;
		
		// Compute the derivative (change) and integral (sum) of the
		// position.
		int derivative = proportional - last_proportional;
     5c2:	b8 01       	movw	r22, r16
     5c4:	62 19       	sub	r22, r2
     5c6:	73 09       	sbc	r23, r3
		// Compute the difference between the two motor power settings,
		// m1 - m2.  If this is a positive number the robot will turn
		// to the left.  If it is a negative number, the robot will
		// turn to the right, and the magnitude of the number determines
		// the sharpness of the turn.
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     5c8:	cb 01       	movw	r24, r22
     5ca:	88 0f       	add	r24, r24
     5cc:	99 1f       	adc	r25, r25
     5ce:	86 0f       	add	r24, r22
     5d0:	97 1f       	adc	r25, r23
     5d2:	97 fd       	sbrc	r25, 7
     5d4:	01 96       	adiw	r24, 0x01	; 1
     5d6:	fc 01       	movw	r30, r24
     5d8:	f5 95       	asr	r31
     5da:	e7 95       	ror	r30
     5dc:	e2 0f       	add	r30, r18
     5de:	f3 1f       	adc	r31, r19
     5e0:	c8 01       	movw	r24, r16
     5e2:	64 e1       	ldi	r22, 0x14	; 20
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	0e 94 16 13 	call	0x262c	; 0x262c <__divmodhi4>
     5ea:	e6 0f       	add	r30, r22
     5ec:	f7 1f       	adc	r31, r23
		
		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 60; // the maximum speed
		if(power_difference > max) {
     5ee:	ed 33       	cpi	r30, 0x3D	; 61
     5f0:	f1 05       	cpc	r31, r1
     5f2:	74 f4       	brge	.+28     	; 0x610 <_Z13followSegmentv+0xce>
			power_difference = max;
		}
		if(power_difference < -max) {
     5f4:	e4 3c       	cpi	r30, 0xC4	; 196
     5f6:	2f ef       	ldi	r18, 0xFF	; 255
     5f8:	f2 07       	cpc	r31, r18
     5fa:	1c f0       	brlt	.+6      	; 0x602 <_Z13followSegmentv+0xc0>
			power_difference = -max;
		}
		
		if(power_difference < 0) {
     5fc:	f7 fd       	sbrc	r31, 7
     5fe:	03 c0       	rjmp	.+6      	; 0x606 <_Z13followSegmentv+0xc4>
     600:	09 c0       	rjmp	.+18     	; 0x614 <_Z13followSegmentv+0xd2>
		const int max = 60; // the maximum speed
		if(power_difference > max) {
			power_difference = max;
		}
		if(power_difference < -max) {
			power_difference = -max;
     602:	e4 ec       	ldi	r30, 0xC4	; 196
     604:	ff ef       	ldi	r31, 0xFF	; 255
		}
		
		if(power_difference < 0) {
			set_motors(max+power_difference,max);
     606:	6c e3       	ldi	r22, 0x3C	; 60
     608:	70 e0       	ldi	r23, 0x00	; 0
     60a:	cf 01       	movw	r24, r30
     60c:	cc 96       	adiw	r24, 0x3c	; 60
     60e:	08 c0       	rjmp	.+16     	; 0x620 <_Z13followSegmentv+0xde>
		
		// Compute the actual motor settings.  We never set either motor
		// to a negative value.
		const int max = 60; // the maximum speed
		if(power_difference > max) {
			power_difference = max;
     610:	ec e3       	ldi	r30, 0x3C	; 60
     612:	f0 e0       	ldi	r31, 0x00	; 0
		}
		
		if(power_difference < 0) {
			set_motors(max+power_difference,max);
		} else {
			set_motors(max,max-power_difference);
     614:	6c e3       	ldi	r22, 0x3C	; 60
     616:	70 e0       	ldi	r23, 0x00	; 0
     618:	6e 1b       	sub	r22, r30
     61a:	7f 0b       	sbc	r23, r31
     61c:	8c e3       	ldi	r24, 0x3C	; 60
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	0e 94 33 0c 	call	0x1866	; 0x1866 <set_motors>
		// determining whether there is a line straight ahead, and the
		// sensors 0 and 4 for detecting lines going to the left and
		// right.
		

		if(sensors[1] < 350 && sensors[2] < 350 && sensors[3] < 350){
     624:	8b 81       	ldd	r24, Y+3	; 0x03
     626:	9c 81       	ldd	r25, Y+4	; 0x04
     628:	8e 35       	cpi	r24, 0x5E	; 94
     62a:	91 40       	sbci	r25, 0x01	; 1
     62c:	98 f4       	brcc	.+38     	; 0x654 <_Z13followSegmentv+0x112>
     62e:	8d 81       	ldd	r24, Y+5	; 0x05
     630:	9e 81       	ldd	r25, Y+6	; 0x06
     632:	8e 35       	cpi	r24, 0x5E	; 94
     634:	91 40       	sbci	r25, 0x01	; 1
     636:	70 f4       	brcc	.+28     	; 0x654 <_Z13followSegmentv+0x112>
     638:	8f 81       	ldd	r24, Y+7	; 0x07
     63a:	98 85       	ldd	r25, Y+8	; 0x08
     63c:	8e 35       	cpi	r24, 0x5E	; 94
     63e:	91 40       	sbci	r25, 0x01	; 1
     640:	48 f4       	brcc	.+18     	; 0x654 <_Z13followSegmentv+0x112>
			// There is no line visible ahead, and we didn't see any
			// intersection.  Must be a dead end.
			
			isLeft = false;
     642:	10 92 b6 01 	sts	0x01B6, r1
			isRight = false;
     646:	10 92 b5 01 	sts	0x01B5, r1
			isForward = false;
     64a:	10 92 b7 01 	sts	0x01B7, r1
			
			stop();
     64e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <_Z4stopv>
			
			break;
     652:	7f c0       	rjmp	.+254    	; 0x752 <_Z13followSegmentv+0x210>
		} else if(sensors[0] > 350 || sensors[4] > 350) {		
     654:	89 81       	ldd	r24, Y+1	; 0x01
     656:	9a 81       	ldd	r25, Y+2	; 0x02
     658:	8f 35       	cpi	r24, 0x5F	; 95
     65a:	91 40       	sbci	r25, 0x01	; 1
     65c:	38 f4       	brcc	.+14     	; 0x66c <_Z13followSegmentv+0x12a>
     65e:	89 85       	ldd	r24, Y+9	; 0x09
     660:	9a 85       	ldd	r25, Y+10	; 0x0a
     662:	8f 35       	cpi	r24, 0x5F	; 95
     664:	91 40       	sbci	r25, 0x01	; 1
     666:	10 f4       	brcc	.+4      	; 0x66c <_Z13followSegmentv+0x12a>
		// position.
		int derivative = proportional - last_proportional;
		integral += proportional;
		
		// Remember the last position.
		last_proportional = proportional;
     668:	18 01       	movw	r2, r16
     66a:	94 cf       	rjmp	.-216    	; 0x594 <_Z13followSegmentv+0x52>
			stop();
			
			break;
		} else if(sensors[0] > 350 || sensors[4] > 350) {		
			// Found an intersection.
			set_motors(40, 40);
     66c:	68 e2       	ldi	r22, 0x28	; 40
     66e:	70 e0       	ldi	r23, 0x00	; 0
     670:	88 e2       	ldi	r24, 0x28	; 40
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	0e 94 33 0c 	call	0x1866	; 0x1866 <set_motors>
			delay_ms(50);
     678:	82 e3       	ldi	r24, 0x32	; 50
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
			
			read_line(sensors,IR_EMITTERS_ON);
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	ce 01       	movw	r24, r28
     684:	01 96       	adiw	r24, 0x01	; 1
     686:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
			isLeft = (sensors[0] > 500);
     68a:	21 e0       	ldi	r18, 0x01	; 1
     68c:	89 81       	ldd	r24, Y+1	; 0x01
     68e:	9a 81       	ldd	r25, Y+2	; 0x02
     690:	85 3f       	cpi	r24, 0xF5	; 245
     692:	91 40       	sbci	r25, 0x01	; 1
     694:	08 f4       	brcc	.+2      	; 0x698 <_Z13followSegmentv+0x156>
     696:	20 e0       	ldi	r18, 0x00	; 0
     698:	20 93 b6 01 	sts	0x01B6, r18
			isRight = (sensors[4] > 500);
     69c:	21 e0       	ldi	r18, 0x01	; 1
     69e:	89 85       	ldd	r24, Y+9	; 0x09
     6a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     6a2:	85 3f       	cpi	r24, 0xF5	; 245
     6a4:	91 40       	sbci	r25, 0x01	; 1
     6a6:	08 f4       	brcc	.+2      	; 0x6aa <_Z13followSegmentv+0x168>
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	20 93 b5 01 	sts	0x01B5, r18

			set_motors(40, 40);
     6ae:	68 e2       	ldi	r22, 0x28	; 40
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	88 e2       	ldi	r24, 0x28	; 40
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	0e 94 33 0c 	call	0x1866	; 0x1866 <set_motors>
			delay_ms(200);
     6ba:	88 ec       	ldi	r24, 0xC8	; 200
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
			stop();
     6c2:	0e 94 fe 01 	call	0x3fc	; 0x3fc <_Z4stopv>
			
			read_line(sensors,IR_EMITTERS_ON);
     6c6:	61 e0       	ldi	r22, 0x01	; 1
     6c8:	ce 01       	movw	r24, r28
     6ca:	01 96       	adiw	r24, 0x01	; 1
     6cc:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
			
			if (sensors[0] > 350 && sensors[1] > 350 && sensors[2] > 350 && sensors[3] > 350 && sensors[4] > 350){
     6d0:	29 81       	ldd	r18, Y+1	; 0x01
     6d2:	3a 81       	ldd	r19, Y+2	; 0x02
     6d4:	8b 81       	ldd	r24, Y+3	; 0x03
     6d6:	9c 81       	ldd	r25, Y+4	; 0x04
     6d8:	2f 35       	cpi	r18, 0x5F	; 95
     6da:	31 40       	sbci	r19, 0x01	; 1
     6dc:	20 f1       	brcs	.+72     	; 0x726 <_Z13followSegmentv+0x1e4>
     6de:	8f 35       	cpi	r24, 0x5F	; 95
     6e0:	21 e0       	ldi	r18, 0x01	; 1
     6e2:	92 07       	cpc	r25, r18
     6e4:	00 f1       	brcs	.+64     	; 0x726 <_Z13followSegmentv+0x1e4>
     6e6:	2d 81       	ldd	r18, Y+5	; 0x05
     6e8:	3e 81       	ldd	r19, Y+6	; 0x06
     6ea:	2f 35       	cpi	r18, 0x5F	; 95
     6ec:	31 40       	sbci	r19, 0x01	; 1
     6ee:	d8 f0       	brcs	.+54     	; 0x726 <_Z13followSegmentv+0x1e4>
     6f0:	2f 81       	ldd	r18, Y+7	; 0x07
     6f2:	38 85       	ldd	r19, Y+8	; 0x08
     6f4:	2f 35       	cpi	r18, 0x5F	; 95
     6f6:	31 40       	sbci	r19, 0x01	; 1
     6f8:	b0 f0       	brcs	.+44     	; 0x726 <_Z13followSegmentv+0x1e4>
     6fa:	29 85       	ldd	r18, Y+9	; 0x09
     6fc:	3a 85       	ldd	r19, Y+10	; 0x0a
     6fe:	2f 35       	cpi	r18, 0x5F	; 95
     700:	31 40       	sbci	r19, 0x01	; 1
     702:	88 f0       	brcs	.+34     	; 0x726 <_Z13followSegmentv+0x1e4>
				play_frequency(2000, 100, 10);
     704:	4a e0       	ldi	r20, 0x0A	; 10
     706:	64 e6       	ldi	r22, 0x64	; 100
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	80 ed       	ldi	r24, 0xD0	; 208
     70c:	97 e0       	ldi	r25, 0x07	; 7
     70e:	0e 94 46 07 	call	0xe8c	; 0xe8c <play_frequency>
				foundFinish = true;
     712:	81 e0       	ldi	r24, 0x01	; 1
     714:	80 93 b4 01 	sts	0x01B4, r24
				isLeft = false;
     718:	10 92 b6 01 	sts	0x01B6, r1
				isRight = false;
     71c:	10 92 b5 01 	sts	0x01B5, r1
				isForward = false;
     720:	10 92 b7 01 	sts	0x01B7, r1
				break;
     724:	16 c0       	rjmp	.+44     	; 0x752 <_Z13followSegmentv+0x210>
			} else {
				foundFinish = false;
     726:	10 92 b4 01 	sts	0x01B4, r1
			}
			
			isForward = (sensors[1] > 350 || sensors[2] > 350 || sensors[3] > 350);
     72a:	8f 35       	cpi	r24, 0x5F	; 95
     72c:	91 40       	sbci	r25, 0x01	; 1
     72e:	70 f4       	brcc	.+28     	; 0x74c <_Z13followSegmentv+0x20a>
     730:	8d 81       	ldd	r24, Y+5	; 0x05
     732:	9e 81       	ldd	r25, Y+6	; 0x06
     734:	8f 35       	cpi	r24, 0x5F	; 95
     736:	91 40       	sbci	r25, 0x01	; 1
     738:	48 f4       	brcc	.+18     	; 0x74c <_Z13followSegmentv+0x20a>
     73a:	21 e0       	ldi	r18, 0x01	; 1
     73c:	8f 81       	ldd	r24, Y+7	; 0x07
     73e:	98 85       	ldd	r25, Y+8	; 0x08
     740:	8f 35       	cpi	r24, 0x5F	; 95
     742:	91 40       	sbci	r25, 0x01	; 1
     744:	08 f4       	brcc	.+2      	; 0x748 <_Z13followSegmentv+0x206>
     746:	20 e0       	ldi	r18, 0x00	; 0
     748:	82 2f       	mov	r24, r18
     74a:	01 c0       	rjmp	.+2      	; 0x74e <_Z13followSegmentv+0x20c>
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	80 93 b7 01 	sts	0x01B7, r24
     752:	0e 94 50 0d 	call	0x1aa0	; 0x1aa0 <get_ms>
			
			break;
		}
	}
	
	unsigned long totalTime = millis() - startTime;
     756:	68 19       	sub	r22, r8
     758:	79 09       	sbc	r23, r9
     75a:	8a 09       	sbc	r24, r10
     75c:	9b 09       	sbc	r25, r11
	//print(" ");
	//print_long(totalTime);
	
	//wait_for_button(BUTTON_B);
	
	if (totalTime >= 50 && totalTime <= 850){
     75e:	8b 01       	movw	r16, r22
     760:	9c 01       	movw	r18, r24
     762:	02 53       	subi	r16, 0x32	; 50
     764:	11 09       	sbc	r17, r1
     766:	21 09       	sbc	r18, r1
     768:	31 09       	sbc	r19, r1
     76a:	01 32       	cpi	r16, 0x21	; 33
     76c:	13 40       	sbci	r17, 0x03	; 3
     76e:	21 05       	cpc	r18, r1
     770:	31 05       	cpc	r19, r1
     772:	18 f1       	brcs	.+70     	; 0x7ba <_Z13followSegmentv+0x278>
		return 1;
	} else if(totalTime > 850 && totalTime <= 1300){
     774:	8b 01       	movw	r16, r22
     776:	9c 01       	movw	r18, r24
     778:	03 55       	subi	r16, 0x53	; 83
     77a:	13 40       	sbci	r17, 0x03	; 3
     77c:	21 09       	sbc	r18, r1
     77e:	31 09       	sbc	r19, r1
     780:	02 3c       	cpi	r16, 0xC2	; 194
     782:	11 40       	sbci	r17, 0x01	; 1
     784:	21 05       	cpc	r18, r1
     786:	31 05       	cpc	r19, r1
     788:	d0 f0       	brcs	.+52     	; 0x7be <_Z13followSegmentv+0x27c>
		return 2;
	} else if(totalTime > 1300 && totalTime <= 1850){
     78a:	8b 01       	movw	r16, r22
     78c:	9c 01       	movw	r18, r24
     78e:	05 51       	subi	r16, 0x15	; 21
     790:	15 40       	sbci	r17, 0x05	; 5
     792:	21 09       	sbc	r18, r1
     794:	31 09       	sbc	r19, r1
     796:	06 32       	cpi	r16, 0x26	; 38
     798:	12 40       	sbci	r17, 0x02	; 2
     79a:	21 05       	cpc	r18, r1
     79c:	31 05       	cpc	r19, r1
     79e:	88 f0       	brcs	.+34     	; 0x7c2 <_Z13followSegmentv+0x280>
		return 3;
	} else if(totalTime > 1850 && totalTime <= 2700){
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	8b 53       	subi	r24, 0x3B	; 59
     7a6:	97 40       	sbci	r25, 0x07	; 7
     7a8:	a1 09       	sbc	r26, r1
     7aa:	b1 09       	sbc	r27, r1
     7ac:	82 35       	cpi	r24, 0x52	; 82
     7ae:	93 40       	sbci	r25, 0x03	; 3
     7b0:	a1 05       	cpc	r26, r1
     7b2:	b1 05       	cpc	r27, r1
     7b4:	40 f4       	brcc	.+16     	; 0x7c6 <_Z13followSegmentv+0x284>
		return 4;
     7b6:	84 e0       	ldi	r24, 0x04	; 4
     7b8:	07 c0       	rjmp	.+14     	; 0x7c8 <_Z13followSegmentv+0x286>
	//print_long(totalTime);
	
	//wait_for_button(BUTTON_B);
	
	if (totalTime >= 50 && totalTime <= 850){
		return 1;
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	05 c0       	rjmp	.+10     	; 0x7c8 <_Z13followSegmentv+0x286>
	} else if(totalTime > 850 && totalTime <= 1300){
		return 2;
     7be:	82 e0       	ldi	r24, 0x02	; 2
     7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <_Z13followSegmentv+0x286>
	} else if(totalTime > 1300 && totalTime <= 1850){
		return 3;
     7c2:	83 e0       	ldi	r24, 0x03	; 3
     7c4:	01 c0       	rjmp	.+2      	; 0x7c8 <_Z13followSegmentv+0x286>
	} else if(totalTime > 1850 && totalTime <= 2700){
		return 4;
	} else {
		return 0;
     7c6:	80 e0       	ldi	r24, 0x00	; 0
	}
     7c8:	2a 96       	adiw	r28, 0x0a	; 10
     7ca:	0f b6       	in	r0, 0x3f	; 63
     7cc:	f8 94       	cli
     7ce:	de bf       	out	0x3e, r29	; 62
     7d0:	0f be       	out	0x3f, r0	; 63
     7d2:	cd bf       	out	0x3d, r28	; 61
     7d4:	df 91       	pop	r29
     7d6:	cf 91       	pop	r28
     7d8:	1f 91       	pop	r17
     7da:	0f 91       	pop	r16
     7dc:	ff 90       	pop	r15
     7de:	ef 90       	pop	r14
     7e0:	df 90       	pop	r13
     7e2:	cf 90       	pop	r12
     7e4:	bf 90       	pop	r11
     7e6:	af 90       	pop	r10
     7e8:	9f 90       	pop	r9
     7ea:	8f 90       	pop	r8
     7ec:	7f 90       	pop	r7
     7ee:	6f 90       	pop	r6
     7f0:	5f 90       	pop	r5
     7f2:	4f 90       	pop	r4
     7f4:	3f 90       	pop	r3
     7f6:	2f 90       	pop	r2
     7f8:	08 95       	ret

000007fa <_Z10followLinev>:
}


void followLine(){
	while(1){
		uint8_t tilesTravelled = followSegment();
     7fa:	0e 94 a1 02 	call	0x542	; 0x542 <_Z13followSegmentv>
		
		switch(currentDir){
     7fe:	90 91 b3 01 	lds	r25, 0x01B3
     802:	91 30       	cpi	r25, 0x01	; 1
     804:	99 f0       	breq	.+38     	; 0x82c <_Z10followLinev+0x32>
     806:	60 f0       	brcs	.+24     	; 0x820 <_Z10followLinev+0x26>
     808:	92 30       	cpi	r25, 0x02	; 2
     80a:	31 f0       	breq	.+12     	; 0x818 <_Z10followLinev+0x1e>
     80c:	93 30       	cpi	r25, 0x03	; 3
     80e:	99 f4       	brne	.+38     	; 0x836 <_Z10followLinev+0x3c>
			break;
			case SOUTH:
			currentPos.y -= tilesTravelled;
			break;
			case EAST:
			currentPos.x -= tilesTravelled;
     810:	90 91 b1 01 	lds	r25, 0x01B1
     814:	98 1b       	sub	r25, r24
     816:	0d c0       	rjmp	.+26     	; 0x832 <_Z10followLinev+0x38>
	while(1){
		uint8_t tilesTravelled = followSegment();
		
		switch(currentDir){
			case NORTH:
			currentPos.y += tilesTravelled;
     818:	90 91 b2 01 	lds	r25, 0x01B2
     81c:	98 0f       	add	r25, r24
     81e:	03 c0       	rjmp	.+6      	; 0x826 <_Z10followLinev+0x2c>
			break;
			case SOUTH:
			currentPos.y -= tilesTravelled;
     820:	90 91 b2 01 	lds	r25, 0x01B2
     824:	98 1b       	sub	r25, r24
     826:	90 93 b2 01 	sts	0x01B2, r25
			break;
     82a:	05 c0       	rjmp	.+10     	; 0x836 <_Z10followLinev+0x3c>
			case EAST:
			currentPos.x -= tilesTravelled;
			break;
			case WEST:
			currentPos.x += tilesTravelled;
     82c:	90 91 b1 01 	lds	r25, 0x01B1
     830:	98 0f       	add	r25, r24
     832:	90 93 b1 01 	sts	0x01B1, r25
			break;
			default:
			break;
		}
		
		if (isLeft && !isRight && !isForward){
     836:	80 91 b6 01 	lds	r24, 0x01B6
     83a:	90 91 b5 01 	lds	r25, 0x01B5
     83e:	88 23       	and	r24, r24
     840:	39 f0       	breq	.+14     	; 0x850 <_Z10followLinev+0x56>
     842:	91 11       	cpse	r25, r1
     844:	05 c0       	rjmp	.+10     	; 0x850 <_Z10followLinev+0x56>
     846:	80 91 b7 01 	lds	r24, 0x01B7
     84a:	81 11       	cpse	r24, r1
     84c:	0d c0       	rjmp	.+26     	; 0x868 <_Z10followLinev+0x6e>
     84e:	09 c0       	rjmp	.+18     	; 0x862 <_Z10followLinev+0x68>
			turn(LEFT);
		} else if(isRight && !isLeft && !isForward){
     850:	99 23       	and	r25, r25
     852:	51 f0       	breq	.+20     	; 0x868 <_Z10followLinev+0x6e>
     854:	81 11       	cpse	r24, r1
     856:	08 c0       	rjmp	.+16     	; 0x868 <_Z10followLinev+0x6e>
     858:	80 91 b7 01 	lds	r24, 0x01B7
     85c:	81 11       	cpse	r24, r1
     85e:	04 c0       	rjmp	.+8      	; 0x868 <_Z10followLinev+0x6e>
			turn(RIGHT);
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	0e 94 04 02 	call	0x408	; 0x408 <_Z4turn4Turn>
     866:	c9 cf       	rjmp	.-110    	; 0x7fa <_Z10followLinev>
     868:	08 95       	ret

0000086a <_Z7mapMazev>:

void travelTo(int8_t x, int8_t y){
	
}

void mapMaze(){
     86a:	6f 92       	push	r6
     86c:	7f 92       	push	r7
     86e:	8f 92       	push	r8
     870:	9f 92       	push	r9
     872:	af 92       	push	r10
     874:	bf 92       	push	r11
     876:	cf 92       	push	r12
     878:	df 92       	push	r13
     87a:	ef 92       	push	r14
     87c:	ff 92       	push	r15
     87e:	0f 93       	push	r16
     880:	1f 93       	push	r17
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	cd b7       	in	r28, 0x3d	; 61
     888:	de b7       	in	r29, 0x3e	; 62
     88a:	c5 56       	subi	r28, 0x65	; 101
     88c:	d1 09       	sbc	r29, r1
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	f8 94       	cli
     892:	de bf       	out	0x3e, r29	; 62
     894:	0f be       	out	0x3f, r0	; 63
     896:	cd bf       	out	0x3d, r28	; 61
	int startRAM = get_free_ram();
     898:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     89c:	6c 01       	movw	r12, r24
	
	currentDir.dir = NORTH;
     89e:	82 e0       	ldi	r24, 0x02	; 2
     8a0:	80 93 b3 01 	sts	0x01B3, r24
	currentPos.x = 0;
     8a4:	10 92 b1 01 	sts	0x01B1, r1
	currentPos.y = 0;
     8a8:	10 92 b2 01 	sts	0x01B2, r1
     8ac:	8b e0       	ldi	r24, 0x0B	; 11
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     8b4:	8c 01       	movw	r16, r24
	//myNodeStack = NodeStack();
	
	node* allNodes[50];
	int head = 0;
	
	node* root = new node;
     8b6:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
     8ba:	80 91 b2 01 	lds	r24, 0x01B2
	
	void setPosition(position p){
		this->pos = p;
     8be:	90 91 b1 01 	lds	r25, 0x01B1
     8c2:	d8 01       	movw	r26, r16
     8c4:	9c 93       	st	X, r25
     8c6:	11 96       	adiw	r26, 0x01	; 1
     8c8:	8c 93       	st	X, r24
     8ca:	8b e0       	ldi	r24, 0x0B	; 11
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     8d2:	7c 01       	movw	r14, r24
	root->setPosition(currentPos);
	root->connections[2] = new node;
     8d4:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
     8d8:	f8 01       	movw	r30, r16
     8da:	f0 86       	std	Z+8, r15	; 0x08
     8dc:	e7 82       	std	Z+7, r14	; 0x07
	root->visited = true;
     8de:	81 e0       	ldi	r24, 0x01	; 1
     8e0:	82 83       	std	Z+2, r24	; 0x02
	
	allNodes[head] = root;
     8e2:	1a 83       	std	Y+2, r17	; 0x02
     8e4:	09 83       	std	Y+1, r16	; 0x01
	
	myNodeStack.push(root, NORTH);
     8e6:	42 e0       	ldi	r20, 0x02	; 2
     8e8:	b8 01       	movw	r22, r16
     8ea:	8f ea       	ldi	r24, 0xAF	; 175
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	0e 94 ac 00 	call	0x158	; 0x158 <_ZN9NodeStack4pushEP4node9Direction>
	currentPos.y = 0;
	
	//myNodeStack = NodeStack();
	
	node* allNodes[50];
	int head = 0;
     8f2:	e1 2c       	mov	r14, r1
     8f4:	f1 2c       	mov	r15, r1
	}
	return NULL;
}

bool NodeStack::isEmpty() {
	if (top == 0) {
     8f6:	80 91 af 01 	lds	r24, 0x01AF
     8fa:	90 91 b0 01 	lds	r25, 0x01B0
     8fe:	89 2b       	or	r24, r25
     900:	09 f4       	brne	.+2      	; 0x904 <__stack+0x5>
     902:	3e c1       	rjmp	.+636    	; 0xb80 <__stack+0x281>
	
	myNodeStack.push(root, NORTH);
	
	int i;
	while(!myNodeStack.isEmpty()){
		node* currentNode = myNodeStack.getTop();
     904:	8f ea       	ldi	r24, 0xAF	; 175
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <_ZN9NodeStack6getTopEv>
     90c:	8c 01       	movw	r16, r24
		
		clear();
     90e:	0e 94 92 0a 	call	0x1524	; 0x1524 <clear>
		print(" ");
     912:	89 e3       	ldi	r24, 0x39	; 57
     914:	91 e0       	ldi	r25, 0x01	; 1
     916:	0e 94 a9 0a 	call	0x1552	; 0x1552 <print>
		print_long(get_free_ram());
     91a:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     91e:	bc 01       	movw	r22, r24
     920:	88 27       	eor	r24, r24
     922:	77 fd       	sbrc	r23, 7
     924:	80 95       	com	r24
     926:	98 2f       	mov	r25, r24
     928:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
		lcd_goto_xy(0, 1);
     92c:	61 e0       	ldi	r22, 0x01	; 1
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	0e 94 29 0b 	call	0x1652	; 0x1652 <lcd_goto_xy>
		print(" ");
     934:	89 e3       	ldi	r24, 0x39	; 57
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	0e 94 a9 0a 	call	0x1552	; 0x1552 <print>
		print_long(startRAM - get_free_ram());
     93c:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     940:	b6 01       	movw	r22, r12
     942:	68 1b       	sub	r22, r24
     944:	79 0b       	sbc	r23, r25
     946:	88 27       	eor	r24, r24
     948:	77 fd       	sbrc	r23, 7
     94a:	80 95       	com	r24
     94c:	98 2f       	mov	r25, r24
     94e:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
		//delay_ms(1000);
		wait_for_button(BUTTON_B);
     952:	80 e1       	ldi	r24, 0x10	; 16
     954:	0e 94 90 0c 	call	0x1920	; 0x1920 <wait_for_button>
     958:	f8 01       	movw	r30, r16
		
		for (i=3; i>-1; i--){
     95a:	73 e0       	ldi	r23, 0x03	; 3
     95c:	87 2e       	mov	r8, r23
     95e:	91 2c       	mov	r9, r1
			if (currentNode->connections[i] != NULL){
     960:	a1 85       	ldd	r26, Z+9	; 0x09
     962:	b2 85       	ldd	r27, Z+10	; 0x0a
     964:	10 97       	sbiw	r26, 0x00	; 0
     966:	21 f0       	breq	.+8      	; 0x970 <__stack+0x71>
				if (currentNode->connections[i]->visited == false){
     968:	12 96       	adiw	r26, 0x02	; 2
     96a:	8c 91       	ld	r24, X
     96c:	88 23       	and	r24, r24
     96e:	c9 f0       	breq	.+50     	; 0x9a2 <__stack+0xa3>
		print(" ");
		print_long(startRAM - get_free_ram());
		//delay_ms(1000);
		wait_for_button(BUTTON_B);
		
		for (i=3; i>-1; i--){
     970:	81 e0       	ldi	r24, 0x01	; 1
     972:	88 1a       	sub	r8, r24
     974:	91 08       	sbc	r9, r1
     976:	32 97       	sbiw	r30, 0x02	; 2
     978:	9f ef       	ldi	r25, 0xFF	; 255
     97a:	89 16       	cp	r8, r25
     97c:	99 06       	cpc	r9, r25
     97e:	81 f7       	brne	.-32     	; 0x960 <__stack+0x61>
			}
		}
		
		if (i == -1){ // this node has no unvisited connections
			cDirection d;
			d = myNodeStack.pop();
     980:	8f ea       	ldi	r24, 0xAF	; 175
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN9NodeStack3popEv>
			faceInt = -1;
		}
		return static_cast<Direction>(faceInt + 1);
	}
	operator Direction() { return dir; }
	void operator=(const Direction &lhs){ dir = lhs; }
     988:	a6 96       	adiw	r28, 0x26	; 38
     98a:	8f af       	std	Y+63, r24	; 0x3f
     98c:	a6 97       	sbiw	r28, 0x26	; 38
			faceDir(d.getOpposite());
     98e:	ce 01       	movw	r24, r28
     990:	8b 59       	subi	r24, 0x9B	; 155
     992:	9f 4f       	sbci	r25, 0xFF	; 255
     994:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN10cDirection11getOppositeEv>
     998:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z7faceDir9Direction>
			followLine();
     99c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <_Z10followLinev>
     9a0:	aa cf       	rjmp	.-172    	; 0x8f6 <_Z7mapMazev+0x8c>
	}
}

void faceDir(int i){
	Direction d = static_cast<Direction>(i);
	faceDir(d);
     9a2:	88 2d       	mov	r24, r8
     9a4:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z7faceDir9Direction>
			d = myNodeStack.pop();
			faceDir(d.getOpposite());
			followLine();
		} else {
			faceDir(i);
			followLine();
     9a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <_Z10followLinev>
#define POSITION_H_

struct position {
	int8_t x, y;
	bool operator == (const position &RHS) {
		return (this->x == RHS.x && this->y == RHS.y);
     9ac:	20 91 b1 01 	lds	r18, 0x01B1
     9b0:	30 91 b2 01 	lds	r19, 0x01B2
     9b4:	fe 01       	movw	r30, r28
     9b6:	31 96       	adiw	r30, 0x01	; 1
			
			node* nextNode = NULL;
			for (int j=0; j<=head; j++){
     9b8:	80 e0       	ldi	r24, 0x00	; 0
     9ba:	90 e0       	ldi	r25, 0x00	; 0
				if (allNodes[j]->pos == currentPos){
     9bc:	a1 90       	ld	r10, Z+
     9be:	b1 90       	ld	r11, Z+
     9c0:	d5 01       	movw	r26, r10
     9c2:	4c 91       	ld	r20, X
     9c4:	42 13       	cpse	r20, r18
     9c6:	d6 c0       	rjmp	.+428    	; 0xb74 <__stack+0x275>
     9c8:	11 96       	adiw	r26, 0x01	; 1
     9ca:	4c 91       	ld	r20, X
     9cc:	43 13       	cpse	r20, r19
     9ce:	d2 c0       	rjmp	.+420    	; 0xb74 <__stack+0x275>
					nextNode = allNodes[j];
					break;
				}
			}
			
			if (nextNode == NULL){ // new node
     9d0:	a1 14       	cp	r10, r1
     9d2:	b1 04       	cpc	r11, r1
     9d4:	09 f0       	breq	.+2      	; 0x9d8 <__stack+0xd9>
     9d6:	92 c0       	rjmp	.+292    	; 0xafc <__stack+0x1fd>
				play_from_program_space(bloop);
     9d8:	86 e7       	ldi	r24, 0x76	; 118
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	0e 94 4f 09 	call	0x129e	; 0x129e <play_from_program_space>
     9e0:	8b e0       	ldi	r24, 0x0B	; 11
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     9e8:	5c 01       	movw	r10, r24
				
				nextNode = new node;
     9ea:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
				
				clear();
     9ee:	0e 94 92 0a 	call	0x1524	; 0x1524 <clear>
				print(" ");
     9f2:	89 e3       	ldi	r24, 0x39	; 57
     9f4:	91 e0       	ldi	r25, 0x01	; 1
     9f6:	0e 94 a9 0a 	call	0x1552	; 0x1552 <print>
				print_long(get_free_ram());
     9fa:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     9fe:	bc 01       	movw	r22, r24
     a00:	88 27       	eor	r24, r24
     a02:	77 fd       	sbrc	r23, 7
     a04:	80 95       	com	r24
     a06:	98 2f       	mov	r25, r24
     a08:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
				
				lcd_goto_xy(0, 1);
     a0c:	61 e0       	ldi	r22, 0x01	; 1
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	0e 94 29 0b 	call	0x1652	; 0x1652 <lcd_goto_xy>
				
				print(" ");
     a14:	89 e3       	ldi	r24, 0x39	; 57
     a16:	91 e0       	ldi	r25, 0x01	; 1
     a18:	0e 94 a9 0a 	call	0x1552	; 0x1552 <print>
				print_long(startRAM - get_free_ram());
     a1c:	0e 94 c3 0c 	call	0x1986	; 0x1986 <get_free_ram>
     a20:	b6 01       	movw	r22, r12
     a22:	68 1b       	sub	r22, r24
     a24:	79 0b       	sbc	r23, r25
     a26:	88 27       	eor	r24, r24
     a28:	77 fd       	sbrc	r23, 7
     a2a:	80 95       	com	r24
     a2c:	98 2f       	mov	r25, r24
     a2e:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
				
				//delay_ms(1000);
				
				wait_for_button(BUTTON_B);
     a32:	80 e1       	ldi	r24, 0x10	; 16
     a34:	0e 94 90 0c 	call	0x1920	; 0x1920 <wait_for_button>
     a38:	80 91 b2 01 	lds	r24, 0x01B2
     a3c:	90 91 b1 01 	lds	r25, 0x01B1
     a40:	f5 01       	movw	r30, r10
     a42:	90 83       	st	Z, r25
     a44:	81 83       	std	Z+1, r24	; 0x01
				
				nextNode->setPosition(currentPos);
				if (isLeft) nextNode->connections[currentDir.getPrevious()] = new node;
     a46:	80 91 b6 01 	lds	r24, 0x01B6
     a4a:	88 23       	and	r24, r24
     a4c:	b1 f0       	breq	.+44     	; 0xa7a <__stack+0x17b>
     a4e:	8b e0       	ldi	r24, 0x0B	; 11
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     a56:	3c 01       	movw	r6, r24
     a58:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
			faceInt = -1;
		}
		return static_cast<Direction>(faceInt + 1);
	}
	Direction getPrevious() {
		int faceInt = dir;
     a5c:	80 91 b3 01 	lds	r24, 0x01B3
     a60:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt <= 0) {
     a62:	00 97       	sbiw	r24, 0x00	; 0
     a64:	11 f4       	brne	.+4      	; 0xa6a <__stack+0x16b>
			faceInt = 4;
     a66:	84 e0       	ldi	r24, 0x04	; 4
     a68:	90 e0       	ldi	r25, 0x00	; 0
		}
		return static_cast<Direction>(faceInt - 1);
     a6a:	81 50       	subi	r24, 0x01	; 1
     a6c:	f5 01       	movw	r30, r10
     a6e:	e8 0f       	add	r30, r24
     a70:	f1 1d       	adc	r31, r1
     a72:	e8 0f       	add	r30, r24
     a74:	f1 1d       	adc	r31, r1
     a76:	74 82       	std	Z+4, r7	; 0x04
     a78:	63 82       	std	Z+3, r6	; 0x03
				if (isRight) nextNode->connections[currentDir.getNext()] = new node;
     a7a:	80 91 b5 01 	lds	r24, 0x01B5
     a7e:	88 23       	and	r24, r24
     a80:	b9 f0       	breq	.+46     	; 0xab0 <__stack+0x1b1>
     a82:	8b e0       	ldi	r24, 0x0B	; 11
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     a8a:	3c 01       	movw	r6, r24
     a8c:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
			faceInt = 4;
		}
		this->dir = static_cast<Direction>(faceInt - 1);
	}
	Direction getNext() {
		int faceInt = dir;
     a90:	80 91 b3 01 	lds	r24, 0x01B3
     a94:	90 e0       	ldi	r25, 0x00	; 0
		if (faceInt >= 3) {
     a96:	83 30       	cpi	r24, 0x03	; 3
     a98:	91 05       	cpc	r25, r1
     a9a:	14 f0       	brlt	.+4      	; 0xaa0 <__stack+0x1a1>
			faceInt = -1;
     a9c:	8f ef       	ldi	r24, 0xFF	; 255
     a9e:	9f ef       	ldi	r25, 0xFF	; 255
		}
		return static_cast<Direction>(faceInt + 1);
     aa0:	8f 5f       	subi	r24, 0xFF	; 255
     aa2:	f5 01       	movw	r30, r10
     aa4:	e8 0f       	add	r30, r24
     aa6:	f1 1d       	adc	r31, r1
     aa8:	e8 0f       	add	r30, r24
     aaa:	f1 1d       	adc	r31, r1
     aac:	74 82       	std	Z+4, r7	; 0x04
     aae:	63 82       	std	Z+3, r6	; 0x03
				if (isForward) nextNode->connections[currentDir] = new node;
     ab0:	80 91 b7 01 	lds	r24, 0x01B7
     ab4:	88 23       	and	r24, r24
     ab6:	81 f0       	breq	.+32     	; 0xad8 <__stack+0x1d9>
     ab8:	8b e0       	ldi	r24, 0x0B	; 11
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
     ac0:	3c 01       	movw	r6, r24
     ac2:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN4nodeC1Ev>
     ac6:	80 91 b3 01 	lds	r24, 0x01B3
     aca:	f5 01       	movw	r30, r10
     acc:	e8 0f       	add	r30, r24
     ace:	f1 1d       	adc	r31, r1
     ad0:	e8 0f       	add	r30, r24
     ad2:	f1 1d       	adc	r31, r1
     ad4:	74 82       	std	Z+4, r7	; 0x04
     ad6:	63 82       	std	Z+3, r6	; 0x03
				
				nextNode->visited = true;
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	d5 01       	movw	r26, r10
     adc:	12 96       	adiw	r26, 0x02	; 2
     ade:	8c 93       	st	X, r24
				head++;
     ae0:	bf ef       	ldi	r27, 0xFF	; 255
     ae2:	eb 1a       	sub	r14, r27
     ae4:	fb 0a       	sbc	r15, r27
				allNodes[head] = nextNode;
     ae6:	f7 01       	movw	r30, r14
     ae8:	ee 0f       	add	r30, r30
     aea:	ff 1f       	adc	r31, r31
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	8c 0f       	add	r24, r28
     af2:	9d 1f       	adc	r25, r29
     af4:	e8 0f       	add	r30, r24
     af6:	f9 1f       	adc	r31, r25
     af8:	b1 82       	std	Z+1, r11	; 0x01
     afa:	a0 82       	st	Z, r10
			}
			
			delete currentNode->connections[i];
     afc:	88 0c       	add	r8, r8
     afe:	99 1c       	adc	r9, r9
     b00:	f8 01       	movw	r30, r16
     b02:	e8 0d       	add	r30, r8
     b04:	f9 1d       	adc	r31, r9
     b06:	63 80       	ldd	r6, Z+3	; 0x03
     b08:	74 80       	ldd	r7, Z+4	; 0x04
     b0a:	61 14       	cp	r6, r1
     b0c:	71 04       	cpc	r7, r1
     b0e:	31 f0       	breq	.+12     	; 0xb1c <__stack+0x21d>
     b10:	c3 01       	movw	r24, r6
     b12:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN4nodeD1Ev>
}

void operator delete(void* obj) {
	free(obj);
     b16:	c3 01       	movw	r24, r6
     b18:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
			currentNode->connections[i] = nextNode;
     b1c:	f8 01       	movw	r30, r16
     b1e:	e8 0d       	add	r30, r8
     b20:	f9 1d       	adc	r31, r9
     b22:	b4 82       	std	Z+4, r11	; 0x04
     b24:	a3 82       	std	Z+3, r10	; 0x03
			delete nextNode->connections[currentDir.getOpposite()];
     b26:	83 eb       	ldi	r24, 0xB3	; 179
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN10cDirection11getOppositeEv>
     b2e:	f5 01       	movw	r30, r10
     b30:	e8 0f       	add	r30, r24
     b32:	f1 1d       	adc	r31, r1
     b34:	e8 0f       	add	r30, r24
     b36:	f1 1d       	adc	r31, r1
     b38:	83 80       	ldd	r8, Z+3	; 0x03
     b3a:	94 80       	ldd	r9, Z+4	; 0x04
     b3c:	81 14       	cp	r8, r1
     b3e:	91 04       	cpc	r9, r1
     b40:	31 f0       	breq	.+12     	; 0xb4e <__stack+0x24f>
     b42:	c4 01       	movw	r24, r8
     b44:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN4nodeD1Ev>
     b48:	c4 01       	movw	r24, r8
     b4a:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
			nextNode->connections[currentDir.getOpposite()] = currentNode;
     b4e:	83 eb       	ldi	r24, 0xB3	; 179
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN10cDirection11getOppositeEv>
     b56:	f5 01       	movw	r30, r10
     b58:	e8 0f       	add	r30, r24
     b5a:	f1 1d       	adc	r31, r1
     b5c:	e8 0f       	add	r30, r24
     b5e:	f1 1d       	adc	r31, r1
     b60:	14 83       	std	Z+4, r17	; 0x04
     b62:	03 83       	std	Z+3, r16	; 0x03
			
			myNodeStack.push(nextNode, currentDir);
     b64:	40 91 b3 01 	lds	r20, 0x01B3
     b68:	b5 01       	movw	r22, r10
     b6a:	8f ea       	ldi	r24, 0xAF	; 175
     b6c:	91 e0       	ldi	r25, 0x01	; 1
     b6e:	0e 94 ac 00 	call	0x158	; 0x158 <_ZN9NodeStack4pushEP4node9Direction>
     b72:	c1 ce       	rjmp	.-638    	; 0x8f6 <_Z7mapMazev+0x8c>
		} else {
			faceDir(i);
			followLine();
			
			node* nextNode = NULL;
			for (int j=0; j<=head; j++){
     b74:	01 96       	adiw	r24, 0x01	; 1
     b76:	e8 16       	cp	r14, r24
     b78:	f9 06       	cpc	r15, r25
     b7a:	0c f0       	brlt	.+2      	; 0xb7e <__stack+0x27f>
     b7c:	1f cf       	rjmp	.-450    	; 0x9bc <__stack+0xbd>
     b7e:	2c cf       	rjmp	.-424    	; 0x9d8 <__stack+0xd9>
			
			myNodeStack.push(nextNode, currentDir);
		}
	}
	
	faceDir(currentDir.getOpposite());
     b80:	83 eb       	ldi	r24, 0xB3	; 179
     b82:	91 e0       	ldi	r25, 0x01	; 1
     b84:	0e 94 6e 00 	call	0xdc	; 0xdc <_ZN10cDirection11getOppositeEv>
     b88:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <_Z7faceDir9Direction>
}
     b8c:	cb 59       	subi	r28, 0x9B	; 155
     b8e:	df 4f       	sbci	r29, 0xFF	; 255
     b90:	0f b6       	in	r0, 0x3f	; 63
     b92:	f8 94       	cli
     b94:	de bf       	out	0x3e, r29	; 62
     b96:	0f be       	out	0x3f, r0	; 63
     b98:	cd bf       	out	0x3d, r28	; 61
     b9a:	df 91       	pop	r29
     b9c:	cf 91       	pop	r28
     b9e:	1f 91       	pop	r17
     ba0:	0f 91       	pop	r16
     ba2:	ff 90       	pop	r15
     ba4:	ef 90       	pop	r14
     ba6:	df 90       	pop	r13
     ba8:	cf 90       	pop	r12
     baa:	bf 90       	pop	r11
     bac:	af 90       	pop	r10
     bae:	9f 90       	pop	r9
     bb0:	8f 90       	pop	r8
     bb2:	7f 90       	pop	r7
     bb4:	6f 90       	pop	r6
     bb6:	08 95       	ret

00000bb8 <main>:
	
	print(" ");
	print_long(startRam - get_free_ram());
}

int main(){
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	cd b7       	in	r28, 0x3d	; 61
     bbe:	de b7       	in	r29, 0x3e	; 62
     bc0:	2a 97       	sbiw	r28, 0x0a	; 10
     bc2:	0f b6       	in	r0, 0x3f	; 63
     bc4:	f8 94       	cli
     bc6:	de bf       	out	0x3e, r29	; 62
     bc8:	0f be       	out	0x3f, r0	; 63
     bca:	cd bf       	out	0x3d, r28	; 61
	initialise();
     bcc:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <_Z10initialisev>
		//print(" ");
		//print_long(read_battery_millivolts());
		//print("mv");
		//delay_ms(20);
		
		if (button_is_pressed(BUTTON_A)){
     bd0:	82 e0       	ldi	r24, 0x02	; 2
     bd2:	0e 94 a4 0c 	call	0x1948	; 0x1948 <button_is_pressed>
     bd6:	88 23       	and	r24, r24
     bd8:	19 f0       	breq	.+6      	; 0xbe0 <main+0x28>
			//calibrate();
			memTest();
     bda:	0e 94 68 01 	call	0x2d0	; 0x2d0 <_Z7memTestv>
     bde:	f8 cf       	rjmp	.-16     	; 0xbd0 <main+0x18>
		} else if(button_is_pressed(BUTTON_B)){
     be0:	80 e1       	ldi	r24, 0x10	; 16
     be2:	0e 94 a4 0c 	call	0x1948	; 0x1948 <button_is_pressed>
     be6:	88 23       	and	r24, r24
     be8:	19 f0       	breq	.+6      	; 0xbf0 <main+0x38>
			mapMaze();
     bea:	0e 94 35 04 	call	0x86a	; 0x86a <_Z7mapMazev>
     bee:	f0 cf       	rjmp	.-32     	; 0xbd0 <main+0x18>
		} else if(button_is_pressed(BUTTON_C)){
     bf0:	80 e2       	ldi	r24, 0x20	; 32
     bf2:	0e 94 a4 0c 	call	0x1948	; 0x1948 <button_is_pressed>
     bf6:	88 23       	and	r24, r24
     bf8:	59 f3       	breq	.-42     	; 0xbd0 <main+0x18>
			unsigned int sensors[5];
			while(1){
				unsigned int position = read_line(sensors, IR_EMITTERS_ON);
     bfa:	61 e0       	ldi	r22, 0x01	; 1
     bfc:	ce 01       	movw	r24, r28
     bfe:	01 96       	adiw	r24, 0x01	; 1
     c00:	0e 94 70 0d 	call	0x1ae0	; 0x1ae0 <read_line>
     c04:	8c 01       	movw	r16, r24
				clear();
     c06:	0e 94 92 0a 	call	0x1524	; 0x1524 <clear>
				print_long(position);
     c0a:	b8 01       	movw	r22, r16
     c0c:	80 e0       	ldi	r24, 0x00	; 0
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 06 0b 	call	0x160c	; 0x160c <print_long>
				lcd_goto_xy(0,1);
     c14:	61 e0       	ldi	r22, 0x01	; 1
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	0e 94 29 0b 	call	0x1652	; 0x1652 <lcd_goto_xy>
				display_readings(sensors);
     c1c:	ce 01       	movw	r24, r28
     c1e:	01 96       	adiw	r24, 0x01	; 1
     c20:	0e 94 24 01 	call	0x248	; 0x248 <_Z16display_readingsPKj>
				delay_ms(100);
     c24:	84 e6       	ldi	r24, 0x64	; 100
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
     c2c:	e6 cf       	rjmp	.-52     	; 0xbfa <main+0x42>

00000c2e <_GLOBAL__sub_I__Znwj>:
#include "node.h"
#include <stdbool.h>

struct NodeStack {
public:
	NodeStack() : top(0) {
     c2e:	10 92 b0 01 	sts	0x01B0, r1
     c32:	10 92 af 01 	sts	0x01AF, r1
     c36:	08 95       	ret

00000c38 <_GLOBAL__sub_D__Znwj>:
bool isForward, isLeft, isRight;
bool foundFinish;

cDirection currentDir;
position currentPos;
NodeStack myNodeStack;
     c38:	8f ea       	ldi	r24, 0xAF	; 175
     c3a:	91 e0       	ldi	r25, 0x01	; 1
     c3c:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <_ZN9NodeStackD1Ev>

00000c40 <_ZL16currentCharacterv>:
     c40:	90 91 41 01 	lds	r25, 0x0141
     c44:	e0 91 3d 01 	lds	r30, 0x013D
     c48:	f0 91 3e 01 	lds	r31, 0x013E
     c4c:	99 23       	and	r25, r25
     c4e:	11 f0       	breq	.+4      	; 0xc54 <_ZL16currentCharacterv+0x14>
     c50:	84 91       	lpm	r24, Z
     c52:	01 c0       	rjmp	.+2      	; 0xc56 <_ZL16currentCharacterv+0x16>
     c54:	80 81       	ld	r24, Z
     c56:	28 2f       	mov	r18, r24
     c58:	21 54       	subi	r18, 0x41	; 65
     c5a:	2a 31       	cpi	r18, 0x1A	; 26
     c5c:	10 f4       	brcc	.+4      	; 0xc62 <_ZL16currentCharacterv+0x22>
     c5e:	80 5e       	subi	r24, 0xE0	; 224
     c60:	08 95       	ret
     c62:	80 32       	cpi	r24, 0x20	; 32
     c64:	71 f4       	brne	.+28     	; 0xc82 <_ZL16currentCharacterv+0x42>
     c66:	20 91 3d 01 	lds	r18, 0x013D
     c6a:	30 91 3e 01 	lds	r19, 0x013E
     c6e:	a9 01       	movw	r20, r18
     c70:	4f 5f       	subi	r20, 0xFF	; 255
     c72:	5f 4f       	sbci	r21, 0xFF	; 255
     c74:	50 93 3e 01 	sts	0x013E, r21
     c78:	40 93 3d 01 	sts	0x013D, r20
     c7c:	21 15       	cp	r18, r1
     c7e:	31 05       	cpc	r19, r1
     c80:	09 f7       	brne	.-62     	; 0xc44 <_ZL16currentCharacterv+0x4>
     c82:	08 95       	ret

00000c84 <_ZL9getNumberv>:
     c84:	ef 92       	push	r14
     c86:	ff 92       	push	r15
     c88:	cf 93       	push	r28
     c8a:	df 93       	push	r29
     c8c:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
     c90:	c0 e0       	ldi	r28, 0x00	; 0
     c92:	d0 e0       	ldi	r29, 0x00	; 0
     c94:	1b c0       	rjmp	.+54     	; 0xccc <_ZL9getNumberv+0x48>
     c96:	9e 01       	movw	r18, r28
     c98:	22 0f       	add	r18, r18
     c9a:	33 1f       	adc	r19, r19
     c9c:	93 e0       	ldi	r25, 0x03	; 3
     c9e:	cc 0f       	add	r28, r28
     ca0:	dd 1f       	adc	r29, r29
     ca2:	9a 95       	dec	r25
     ca4:	e1 f7       	brne	.-8      	; 0xc9e <_ZL9getNumberv+0x1a>
     ca6:	c2 0f       	add	r28, r18
     ca8:	d3 1f       	adc	r29, r19
     caa:	99 27       	eor	r25, r25
     cac:	87 fd       	sbrc	r24, 7
     cae:	90 95       	com	r25
     cb0:	c8 0f       	add	r28, r24
     cb2:	d9 1f       	adc	r29, r25
     cb4:	e0 97       	sbiw	r28, 0x30	; 48
     cb6:	80 91 3d 01 	lds	r24, 0x013D
     cba:	90 91 3e 01 	lds	r25, 0x013E
     cbe:	01 96       	adiw	r24, 0x01	; 1
     cc0:	90 93 3e 01 	sts	0x013E, r25
     cc4:	80 93 3d 01 	sts	0x013D, r24
     cc8:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
     ccc:	98 2f       	mov	r25, r24
     cce:	90 53       	subi	r25, 0x30	; 48
     cd0:	9a 30       	cpi	r25, 0x0A	; 10
     cd2:	08 f3       	brcs	.-62     	; 0xc96 <_ZL9getNumberv+0x12>
     cd4:	ce 01       	movw	r24, r28
     cd6:	df 91       	pop	r29
     cd8:	cf 91       	pop	r28
     cda:	ff 90       	pop	r15
     cdc:	ef 90       	pop	r14
     cde:	08 95       	ret

00000ce0 <_ZN15OrangutanBuzzer5init2Ev>:
     ce0:	10 92 6f 00 	sts	0x006F, r1
     ce4:	83 e2       	ldi	r24, 0x23	; 35
     ce6:	80 93 80 00 	sts	0x0080, r24
     cea:	81 e1       	ldi	r24, 0x11	; 17
     cec:	80 93 81 00 	sts	0x0081, r24
     cf0:	10 92 82 00 	sts	0x0082, r1
     cf4:	80 e1       	ldi	r24, 0x10	; 16
     cf6:	97 e2       	ldi	r25, 0x27	; 39
     cf8:	90 93 89 00 	sts	0x0089, r25
     cfc:	80 93 88 00 	sts	0x0088, r24
     d00:	10 92 8b 00 	sts	0x008B, r1
     d04:	10 92 8a 00 	sts	0x008A, r1
     d08:	22 9a       	sbi	0x04, 2	; 4
     d0a:	78 94       	sei
     d0c:	08 95       	ret

00000d0e <_ZN15OrangutanBuzzer4initEv>:
     d0e:	80 91 3c 01 	lds	r24, 0x013C
     d12:	88 23       	and	r24, r24
     d14:	29 f4       	brne	.+10     	; 0xd20 <_ZN15OrangutanBuzzer4initEv+0x12>
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	80 93 3c 01 	sts	0x013C, r24
     d1c:	0e 94 70 06 	call	0xce0	; 0xce0 <_ZN15OrangutanBuzzer5init2Ev>
     d20:	08 95       	ret

00000d22 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     d22:	a0 e0       	ldi	r26, 0x00	; 0
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	e7 e9       	ldi	r30, 0x97	; 151
     d28:	f6 e0       	ldi	r31, 0x06	; 6
     d2a:	0c 94 7c 13 	jmp	0x26f8	; 0x26f8 <__prologue_saves__+0xc>
     d2e:	8c 01       	movw	r16, r24
     d30:	5b 01       	movw	r10, r22
     d32:	e4 2e       	mov	r14, r20
     d34:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN15OrangutanBuzzer4initEv>
     d38:	10 92 00 01 	sts	0x0100, r1
     d3c:	17 ff       	sbrs	r17, 7
     d3e:	04 c0       	rjmp	.+8      	; 0xd48 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x26>
     d40:	1f 77       	andi	r17, 0x7F	; 127
     d42:	aa e0       	ldi	r26, 0x0A	; 10
     d44:	fa 2e       	mov	r15, r26
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2a>
     d48:	ff 24       	eor	r15, r15
     d4a:	f3 94       	inc	r15
     d4c:	c0 90 81 00 	lds	r12, 0x0081
     d50:	dd 24       	eor	r13, r13
     d52:	28 ef       	ldi	r18, 0xF8	; 248
     d54:	c2 22       	and	r12, r18
     d56:	dd 24       	eor	r13, r13
     d58:	88 ec       	ldi	r24, 0xC8	; 200
     d5a:	3f 2d       	mov	r19, r15
     d5c:	38 9f       	mul	r19, r24
     d5e:	c0 01       	movw	r24, r0
     d60:	11 24       	eor	r1, r1
     d62:	80 17       	cp	r24, r16
     d64:	91 07       	cpc	r25, r17
     d66:	d8 f4       	brcc	.+54     	; 0xd9e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x7c>
     d68:	e8 01       	movw	r28, r16
     d6a:	67 e2       	ldi	r22, 0x27	; 39
     d6c:	01 31       	cpi	r16, 0x11	; 17
     d6e:	16 07       	cpc	r17, r22
     d70:	10 f0       	brcs	.+4      	; 0xd76 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x54>
     d72:	c0 e1       	ldi	r28, 0x10	; 16
     d74:	d7 e2       	ldi	r29, 0x27	; 39
     d76:	be 01       	movw	r22, r28
     d78:	76 95       	lsr	r23
     d7a:	67 95       	ror	r22
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	60 58       	subi	r22, 0x80	; 128
     d82:	79 46       	sbci	r23, 0x69	; 105
     d84:	87 46       	sbci	r24, 0x67	; 103
     d86:	9f 4f       	sbci	r25, 0xFF	; 255
     d88:	9e 01       	movw	r18, r28
     d8a:	40 e0       	ldi	r20, 0x00	; 0
     d8c:	50 e0       	ldi	r21, 0x00	; 0
     d8e:	0e 94 2a 13 	call	0x2654	; 0x2654 <__udivmodsi4>
     d92:	89 01       	movw	r16, r18
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	c8 2a       	or	r12, r24
     d9a:	d9 2a       	or	r13, r25
     d9c:	2c c0       	rjmp	.+88     	; 0xdf6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd4>
     d9e:	98 e2       	ldi	r25, 0x28	; 40
     da0:	f9 9e       	mul	r15, r25
     da2:	90 2d       	mov	r25, r0
     da4:	11 24       	eor	r1, r1
     da6:	80 e0       	ldi	r24, 0x00	; 0
     da8:	89 2e       	mov	r8, r25
     daa:	e4 01       	movw	r28, r8
     dac:	4e 01       	movw	r8, r28
     dae:	98 2e       	mov	r9, r24
     db0:	e4 01       	movw	r28, r8
     db2:	80 16       	cp	r8, r16
     db4:	91 06       	cpc	r9, r17
     db6:	08 f4       	brcc	.+2      	; 0xdba <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x98>
     db8:	e8 01       	movw	r28, r16
     dba:	be 01       	movw	r22, r28
     dbc:	76 95       	lsr	r23
     dbe:	67 95       	ror	r22
     dc0:	9e 01       	movw	r18, r28
     dc2:	40 e0       	ldi	r20, 0x00	; 0
     dc4:	50 e0       	ldi	r21, 0x00	; 0
     dc6:	8f 2d       	mov	r24, r15
     dc8:	8a 30       	cpi	r24, 0x0A	; 10
     dca:	39 f4       	brne	.+14     	; 0xdda <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xb8>
     dcc:	80 e0       	ldi	r24, 0x00	; 0
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	60 5e       	subi	r22, 0xE0	; 224
     dd2:	73 44       	sbci	r23, 0x43	; 67
     dd4:	81 44       	sbci	r24, 0x41	; 65
     dd6:	9f 4f       	sbci	r25, 0xFF	; 255
     dd8:	06 c0       	rjmp	.+12     	; 0xde6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc4>
     dda:	80 e0       	ldi	r24, 0x00	; 0
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	60 53       	subi	r22, 0x30	; 48
     de0:	7d 4e       	sbci	r23, 0xED	; 237
     de2:	8c 4e       	sbci	r24, 0xEC	; 236
     de4:	9f 4f       	sbci	r25, 0xFF	; 255
     de6:	0e 94 2a 13 	call	0x2654	; 0x2654 <__udivmodsi4>
     dea:	89 01       	movw	r16, r18
     dec:	52 e0       	ldi	r21, 0x02	; 2
     dee:	85 2e       	mov	r8, r21
     df0:	91 2c       	mov	r9, r1
     df2:	c8 28       	or	r12, r8
     df4:	d9 28       	or	r13, r9
     df6:	2f 2d       	mov	r18, r15
     df8:	2a 30       	cpi	r18, 0x0A	; 10
     dfa:	39 f4       	brne	.+14     	; 0xe0a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xe8>
     dfc:	ce 01       	movw	r24, r28
     dfe:	05 96       	adiw	r24, 0x05	; 5
     e00:	6a e0       	ldi	r22, 0x0A	; 10
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
     e08:	eb 01       	movw	r28, r22
     e0a:	33 e0       	ldi	r19, 0x03	; 3
     e0c:	c8 3e       	cpi	r28, 0xE8	; 232
     e0e:	d3 07       	cpc	r29, r19
     e10:	79 f0       	breq	.+30     	; 0xe30 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x10e>
     e12:	be 01       	movw	r22, r28
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	95 01       	movw	r18, r10
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	0e 94 e6 12 	call	0x25cc	; 0x25cc <__mulsi3>
     e22:	28 ee       	ldi	r18, 0xE8	; 232
     e24:	33 e0       	ldi	r19, 0x03	; 3
     e26:	40 e0       	ldi	r20, 0x00	; 0
     e28:	50 e0       	ldi	r21, 0x00	; 0
     e2a:	0e 94 4c 13 	call	0x2698	; 0x2698 <__divmodsi4>
     e2e:	01 c0       	rjmp	.+2      	; 0xe32 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     e30:	95 01       	movw	r18, r10
     e32:	10 92 6f 00 	sts	0x006F, r1
     e36:	c0 92 81 00 	sts	0x0081, r12
     e3a:	10 93 89 00 	sts	0x0089, r17
     e3e:	00 93 88 00 	sts	0x0088, r16
     e42:	40 91 88 00 	lds	r20, 0x0088
     e46:	50 91 89 00 	lds	r21, 0x0089
     e4a:	6e 2d       	mov	r22, r14
     e4c:	60 31       	cpi	r22, 0x10	; 16
     e4e:	08 f0       	brcs	.+2      	; 0xe52 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     e50:	6f e0       	ldi	r22, 0x0F	; 15
     e52:	80 e1       	ldi	r24, 0x10	; 16
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	86 1b       	sub	r24, r22
     e58:	91 09       	sbc	r25, r1
     e5a:	ba 01       	movw	r22, r20
     e5c:	02 c0       	rjmp	.+4      	; 0xe62 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     e5e:	76 95       	lsr	r23
     e60:	67 95       	ror	r22
     e62:	8a 95       	dec	r24
     e64:	e2 f7       	brpl	.-8      	; 0xe5e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     e66:	70 93 8b 00 	sts	0x008B, r23
     e6a:	60 93 8a 00 	sts	0x008A, r22
     e6e:	30 93 44 01 	sts	0x0144, r19
     e72:	20 93 43 01 	sts	0x0143, r18
     e76:	86 b3       	in	r24, 0x16	; 22
     e78:	8f ef       	ldi	r24, 0xFF	; 255
     e7a:	86 bb       	out	0x16, r24	; 22
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	80 93 6f 00 	sts	0x006F, r24
     e82:	cd b7       	in	r28, 0x3d	; 61
     e84:	de b7       	in	r29, 0x3e	; 62
     e86:	ec e0       	ldi	r30, 0x0C	; 12
     e88:	0c 94 98 13 	jmp	0x2730	; 0x2730 <__epilogue_restores__+0xc>

00000e8c <play_frequency>:
     e8c:	0e 94 91 06 	call	0xd22	; 0xd22 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     e90:	08 95       	ret

00000e92 <_ZN15OrangutanBuzzer8playNoteEhjh>:
     e92:	9b 01       	movw	r18, r22
     e94:	8f 3f       	cpi	r24, 0xFF	; 255
     e96:	11 f0       	breq	.+4      	; 0xe9c <_ZN15OrangutanBuzzer8playNoteEhjh+0xa>
     e98:	44 23       	and	r20, r20
     e9a:	29 f4       	brne	.+10     	; 0xea6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x14>
     e9c:	88 ee       	ldi	r24, 0xE8	; 232
     e9e:	93 e0       	ldi	r25, 0x03	; 3
     ea0:	b9 01       	movw	r22, r18
     ea2:	40 e0       	ldi	r20, 0x00	; 0
     ea4:	49 c0       	rjmp	.+146    	; 0xf38 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa6>
     ea6:	81 31       	cpi	r24, 0x11	; 17
     ea8:	30 f0       	brcs	.+12     	; 0xeb6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x24>
     eaa:	58 2f       	mov	r21, r24
     eac:	50 51       	subi	r21, 0x10	; 16
     eae:	50 36       	cpi	r21, 0x60	; 96
     eb0:	18 f0       	brcs	.+6      	; 0xeb8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     eb2:	5f e5       	ldi	r21, 0x5F	; 95
     eb4:	01 c0       	rjmp	.+2      	; 0xeb8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	85 2f       	mov	r24, r21
     eba:	6c e0       	ldi	r22, 0x0C	; 12
     ebc:	0e 94 f6 12 	call	0x25ec	; 0x25ec <__udivmodqi4>
     ec0:	a8 2f       	mov	r26, r24
     ec2:	b0 e0       	ldi	r27, 0x00	; 0
     ec4:	e4 ef       	ldi	r30, 0xF4	; 244
     ec6:	ff ef       	ldi	r31, 0xFF	; 255
     ec8:	ae 9f       	mul	r26, r30
     eca:	b0 01       	movw	r22, r0
     ecc:	af 9f       	mul	r26, r31
     ece:	70 0d       	add	r23, r0
     ed0:	be 9f       	mul	r27, r30
     ed2:	70 0d       	add	r23, r0
     ed4:	11 24       	eor	r1, r1
     ed6:	65 0f       	add	r22, r21
     ed8:	71 1d       	adc	r23, r1
     eda:	6c 30       	cpi	r22, 0x0C	; 12
     edc:	71 05       	cpc	r23, r1
     ede:	40 f4       	brcc	.+16     	; 0xef0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5e>
     ee0:	fb 01       	movw	r30, r22
     ee2:	ee 0f       	add	r30, r30
     ee4:	ff 1f       	adc	r31, r31
     ee6:	e6 5f       	subi	r30, 0xF6	; 246
     ee8:	fe 4f       	sbci	r31, 0xFE	; 254
     eea:	60 81       	ld	r22, Z
     eec:	71 81       	ldd	r23, Z+1	; 0x01
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     ef0:	60 e0       	ldi	r22, 0x00	; 0
     ef2:	70 e0       	ldi	r23, 0x00	; 0
     ef4:	87 30       	cpi	r24, 0x07	; 7
     ef6:	81 f0       	breq	.+32     	; 0xf18 <_ZN15OrangutanBuzzer8playNoteEhjh+0x86>
     ef8:	08 2e       	mov	r0, r24
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6e>
     efc:	66 0f       	add	r22, r22
     efe:	77 1f       	adc	r23, r23
     f00:	0a 94       	dec	r0
     f02:	e2 f7       	brpl	.-8      	; 0xefc <_ZN15OrangutanBuzzer8playNoteEhjh+0x6a>
     f04:	82 30       	cpi	r24, 0x02	; 2
     f06:	28 f0       	brcs	.+10     	; 0xf12 <_ZN15OrangutanBuzzer8playNoteEhjh+0x80>
     f08:	cb 01       	movw	r24, r22
     f0a:	05 96       	adiw	r24, 0x05	; 5
     f0c:	6a e0       	ldi	r22, 0x0A	; 10
     f0e:	70 e0       	ldi	r23, 0x00	; 0
     f10:	0c c0       	rjmp	.+24     	; 0xf2a <_ZN15OrangutanBuzzer8playNoteEhjh+0x98>
     f12:	60 50       	subi	r22, 0x00	; 0
     f14:	70 48       	sbci	r23, 0x80	; 128
     f16:	0b c0       	rjmp	.+22     	; 0xf2e <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     f18:	cb 01       	movw	r24, r22
     f1a:	b6 e0       	ldi	r27, 0x06	; 6
     f1c:	88 0f       	add	r24, r24
     f1e:	99 1f       	adc	r25, r25
     f20:	ba 95       	dec	r27
     f22:	e1 f7       	brne	.-8      	; 0xf1c <_ZN15OrangutanBuzzer8playNoteEhjh+0x8a>
     f24:	02 96       	adiw	r24, 0x02	; 2
     f26:	65 e0       	ldi	r22, 0x05	; 5
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
     f2e:	40 31       	cpi	r20, 0x10	; 16
     f30:	08 f0       	brcs	.+2      	; 0xf34 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa2>
     f32:	4f e0       	ldi	r20, 0x0F	; 15
     f34:	cb 01       	movw	r24, r22
     f36:	b9 01       	movw	r22, r18
     f38:	0e 94 91 06 	call	0xd22	; 0xd22 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     f3c:	08 95       	ret

00000f3e <_ZL8nextNotev>:
     f3e:	a0 e0       	ldi	r26, 0x00	; 0
     f40:	b0 e0       	ldi	r27, 0x00	; 0
     f42:	e5 ea       	ldi	r30, 0xA5	; 165
     f44:	f7 e0       	ldi	r31, 0x07	; 7
     f46:	0c 94 7b 13 	jmp	0x26f6	; 0x26f6 <__prologue_saves__+0xa>
     f4a:	b0 90 01 01 	lds	r11, 0x0101
     f4e:	80 91 3f 01 	lds	r24, 0x013F
     f52:	88 23       	and	r24, r24
     f54:	61 f0       	breq	.+24     	; 0xf6e <_ZL8nextNotev+0x30>
     f56:	60 91 40 01 	lds	r22, 0x0140
     f5a:	66 23       	and	r22, r22
     f5c:	41 f0       	breq	.+16     	; 0xf6e <_ZL8nextNotev+0x30>
     f5e:	8f ef       	ldi	r24, 0xFF	; 255
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	40 e0       	ldi	r20, 0x00	; 0
     f64:	0e 94 49 07 	call	0xe92	; 0xe92 <_ZN15OrangutanBuzzer8playNoteEhjh>
     f68:	10 92 40 01 	sts	0x0140, r1
     f6c:	34 c1       	rjmp	.+616    	; 0x11d6 <_ZL8nextNotev+0x298>
     f6e:	c0 ec       	ldi	r28, 0xC0	; 192
     f70:	dd e5       	ldi	r29, 0x5D	; 93
     f72:	aa 24       	eor	r10, r10
     f74:	a3 94       	inc	r10
     f76:	14 e0       	ldi	r17, 0x04	; 4
     f78:	71 2e       	mov	r7, r17
     f7a:	00 ed       	ldi	r16, 0xD0	; 208
     f7c:	17 e0       	ldi	r17, 0x07	; 7
     f7e:	b4 e0       	ldi	r27, 0x04	; 4
     f80:	eb 2e       	mov	r14, r27
     f82:	f1 2c       	mov	r15, r1
     f84:	a4 ef       	ldi	r26, 0xF4	; 244
     f86:	ca 2e       	mov	r12, r26
     f88:	a1 e0       	ldi	r26, 0x01	; 1
     f8a:	da 2e       	mov	r13, r26
     f8c:	ff e0       	ldi	r31, 0x0F	; 15
     f8e:	8f 2e       	mov	r8, r31
     f90:	91 2c       	mov	r9, r1
     f92:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
     f96:	20 91 3d 01 	lds	r18, 0x013D
     f9a:	30 91 3e 01 	lds	r19, 0x013E
     f9e:	2f 5f       	subi	r18, 0xFF	; 255
     fa0:	3f 4f       	sbci	r19, 0xFF	; 255
     fa2:	30 93 3e 01 	sts	0x013E, r19
     fa6:	20 93 3d 01 	sts	0x013D, r18
     faa:	86 36       	cpi	r24, 0x66	; 102
     fac:	f1 f1       	breq	.+124    	; 0x102a <_ZL8nextNotev+0xec>
     fae:	87 36       	cpi	r24, 0x67	; 103
     fb0:	cc f4       	brge	.+50     	; 0xfe4 <_ZL8nextNotev+0xa6>
     fb2:	82 36       	cpi	r24, 0x62	; 98
     fb4:	09 f4       	brne	.+2      	; 0xfb8 <_ZL8nextNotev+0x7a>
     fb6:	af c0       	rjmp	.+350    	; 0x1116 <_ZL8nextNotev+0x1d8>
     fb8:	83 36       	cpi	r24, 0x63	; 99
     fba:	7c f4       	brge	.+30     	; 0xfda <_ZL8nextNotev+0x9c>
     fbc:	8e 33       	cpi	r24, 0x3E	; 62
     fbe:	49 f1       	breq	.+82     	; 0x1012 <_ZL8nextNotev+0xd4>
     fc0:	8f 33       	cpi	r24, 0x3F	; 63
     fc2:	3c f4       	brge	.+14     	; 0xfd2 <_ZL8nextNotev+0x94>
     fc4:	81 32       	cpi	r24, 0x21	; 33
     fc6:	09 f4       	brne	.+2      	; 0xfca <_ZL8nextNotev+0x8c>
     fc8:	87 c0       	rjmp	.+270    	; 0x10d8 <_ZL8nextNotev+0x19a>
     fca:	8c 33       	cpi	r24, 0x3C	; 60
     fcc:	09 f0       	breq	.+2      	; 0xfd0 <_ZL8nextNotev+0x92>
     fce:	9b c0       	rjmp	.+310    	; 0x1106 <_ZL8nextNotev+0x1c8>
     fd0:	22 c0       	rjmp	.+68     	; 0x1016 <_ZL8nextNotev+0xd8>
     fd2:	81 36       	cpi	r24, 0x61	; 97
     fd4:	09 f0       	breq	.+2      	; 0xfd8 <_ZL8nextNotev+0x9a>
     fd6:	97 c0       	rjmp	.+302    	; 0x1106 <_ZL8nextNotev+0x1c8>
     fd8:	9b c0       	rjmp	.+310    	; 0x1110 <_ZL8nextNotev+0x1d2>
     fda:	84 36       	cpi	r24, 0x64	; 100
     fdc:	01 f1       	breq	.+64     	; 0x101e <_ZL8nextNotev+0xe0>
     fde:	85 36       	cpi	r24, 0x65	; 101
     fe0:	0c f5       	brge	.+66     	; 0x1024 <_ZL8nextNotev+0xe6>
     fe2:	1b c0       	rjmp	.+54     	; 0x101a <_ZL8nextNotev+0xdc>
     fe4:	8f 36       	cpi	r24, 0x6F	; 111
     fe6:	09 f4       	brne	.+2      	; 0xfea <_ZL8nextNotev+0xac>
     fe8:	47 c0       	rjmp	.+142    	; 0x1078 <_ZL8nextNotev+0x13a>
     fea:	80 37       	cpi	r24, 0x70	; 112
     fec:	44 f4       	brge	.+16     	; 0xffe <_ZL8nextNotev+0xc0>
     fee:	8c 36       	cpi	r24, 0x6C	; 108
     ff0:	11 f1       	breq	.+68     	; 0x1036 <_ZL8nextNotev+0xf8>
     ff2:	8d 36       	cpi	r24, 0x6D	; 109
     ff4:	61 f1       	breq	.+88     	; 0x104e <_ZL8nextNotev+0x110>
     ff6:	87 36       	cpi	r24, 0x67	; 103
     ff8:	09 f0       	breq	.+2      	; 0xffc <_ZL8nextNotev+0xbe>
     ffa:	85 c0       	rjmp	.+266    	; 0x1106 <_ZL8nextNotev+0x1c8>
     ffc:	19 c0       	rjmp	.+50     	; 0x1030 <_ZL8nextNotev+0xf2>
     ffe:	84 37       	cpi	r24, 0x74	; 116
    1000:	09 f4       	brne	.+2      	; 0x1004 <_ZL8nextNotev+0xc6>
    1002:	44 c0       	rjmp	.+136    	; 0x108c <_ZL8nextNotev+0x14e>
    1004:	86 37       	cpi	r24, 0x76	; 118
    1006:	09 f4       	brne	.+2      	; 0x100a <_ZL8nextNotev+0xcc>
    1008:	60 c0       	rjmp	.+192    	; 0x10ca <_ZL8nextNotev+0x18c>
    100a:	82 37       	cpi	r24, 0x72	; 114
    100c:	09 f0       	breq	.+2      	; 0x1010 <_ZL8nextNotev+0xd2>
    100e:	7b c0       	rjmp	.+246    	; 0x1106 <_ZL8nextNotev+0x1c8>
    1010:	39 c0       	rjmp	.+114    	; 0x1084 <_ZL8nextNotev+0x146>
    1012:	b3 94       	inc	r11
    1014:	be cf       	rjmp	.-132    	; 0xf92 <_ZL8nextNotev+0x54>
    1016:	ba 94       	dec	r11
    1018:	bc cf       	rjmp	.-136    	; 0xf92 <_ZL8nextNotev+0x54>
    101a:	ee 24       	eor	r14, r14
    101c:	35 c0       	rjmp	.+106    	; 0x1088 <_ZL8nextNotev+0x14a>
    101e:	ee 24       	eor	r14, r14
    1020:	82 e0       	ldi	r24, 0x02	; 2
    1022:	7b c0       	rjmp	.+246    	; 0x111a <_ZL8nextNotev+0x1dc>
    1024:	ee 24       	eor	r14, r14
    1026:	84 e0       	ldi	r24, 0x04	; 4
    1028:	78 c0       	rjmp	.+240    	; 0x111a <_ZL8nextNotev+0x1dc>
    102a:	ee 24       	eor	r14, r14
    102c:	85 e0       	ldi	r24, 0x05	; 5
    102e:	75 c0       	rjmp	.+234    	; 0x111a <_ZL8nextNotev+0x1dc>
    1030:	ee 24       	eor	r14, r14
    1032:	87 e0       	ldi	r24, 0x07	; 7
    1034:	72 c0       	rjmp	.+228    	; 0x111a <_ZL8nextNotev+0x1dc>
    1036:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZL9getNumberv>
    103a:	bc 01       	movw	r22, r24
    103c:	90 93 03 01 	sts	0x0103, r25
    1040:	80 93 02 01 	sts	0x0102, r24
    1044:	80 91 04 01 	lds	r24, 0x0104
    1048:	90 91 05 01 	lds	r25, 0x0105
    104c:	37 c0       	rjmp	.+110    	; 0x10bc <_ZL8nextNotev+0x17e>
    104e:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
    1052:	8c 36       	cpi	r24, 0x6C	; 108
    1054:	19 f4       	brne	.+6      	; 0x105c <_ZL8nextNotev+0x11e>
    1056:	10 92 3f 01 	sts	0x013F, r1
    105a:	04 c0       	rjmp	.+8      	; 0x1064 <_ZL8nextNotev+0x126>
    105c:	a0 92 3f 01 	sts	0x013F, r10
    1060:	10 92 40 01 	sts	0x0140, r1
    1064:	80 91 3d 01 	lds	r24, 0x013D
    1068:	90 91 3e 01 	lds	r25, 0x013E
    106c:	01 96       	adiw	r24, 0x01	; 1
    106e:	90 93 3e 01 	sts	0x013E, r25
    1072:	80 93 3d 01 	sts	0x013D, r24
    1076:	8d cf       	rjmp	.-230    	; 0xf92 <_ZL8nextNotev+0x54>
    1078:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZL9getNumberv>
    107c:	b8 2e       	mov	r11, r24
    107e:	80 93 01 01 	sts	0x0101, r24
    1082:	87 cf       	rjmp	.-242    	; 0xf92 <_ZL8nextNotev+0x54>
    1084:	ee 24       	eor	r14, r14
    1086:	e3 94       	inc	r14
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	47 c0       	rjmp	.+142    	; 0x111a <_ZL8nextNotev+0x1dc>
    108c:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZL9getNumberv>
    1090:	bc 01       	movw	r22, r24
    1092:	ce 01       	movw	r24, r28
    1094:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
    1098:	cb 01       	movw	r24, r22
    109a:	88 0f       	add	r24, r24
    109c:	99 1f       	adc	r25, r25
    109e:	53 e0       	ldi	r21, 0x03	; 3
    10a0:	66 0f       	add	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	5a 95       	dec	r21
    10a6:	e1 f7       	brne	.-8      	; 0x10a0 <_ZL8nextNotev+0x162>
    10a8:	86 0f       	add	r24, r22
    10aa:	97 1f       	adc	r25, r23
    10ac:	90 93 05 01 	sts	0x0105, r25
    10b0:	80 93 04 01 	sts	0x0104, r24
    10b4:	60 91 02 01 	lds	r22, 0x0102
    10b8:	70 91 03 01 	lds	r23, 0x0103
    10bc:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
    10c0:	70 93 07 01 	sts	0x0107, r23
    10c4:	60 93 06 01 	sts	0x0106, r22
    10c8:	64 cf       	rjmp	.-312    	; 0xf92 <_ZL8nextNotev+0x54>
    10ca:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZL9getNumberv>
    10ce:	90 93 09 01 	sts	0x0109, r25
    10d2:	80 93 08 01 	sts	0x0108, r24
    10d6:	5d cf       	rjmp	.-326    	; 0xf92 <_ZL8nextNotev+0x54>
    10d8:	70 92 01 01 	sts	0x0101, r7
    10dc:	10 93 05 01 	sts	0x0105, r17
    10e0:	00 93 04 01 	sts	0x0104, r16
    10e4:	f0 92 03 01 	sts	0x0103, r15
    10e8:	e0 92 02 01 	sts	0x0102, r14
    10ec:	d0 92 07 01 	sts	0x0107, r13
    10f0:	c0 92 06 01 	sts	0x0106, r12
    10f4:	90 92 09 01 	sts	0x0109, r9
    10f8:	80 92 08 01 	sts	0x0108, r8
    10fc:	10 92 3f 01 	sts	0x013F, r1
    1100:	44 e0       	ldi	r20, 0x04	; 4
    1102:	b4 2e       	mov	r11, r20
    1104:	46 cf       	rjmp	.-372    	; 0xf92 <_ZL8nextNotev+0x54>
    1106:	10 92 3e 01 	sts	0x013E, r1
    110a:	10 92 3d 01 	sts	0x013D, r1
    110e:	63 c0       	rjmp	.+198    	; 0x11d6 <_ZL8nextNotev+0x298>
    1110:	ee 24       	eor	r14, r14
    1112:	89 e0       	ldi	r24, 0x09	; 9
    1114:	02 c0       	rjmp	.+4      	; 0x111a <_ZL8nextNotev+0x1dc>
    1116:	ee 24       	eor	r14, r14
    1118:	8b e0       	ldi	r24, 0x0B	; 11
    111a:	9c e0       	ldi	r25, 0x0C	; 12
    111c:	b9 9e       	mul	r11, r25
    111e:	b0 2c       	mov	r11, r0
    1120:	11 24       	eor	r1, r1
    1122:	b8 0e       	add	r11, r24
    1124:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
    1128:	8b 32       	cpi	r24, 0x2B	; 43
    112a:	11 f0       	breq	.+4      	; 0x1130 <_ZL8nextNotev+0x1f2>
    112c:	83 32       	cpi	r24, 0x23	; 35
    112e:	b9 f4       	brne	.+46     	; 0x115e <_ZL8nextNotev+0x220>
    1130:	80 91 3d 01 	lds	r24, 0x013D
    1134:	90 91 3e 01 	lds	r25, 0x013E
    1138:	01 96       	adiw	r24, 0x01	; 1
    113a:	90 93 3e 01 	sts	0x013E, r25
    113e:	80 93 3d 01 	sts	0x013D, r24
    1142:	b3 94       	inc	r11
    1144:	ef cf       	rjmp	.-34     	; 0x1124 <_ZL8nextNotev+0x1e6>
    1146:	80 91 3d 01 	lds	r24, 0x013D
    114a:	90 91 3e 01 	lds	r25, 0x013E
    114e:	01 96       	adiw	r24, 0x01	; 1
    1150:	90 93 3e 01 	sts	0x013E, r25
    1154:	80 93 3d 01 	sts	0x013D, r24
    1158:	ba 94       	dec	r11
    115a:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
    115e:	8d 32       	cpi	r24, 0x2D	; 45
    1160:	91 f3       	breq	.-28     	; 0x1146 <_ZL8nextNotev+0x208>
    1162:	c0 91 06 01 	lds	r28, 0x0106
    1166:	d0 91 07 01 	lds	r29, 0x0107
    116a:	81 53       	subi	r24, 0x31	; 49
    116c:	88 30       	cpi	r24, 0x08	; 8
    116e:	58 f4       	brcc	.+22     	; 0x1186 <_ZL8nextNotev+0x248>
    1170:	c0 91 04 01 	lds	r28, 0x0104
    1174:	d0 91 05 01 	lds	r29, 0x0105
    1178:	0e 94 42 06 	call	0xc84	; 0xc84 <_ZL9getNumberv>
    117c:	bc 01       	movw	r22, r24
    117e:	ce 01       	movw	r24, r28
    1180:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
    1184:	eb 01       	movw	r28, r22
    1186:	8e 01       	movw	r16, r28
    1188:	0b c0       	rjmp	.+22     	; 0x11a0 <_ZL8nextNotev+0x262>
    118a:	80 91 3d 01 	lds	r24, 0x013D
    118e:	90 91 3e 01 	lds	r25, 0x013E
    1192:	01 96       	adiw	r24, 0x01	; 1
    1194:	90 93 3e 01 	sts	0x013E, r25
    1198:	80 93 3d 01 	sts	0x013D, r24
    119c:	c0 0f       	add	r28, r16
    119e:	d1 1f       	adc	r29, r17
    11a0:	16 95       	lsr	r17
    11a2:	07 95       	ror	r16
    11a4:	0e 94 20 06 	call	0xc40	; 0xc40 <_ZL16currentCharacterv>
    11a8:	8e 32       	cpi	r24, 0x2E	; 46
    11aa:	79 f3       	breq	.-34     	; 0x118a <_ZL8nextNotev+0x24c>
    11ac:	80 91 3f 01 	lds	r24, 0x013F
    11b0:	88 23       	and	r24, r24
    11b2:	39 f0       	breq	.+14     	; 0x11c2 <_ZL8nextNotev+0x284>
    11b4:	ce 01       	movw	r24, r28
    11b6:	96 95       	lsr	r25
    11b8:	87 95       	ror	r24
    11ba:	80 93 40 01 	sts	0x0140, r24
    11be:	c8 1b       	sub	r28, r24
    11c0:	d1 09       	sbc	r29, r1
    11c2:	ee 20       	and	r14, r14
    11c4:	11 f0       	breq	.+4      	; 0x11ca <_ZL8nextNotev+0x28c>
    11c6:	bb 24       	eor	r11, r11
    11c8:	ba 94       	dec	r11
    11ca:	8b 2d       	mov	r24, r11
    11cc:	be 01       	movw	r22, r28
    11ce:	40 91 08 01 	lds	r20, 0x0108
    11d2:	0e 94 49 07 	call	0xe92	; 0xe92 <_ZN15OrangutanBuzzer8playNoteEhjh>
    11d6:	cd b7       	in	r28, 0x3d	; 61
    11d8:	de b7       	in	r29, 0x3e	; 62
    11da:	ed e0       	ldi	r30, 0x0D	; 13
    11dc:	0c 94 97 13 	jmp	0x272e	; 0x272e <__epilogue_restores__+0xa>

000011e0 <__vector_13>:
    11e0:	1f 92       	push	r1
    11e2:	0f 92       	push	r0
    11e4:	0f b6       	in	r0, 0x3f	; 63
    11e6:	0f 92       	push	r0
    11e8:	11 24       	eor	r1, r1
    11ea:	2f 93       	push	r18
    11ec:	3f 93       	push	r19
    11ee:	4f 93       	push	r20
    11f0:	5f 93       	push	r21
    11f2:	6f 93       	push	r22
    11f4:	7f 93       	push	r23
    11f6:	8f 93       	push	r24
    11f8:	9f 93       	push	r25
    11fa:	af 93       	push	r26
    11fc:	bf 93       	push	r27
    11fe:	ef 93       	push	r30
    1200:	ff 93       	push	r31
    1202:	80 91 43 01 	lds	r24, 0x0143
    1206:	90 91 44 01 	lds	r25, 0x0144
    120a:	9c 01       	movw	r18, r24
    120c:	21 50       	subi	r18, 0x01	; 1
    120e:	30 40       	sbci	r19, 0x00	; 0
    1210:	30 93 44 01 	sts	0x0144, r19
    1214:	20 93 43 01 	sts	0x0143, r18
    1218:	00 97       	sbiw	r24, 0x00	; 0
    121a:	11 f5       	brne	.+68     	; 0x1260 <__vector_13+0x80>
    121c:	10 92 6f 00 	sts	0x006F, r1
    1220:	78 94       	sei
    1222:	80 91 81 00 	lds	r24, 0x0081
    1226:	88 7f       	andi	r24, 0xF8	; 248
    1228:	81 60       	ori	r24, 0x01	; 1
    122a:	80 93 81 00 	sts	0x0081, r24
    122e:	80 e1       	ldi	r24, 0x10	; 16
    1230:	97 e2       	ldi	r25, 0x27	; 39
    1232:	90 93 89 00 	sts	0x0089, r25
    1236:	80 93 88 00 	sts	0x0088, r24
    123a:	10 92 8b 00 	sts	0x008B, r1
    123e:	10 92 8a 00 	sts	0x008A, r1
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	80 93 00 01 	sts	0x0100, r24
    1248:	80 91 3d 01 	lds	r24, 0x013D
    124c:	90 91 3e 01 	lds	r25, 0x013E
    1250:	00 97       	sbiw	r24, 0x00	; 0
    1252:	31 f0       	breq	.+12     	; 0x1260 <__vector_13+0x80>
    1254:	80 91 42 01 	lds	r24, 0x0142
    1258:	88 23       	and	r24, r24
    125a:	11 f4       	brne	.+4      	; 0x1260 <__vector_13+0x80>
    125c:	0e 94 9f 07 	call	0xf3e	; 0xf3e <_ZL8nextNotev>
    1260:	ff 91       	pop	r31
    1262:	ef 91       	pop	r30
    1264:	bf 91       	pop	r27
    1266:	af 91       	pop	r26
    1268:	9f 91       	pop	r25
    126a:	8f 91       	pop	r24
    126c:	7f 91       	pop	r23
    126e:	6f 91       	pop	r22
    1270:	5f 91       	pop	r21
    1272:	4f 91       	pop	r20
    1274:	3f 91       	pop	r19
    1276:	2f 91       	pop	r18
    1278:	0f 90       	pop	r0
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	0f 90       	pop	r0
    127e:	1f 90       	pop	r1
    1280:	18 95       	reti

00001282 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    1282:	10 92 6f 00 	sts	0x006F, r1
    1286:	90 93 3e 01 	sts	0x013E, r25
    128a:	80 93 3d 01 	sts	0x013D, r24
    128e:	81 e0       	ldi	r24, 0x01	; 1
    1290:	80 93 41 01 	sts	0x0141, r24
    1294:	10 92 40 01 	sts	0x0140, r1
    1298:	0e 94 9f 07 	call	0xf3e	; 0xf3e <_ZL8nextNotev>
    129c:	08 95       	ret

0000129e <play_from_program_space>:
    129e:	0e 94 41 09 	call	0x1282	; 0x1282 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    12a2:	08 95       	ret

000012a4 <delayMicroseconds.clone.0>:
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	6f 93       	push	r22
    12aa:	64 e0       	ldi	r22, 0x04	; 4
    12ac:	6a 95       	dec	r22
    12ae:	f1 f7       	brne	.-4      	; 0x12ac <delayMicroseconds.clone.0+0x8>
    12b0:	6f 91       	pop	r22
    12b2:	01 97       	sbiw	r24, 0x01	; 1
    12b4:	c9 f7       	brne	.-14     	; 0x12a8 <delayMicroseconds.clone.0+0x4>
    12b6:	08 95       	ret

000012b8 <_ZN12OrangutanLCD8busyWaitEv>:
    12b8:	0f 93       	push	r16
    12ba:	1f 93       	push	r17
    12bc:	cf 93       	push	r28
    12be:	df 93       	push	r29
    12c0:	1a b1       	in	r17, 0x0a	; 10
    12c2:	57 98       	cbi	0x0a, 7	; 10
    12c4:	5a 98       	cbi	0x0b, 2	; 11
    12c6:	28 9a       	sbi	0x05, 0	; 5
    12c8:	c0 e0       	ldi	r28, 0x00	; 0
    12ca:	d0 e0       	ldi	r29, 0x00	; 0
    12cc:	0e 94 52 09 	call	0x12a4	; 0x12a4 <delayMicroseconds.clone.0>
    12d0:	5c 9a       	sbi	0x0b, 4	; 11
    12d2:	0e 94 52 09 	call	0x12a4	; 0x12a4 <delayMicroseconds.clone.0>
    12d6:	09 b1       	in	r16, 0x09	; 9
    12d8:	5c 98       	cbi	0x0b, 4	; 11
    12da:	0e 94 52 09 	call	0x12a4	; 0x12a4 <delayMicroseconds.clone.0>
    12de:	5c 9a       	sbi	0x0b, 4	; 11
    12e0:	0e 94 52 09 	call	0x12a4	; 0x12a4 <delayMicroseconds.clone.0>
    12e4:	5c 98       	cbi	0x0b, 4	; 11
    12e6:	07 ff       	sbrs	r16, 7
    12e8:	11 c0       	rjmp	.+34     	; 0x130c <_ZN12OrangutanLCD8busyWaitEv+0x54>
    12ea:	24 96       	adiw	r28, 0x04	; 4
    12ec:	9e 01       	movw	r18, r28
    12ee:	40 e0       	ldi	r20, 0x00	; 0
    12f0:	50 e0       	ldi	r21, 0x00	; 0
    12f2:	80 91 49 01 	lds	r24, 0x0149
    12f6:	90 91 4a 01 	lds	r25, 0x014A
    12fa:	a0 91 4b 01 	lds	r26, 0x014B
    12fe:	b0 91 4c 01 	lds	r27, 0x014C
    1302:	28 17       	cp	r18, r24
    1304:	39 07       	cpc	r19, r25
    1306:	4a 07       	cpc	r20, r26
    1308:	5b 07       	cpc	r21, r27
    130a:	00 f3       	brcs	.-64     	; 0x12cc <_ZN12OrangutanLCD8busyWaitEv+0x14>
    130c:	1a b9       	out	0x0a, r17	; 10
    130e:	df 91       	pop	r29
    1310:	cf 91       	pop	r28
    1312:	1f 91       	pop	r17
    1314:	0f 91       	pop	r16
    1316:	08 95       	ret

00001318 <_ZN12OrangutanLCD8sendDataEh>:
    1318:	65 b1       	in	r22, 0x05	; 5
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	ac 01       	movw	r20, r24
    131e:	41 70       	andi	r20, 0x01	; 1
    1320:	50 70       	andi	r21, 0x00	; 0
    1322:	44 0f       	add	r20, r20
    1324:	55 1f       	adc	r21, r21
    1326:	9c 01       	movw	r18, r24
    1328:	26 70       	andi	r18, 0x06	; 6
    132a:	30 70       	andi	r19, 0x00	; 0
    132c:	53 e0       	ldi	r21, 0x03	; 3
    132e:	22 0f       	add	r18, r18
    1330:	33 1f       	adc	r19, r19
    1332:	5a 95       	dec	r21
    1334:	e1 f7       	brne	.-8      	; 0x132e <_ZN12OrangutanLCD8sendDataEh+0x16>
    1336:	24 2b       	or	r18, r20
    1338:	6d 7c       	andi	r22, 0xCD	; 205
    133a:	26 2b       	or	r18, r22
    133c:	25 b9       	out	0x05, r18	; 5
    133e:	2b b1       	in	r18, 0x0b	; 11
    1340:	88 70       	andi	r24, 0x08	; 8
    1342:	90 70       	andi	r25, 0x00	; 0
    1344:	34 e0       	ldi	r19, 0x04	; 4
    1346:	88 0f       	add	r24, r24
    1348:	99 1f       	adc	r25, r25
    134a:	3a 95       	dec	r19
    134c:	e1 f7       	brne	.-8      	; 0x1346 <_ZN12OrangutanLCD8sendDataEh+0x2e>
    134e:	2f 77       	andi	r18, 0x7F	; 127
    1350:	28 2b       	or	r18, r24
    1352:	2b b9       	out	0x0b, r18	; 11
    1354:	5c 9a       	sbi	0x0b, 4	; 11
    1356:	0e 94 52 09 	call	0x12a4	; 0x12a4 <delayMicroseconds.clone.0>
    135a:	5c 98       	cbi	0x0b, 4	; 11
    135c:	0e 94 52 09 	call	0x12a4	; 0x12a4 <delayMicroseconds.clone.0>
    1360:	08 95       	ret

00001362 <_ZN12OrangutanLCD4sendEhhh>:
    1362:	a2 e0       	ldi	r26, 0x02	; 2
    1364:	b0 e0       	ldi	r27, 0x00	; 0
    1366:	e7 eb       	ldi	r30, 0xB7	; 183
    1368:	f9 e0       	ldi	r31, 0x09	; 9
    136a:	0c 94 81 13 	jmp	0x2702	; 0x2702 <__prologue_saves__+0x16>
    136e:	18 2f       	mov	r17, r24
    1370:	4a 83       	std	Y+2, r20	; 0x02
    1372:	69 83       	std	Y+1, r22	; 0x01
    1374:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <_ZN12OrangutanLCD4initEv>
    1378:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <_ZN12OrangutanLCD8busyWaitEv>
    137c:	f4 b0       	in	r15, 0x04	; 4
    137e:	05 b1       	in	r16, 0x05	; 5
    1380:	da b0       	in	r13, 0x0a	; 10
    1382:	eb b0       	in	r14, 0x0b	; 11
    1384:	28 98       	cbi	0x05, 0	; 5
    1386:	69 81       	ldd	r22, Y+1	; 0x01
    1388:	4a 81       	ldd	r20, Y+2	; 0x02
    138a:	66 23       	and	r22, r22
    138c:	11 f0       	breq	.+4      	; 0x1392 <_ZN12OrangutanLCD4sendEhhh+0x30>
    138e:	5a 9a       	sbi	0x0b, 2	; 11
    1390:	01 c0       	rjmp	.+2      	; 0x1394 <_ZN12OrangutanLCD4sendEhhh+0x32>
    1392:	5a 98       	cbi	0x0b, 2	; 11
    1394:	84 b1       	in	r24, 0x04	; 4
    1396:	82 63       	ori	r24, 0x32	; 50
    1398:	84 b9       	out	0x04, r24	; 4
    139a:	57 9a       	sbi	0x0a, 7	; 10
    139c:	41 30       	cpi	r20, 0x01	; 1
    139e:	29 f0       	breq	.+10     	; 0x13aa <_ZN12OrangutanLCD4sendEhhh+0x48>
    13a0:	81 2f       	mov	r24, r17
    13a2:	82 95       	swap	r24
    13a4:	8f 70       	andi	r24, 0x0F	; 15
    13a6:	0e 94 8c 09 	call	0x1318	; 0x1318 <_ZN12OrangutanLCD8sendDataEh>
    13aa:	81 2f       	mov	r24, r17
    13ac:	8f 70       	andi	r24, 0x0F	; 15
    13ae:	0e 94 8c 09 	call	0x1318	; 0x1318 <_ZN12OrangutanLCD8sendDataEh>
    13b2:	da b8       	out	0x0a, r13	; 10
    13b4:	eb b8       	out	0x0b, r14	; 11
    13b6:	f4 b8       	out	0x04, r15	; 4
    13b8:	05 b9       	out	0x05, r16	; 5
    13ba:	22 96       	adiw	r28, 0x02	; 2
    13bc:	e7 e0       	ldi	r30, 0x07	; 7
    13be:	0c 94 9d 13 	jmp	0x273a	; 0x273a <__epilogue_restores__+0x16>

000013c2 <_ZN12OrangutanLCD8send_cmdEh>:
    13c2:	60 e0       	ldi	r22, 0x00	; 0
    13c4:	42 e0       	ldi	r20, 0x02	; 2
    13c6:	0e 94 b1 09 	call	0x1362	; 0x1362 <_ZN12OrangutanLCD4sendEhhh>
    13ca:	08 95       	ret

000013cc <_ZN12OrangutanLCD9send_dataEh>:
    13cc:	61 e0       	ldi	r22, 0x01	; 1
    13ce:	42 e0       	ldi	r20, 0x02	; 2
    13d0:	0e 94 b1 09 	call	0x1362	; 0x1362 <_ZN12OrangutanLCD4sendEhhh>
    13d4:	08 95       	ret

000013d6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    13d6:	ef 92       	push	r14
    13d8:	ff 92       	push	r15
    13da:	1f 93       	push	r17
    13dc:	df 93       	push	r29
    13de:	cf 93       	push	r28
    13e0:	0f 92       	push	r0
    13e2:	cd b7       	in	r28, 0x3d	; 61
    13e4:	de b7       	in	r29, 0x3e	; 62
    13e6:	66 0f       	add	r22, r22
    13e8:	66 0f       	add	r22, r22
    13ea:	66 0f       	add	r22, r22
    13ec:	48 2f       	mov	r20, r24
    13ee:	59 2f       	mov	r21, r25
    13f0:	7a 01       	movw	r14, r20
    13f2:	10 e0       	ldi	r17, 0x00	; 0
    13f4:	81 2f       	mov	r24, r17
    13f6:	86 0f       	add	r24, r22
    13f8:	80 64       	ori	r24, 0x40	; 64
    13fa:	69 83       	std	Y+1, r22	; 0x01
    13fc:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    1400:	f7 01       	movw	r30, r14
    1402:	84 91       	lpm	r24, Z
    1404:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_ZN12OrangutanLCD9send_dataEh>
    1408:	1f 5f       	subi	r17, 0xFF	; 255
    140a:	08 94       	sec
    140c:	e1 1c       	adc	r14, r1
    140e:	f1 1c       	adc	r15, r1
    1410:	69 81       	ldd	r22, Y+1	; 0x01
    1412:	18 30       	cpi	r17, 0x08	; 8
    1414:	79 f7       	brne	.-34     	; 0x13f4 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x1e>
    1416:	0f 90       	pop	r0
    1418:	cf 91       	pop	r28
    141a:	df 91       	pop	r29
    141c:	1f 91       	pop	r17
    141e:	ff 90       	pop	r15
    1420:	ef 90       	pop	r14
    1422:	08 95       	ret

00001424 <lcd_load_custom_character>:
    1424:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    1428:	08 95       	ret

0000142a <print_character>:
    142a:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_ZN12OrangutanLCD9send_dataEh>
    142e:	08 95       	ret

00001430 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1430:	60 e0       	ldi	r22, 0x00	; 0
    1432:	41 e0       	ldi	r20, 0x01	; 1
    1434:	0e 94 b1 09 	call	0x1362	; 0x1362 <_ZN12OrangutanLCD4sendEhhh>
    1438:	08 95       	ret

0000143a <_ZN12OrangutanLCD5init2Ev>:
    143a:	80 e1       	ldi	r24, 0x10	; 16
    143c:	97 e2       	ldi	r25, 0x27	; 39
    143e:	a0 e0       	ldi	r26, 0x00	; 0
    1440:	b0 e0       	ldi	r27, 0x00	; 0
    1442:	80 93 49 01 	sts	0x0149, r24
    1446:	90 93 4a 01 	sts	0x014A, r25
    144a:	a0 93 4b 01 	sts	0x014B, r26
    144e:	b0 93 4c 01 	sts	0x014C, r27
    1452:	52 9a       	sbi	0x0a, 2	; 10
    1454:	20 9a       	sbi	0x04, 0	; 4
    1456:	54 9a       	sbi	0x0a, 4	; 10
    1458:	8e e1       	ldi	r24, 0x1E	; 30
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    1460:	83 e0       	ldi	r24, 0x03	; 3
    1462:	0e 94 18 0a 	call	0x1430	; 0x1430 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1466:	86 e0       	ldi	r24, 0x06	; 6
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    146e:	83 e0       	ldi	r24, 0x03	; 3
    1470:	0e 94 18 0a 	call	0x1430	; 0x1430 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1474:	82 e0       	ldi	r24, 0x02	; 2
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    147c:	83 e0       	ldi	r24, 0x03	; 3
    147e:	0e 94 18 0a 	call	0x1430	; 0x1430 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1482:	82 e0       	ldi	r24, 0x02	; 2
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    148a:	82 e0       	ldi	r24, 0x02	; 2
    148c:	0e 94 18 0a 	call	0x1430	; 0x1430 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1490:	82 e0       	ldi	r24, 0x02	; 2
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    1498:	88 e2       	ldi	r24, 0x28	; 40
    149a:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    149e:	88 e0       	ldi	r24, 0x08	; 8
    14a0:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    14a4:	81 e0       	ldi	r24, 0x01	; 1
    14a6:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    14aa:	86 e0       	ldi	r24, 0x06	; 6
    14ac:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    14b0:	8c e0       	ldi	r24, 0x0C	; 12
    14b2:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    14b6:	08 95       	ret

000014b8 <_ZN12OrangutanLCD4initEv>:
    14b8:	80 91 4d 01 	lds	r24, 0x014D
    14bc:	88 23       	and	r24, r24
    14be:	29 f4       	brne	.+10     	; 0x14ca <_ZN12OrangutanLCD4initEv+0x12>
    14c0:	81 e0       	ldi	r24, 0x01	; 1
    14c2:	80 93 4d 01 	sts	0x014D, r24
    14c6:	0e 94 1d 0a 	call	0x143a	; 0x143a <_ZN12OrangutanLCD5init2Ev>
    14ca:	08 95       	ret

000014cc <_ZN12OrangutanLCD5clearEv>:
    14cc:	81 e0       	ldi	r24, 0x01	; 1
    14ce:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    14d2:	80 91 45 01 	lds	r24, 0x0145
    14d6:	90 91 46 01 	lds	r25, 0x0146
    14da:	00 97       	sbiw	r24, 0x00	; 0
    14dc:	11 f1       	breq	.+68     	; 0x1522 <_ZN12OrangutanLCD5clearEv+0x56>
    14de:	a0 e0       	ldi	r26, 0x00	; 0
    14e0:	b0 e2       	ldi	r27, 0x20	; 32
    14e2:	08 c0       	rjmp	.+16     	; 0x14f4 <_ZN12OrangutanLCD5clearEv+0x28>
    14e4:	e0 91 45 01 	lds	r30, 0x0145
    14e8:	f0 91 46 01 	lds	r31, 0x0146
    14ec:	e2 0f       	add	r30, r18
    14ee:	f3 1f       	adc	r31, r19
    14f0:	b0 83       	st	Z, r27
    14f2:	af 5f       	subi	r26, 0xFF	; 255
    14f4:	2a 2f       	mov	r18, r26
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	80 91 22 01 	lds	r24, 0x0122
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	01 97       	sbiw	r24, 0x01	; 1
    1500:	60 91 23 01 	lds	r22, 0x0123
    1504:	70 e0       	ldi	r23, 0x00	; 0
    1506:	86 9f       	mul	r24, r22
    1508:	a0 01       	movw	r20, r0
    150a:	87 9f       	mul	r24, r23
    150c:	50 0d       	add	r21, r0
    150e:	96 9f       	mul	r25, r22
    1510:	50 0d       	add	r21, r0
    1512:	11 24       	eor	r1, r1
    1514:	24 17       	cp	r18, r20
    1516:	35 07       	cpc	r19, r21
    1518:	2c f3       	brlt	.-54     	; 0x14e4 <_ZN12OrangutanLCD5clearEv+0x18>
    151a:	10 92 48 01 	sts	0x0148, r1
    151e:	10 92 47 01 	sts	0x0147, r1
    1522:	08 95       	ret

00001524 <clear>:
    1524:	0e 94 66 0a 	call	0x14cc	; 0x14cc <_ZN12OrangutanLCD5clearEv>
    1528:	08 95       	ret

0000152a <_ZN12OrangutanLCD5printEPKc>:
    152a:	ef 92       	push	r14
    152c:	ff 92       	push	r15
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	e8 2e       	mov	r14, r24
    1534:	e7 01       	movw	r28, r14
    1536:	7e 01       	movw	r14, r28
    1538:	f9 2e       	mov	r15, r25
    153a:	e7 01       	movw	r28, r14
    153c:	02 c0       	rjmp	.+4      	; 0x1542 <_ZN12OrangutanLCD5printEPKc+0x18>
    153e:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_ZN12OrangutanLCD9send_dataEh>
    1542:	89 91       	ld	r24, Y+
    1544:	88 23       	and	r24, r24
    1546:	d9 f7       	brne	.-10     	; 0x153e <_ZN12OrangutanLCD5printEPKc+0x14>
    1548:	df 91       	pop	r29
    154a:	cf 91       	pop	r28
    154c:	ff 90       	pop	r15
    154e:	ef 90       	pop	r14
    1550:	08 95       	ret

00001552 <print>:
    1552:	0e 94 95 0a 	call	0x152a	; 0x152a <_ZN12OrangutanLCD5printEPKc>
    1556:	08 95       	ret

00001558 <_ZN12OrangutanLCD5printEm>:
    1558:	aa e0       	ldi	r26, 0x0A	; 10
    155a:	b0 e0       	ldi	r27, 0x00	; 0
    155c:	e2 eb       	ldi	r30, 0xB2	; 178
    155e:	fa e0       	ldi	r31, 0x0A	; 10
    1560:	0c 94 7e 13 	jmp	0x26fc	; 0x26fc <__prologue_saves__+0x10>
    1564:	9b 01       	movw	r18, r22
    1566:	ac 01       	movw	r20, r24
    1568:	1a e0       	ldi	r17, 0x0A	; 10
    156a:	ea e0       	ldi	r30, 0x0A	; 10
    156c:	ce 2e       	mov	r12, r30
    156e:	d1 2c       	mov	r13, r1
    1570:	e1 2c       	mov	r14, r1
    1572:	f1 2c       	mov	r15, r1
    1574:	5e 01       	movw	r10, r28
    1576:	08 94       	sec
    1578:	a1 1c       	adc	r10, r1
    157a:	b1 1c       	adc	r11, r1
    157c:	02 2f       	mov	r16, r18
    157e:	ca 01       	movw	r24, r20
    1580:	b9 01       	movw	r22, r18
    1582:	a7 01       	movw	r20, r14
    1584:	96 01       	movw	r18, r12
    1586:	0e 94 2a 13 	call	0x2654	; 0x2654 <__udivmodsi4>
    158a:	11 50       	subi	r17, 0x01	; 1
    158c:	f5 01       	movw	r30, r10
    158e:	e1 0f       	add	r30, r17
    1590:	f1 1d       	adc	r31, r1
    1592:	00 5d       	subi	r16, 0xD0	; 208
    1594:	92 2f       	mov	r25, r18
    1596:	99 0f       	add	r25, r25
    1598:	89 2f       	mov	r24, r25
    159a:	88 0f       	add	r24, r24
    159c:	88 0f       	add	r24, r24
    159e:	89 0f       	add	r24, r25
    15a0:	08 1b       	sub	r16, r24
    15a2:	00 83       	st	Z, r16
    15a4:	21 15       	cp	r18, r1
    15a6:	31 05       	cpc	r19, r1
    15a8:	41 05       	cpc	r20, r1
    15aa:	51 05       	cpc	r21, r1
    15ac:	39 f7       	brne	.-50     	; 0x157c <_ZN12OrangutanLCD5printEm+0x24>
    15ae:	08 c0       	rjmp	.+16     	; 0x15c0 <_ZN12OrangutanLCD5printEm+0x68>
    15b0:	f6 01       	movw	r30, r12
    15b2:	e1 0f       	add	r30, r17
    15b4:	f1 1d       	adc	r31, r1
    15b6:	80 81       	ld	r24, Z
    15b8:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_ZN12OrangutanLCD9send_dataEh>
    15bc:	1f 5f       	subi	r17, 0xFF	; 255
    15be:	04 c0       	rjmp	.+8      	; 0x15c8 <_ZN12OrangutanLCD5printEm+0x70>
    15c0:	6e 01       	movw	r12, r28
    15c2:	08 94       	sec
    15c4:	c1 1c       	adc	r12, r1
    15c6:	d1 1c       	adc	r13, r1
    15c8:	1a 30       	cpi	r17, 0x0A	; 10
    15ca:	90 f3       	brcs	.-28     	; 0x15b0 <_ZN12OrangutanLCD5printEm+0x58>
    15cc:	2a 96       	adiw	r28, 0x0a	; 10
    15ce:	ea e0       	ldi	r30, 0x0A	; 10
    15d0:	0c 94 9a 13 	jmp	0x2734	; 0x2734 <__epilogue_restores__+0x10>

000015d4 <_ZN12OrangutanLCD5printEl>:
    15d4:	ef 92       	push	r14
    15d6:	ff 92       	push	r15
    15d8:	0f 93       	push	r16
    15da:	1f 93       	push	r17
    15dc:	7b 01       	movw	r14, r22
    15de:	8c 01       	movw	r16, r24
    15e0:	97 ff       	sbrs	r25, 7
    15e2:	0b c0       	rjmp	.+22     	; 0x15fa <_ZN12OrangutanLCD5printEl+0x26>
    15e4:	10 95       	com	r17
    15e6:	00 95       	com	r16
    15e8:	f0 94       	com	r15
    15ea:	e0 94       	com	r14
    15ec:	e1 1c       	adc	r14, r1
    15ee:	f1 1c       	adc	r15, r1
    15f0:	01 1d       	adc	r16, r1
    15f2:	11 1d       	adc	r17, r1
    15f4:	8d e2       	ldi	r24, 0x2D	; 45
    15f6:	0e 94 e6 09 	call	0x13cc	; 0x13cc <_ZN12OrangutanLCD9send_dataEh>
    15fa:	c8 01       	movw	r24, r16
    15fc:	b7 01       	movw	r22, r14
    15fe:	0e 94 ac 0a 	call	0x1558	; 0x1558 <_ZN12OrangutanLCD5printEm>
    1602:	1f 91       	pop	r17
    1604:	0f 91       	pop	r16
    1606:	ff 90       	pop	r15
    1608:	ef 90       	pop	r14
    160a:	08 95       	ret

0000160c <print_long>:
    160c:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <_ZN12OrangutanLCD5printEl>
    1610:	08 95       	ret

00001612 <_ZN12OrangutanLCD6gotoXYEhh>:
    1612:	a5 e0       	ldi	r26, 0x05	; 5
    1614:	b0 e0       	ldi	r27, 0x00	; 0
    1616:	ef e0       	ldi	r30, 0x0F	; 15
    1618:	fb e0       	ldi	r31, 0x0B	; 11
    161a:	0c 94 85 13 	jmp	0x270a	; 0x270a <__prologue_saves__+0x1e>
    161e:	18 2f       	mov	r17, r24
    1620:	80 e8       	ldi	r24, 0x80	; 128
    1622:	89 83       	std	Y+1, r24	; 0x01
    1624:	80 ec       	ldi	r24, 0xC0	; 192
    1626:	8a 83       	std	Y+2, r24	; 0x02
    1628:	84 e9       	ldi	r24, 0x94	; 148
    162a:	8b 83       	std	Y+3, r24	; 0x03
    162c:	84 ed       	ldi	r24, 0xD4	; 212
    162e:	8c 83       	std	Y+4, r24	; 0x04
    1630:	fe 01       	movw	r30, r28
    1632:	e6 0f       	add	r30, r22
    1634:	f1 1d       	adc	r31, r1
    1636:	81 81       	ldd	r24, Z+1	; 0x01
    1638:	81 0f       	add	r24, r17
    163a:	6d 83       	std	Y+5, r22	; 0x05
    163c:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <_ZN12OrangutanLCD8send_cmdEh>
    1640:	10 93 48 01 	sts	0x0148, r17
    1644:	6d 81       	ldd	r22, Y+5	; 0x05
    1646:	60 93 47 01 	sts	0x0147, r22
    164a:	25 96       	adiw	r28, 0x05	; 5
    164c:	e3 e0       	ldi	r30, 0x03	; 3
    164e:	0c 94 a1 13 	jmp	0x2742	; 0x2742 <__epilogue_restores__+0x1e>

00001652 <lcd_goto_xy>:
    1652:	0e 94 09 0b 	call	0x1612	; 0x1612 <_ZN12OrangutanLCD6gotoXYEhh>
    1656:	08 95       	ret

00001658 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1658:	fc 01       	movw	r30, r24
    165a:	11 82       	std	Z+1, r1	; 0x01
    165c:	10 82       	st	Z, r1
    165e:	13 82       	std	Z+3, r1	; 0x03
    1660:	12 82       	std	Z+2, r1	; 0x02
    1662:	15 82       	std	Z+5, r1	; 0x05
    1664:	14 82       	std	Z+4, r1	; 0x04
    1666:	16 82       	std	Z+6, r1	; 0x06
    1668:	68 30       	cpi	r22, 0x08	; 8
    166a:	68 f4       	brcc	.+26     	; 0x1686 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    166c:	89 e2       	ldi	r24, 0x29	; 41
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	91 83       	std	Z+1, r25	; 0x01
    1672:	80 83       	st	Z, r24
    1674:	8b e2       	ldi	r24, 0x2B	; 43
    1676:	90 e0       	ldi	r25, 0x00	; 0
    1678:	93 83       	std	Z+3, r25	; 0x03
    167a:	82 83       	std	Z+2, r24	; 0x02
    167c:	8a e2       	ldi	r24, 0x2A	; 42
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	95 83       	std	Z+5, r25	; 0x05
    1682:	84 83       	std	Z+4, r24	; 0x04
    1684:	11 c0       	rjmp	.+34     	; 0x16a8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
    1686:	6e 30       	cpi	r22, 0x0E	; 14
    1688:	c0 f4       	brcc	.+48     	; 0x16ba <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
    168a:	83 e2       	ldi	r24, 0x23	; 35
    168c:	90 e0       	ldi	r25, 0x00	; 0
    168e:	91 83       	std	Z+1, r25	; 0x01
    1690:	80 83       	st	Z, r24
    1692:	85 e2       	ldi	r24, 0x25	; 37
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	93 83       	std	Z+3, r25	; 0x03
    1698:	82 83       	std	Z+2, r24	; 0x02
    169a:	84 e2       	ldi	r24, 0x24	; 36
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	95 83       	std	Z+5, r25	; 0x05
    16a0:	84 83       	std	Z+4, r24	; 0x04
    16a2:	70 e0       	ldi	r23, 0x00	; 0
    16a4:	68 50       	subi	r22, 0x08	; 8
    16a6:	70 40       	sbci	r23, 0x00	; 0
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	02 c0       	rjmp	.+4      	; 0x16b2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
    16ae:	88 0f       	add	r24, r24
    16b0:	99 1f       	adc	r25, r25
    16b2:	6a 95       	dec	r22
    16b4:	e2 f7       	brpl	.-8      	; 0x16ae <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
    16b6:	86 83       	std	Z+6, r24	; 0x06
    16b8:	08 95       	ret
    16ba:	65 31       	cpi	r22, 0x15	; 21
    16bc:	b8 f4       	brcc	.+46     	; 0x16ec <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
    16be:	86 e2       	ldi	r24, 0x26	; 38
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	91 83       	std	Z+1, r25	; 0x01
    16c4:	80 83       	st	Z, r24
    16c6:	88 e2       	ldi	r24, 0x28	; 40
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	93 83       	std	Z+3, r25	; 0x03
    16cc:	82 83       	std	Z+2, r24	; 0x02
    16ce:	87 e2       	ldi	r24, 0x27	; 39
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	95 83       	std	Z+5, r25	; 0x05
    16d4:	84 83       	std	Z+4, r24	; 0x04
    16d6:	70 e0       	ldi	r23, 0x00	; 0
    16d8:	6e 50       	subi	r22, 0x0E	; 14
    16da:	70 40       	sbci	r23, 0x00	; 0
    16dc:	81 e0       	ldi	r24, 0x01	; 1
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	02 c0       	rjmp	.+4      	; 0x16e6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
    16e2:	88 0f       	add	r24, r24
    16e4:	99 1f       	adc	r25, r25
    16e6:	6a 95       	dec	r22
    16e8:	e2 f7       	brpl	.-8      	; 0x16e2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
    16ea:	86 83       	std	Z+6, r24	; 0x06
    16ec:	08 95       	ret

000016ee <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
    16ee:	fc 01       	movw	r30, r24
    16f0:	a4 81       	ldd	r26, Z+4	; 0x04
    16f2:	b5 81       	ldd	r27, Z+5	; 0x05
    16f4:	86 81       	ldd	r24, Z+6	; 0x06
    16f6:	66 23       	and	r22, r22
    16f8:	21 f0       	breq	.+8      	; 0x1702 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
    16fa:	9c 91       	ld	r25, X
    16fc:	98 2b       	or	r25, r24
    16fe:	9c 93       	st	X, r25
    1700:	08 95       	ret
    1702:	9c 91       	ld	r25, X
    1704:	80 95       	com	r24
    1706:	89 23       	and	r24, r25
    1708:	8c 93       	st	X, r24
    170a:	08 95       	ret

0000170c <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
    170c:	fc 01       	movw	r30, r24
    170e:	6f 3f       	cpi	r22, 0xFF	; 255
    1710:	31 f4       	brne	.+12     	; 0x171e <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
    1712:	a2 81       	ldd	r26, Z+2	; 0x02
    1714:	b3 81       	ldd	r27, Z+3	; 0x03
    1716:	8c 91       	ld	r24, X
    1718:	96 81       	ldd	r25, Z+6	; 0x06
    171a:	89 27       	eor	r24, r25
    171c:	0c c0       	rjmp	.+24     	; 0x1736 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
    171e:	a2 81       	ldd	r26, Z+2	; 0x02
    1720:	b3 81       	ldd	r27, Z+3	; 0x03
    1722:	86 81       	ldd	r24, Z+6	; 0x06
    1724:	66 23       	and	r22, r22
    1726:	21 f0       	breq	.+8      	; 0x1730 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
    1728:	9c 91       	ld	r25, X
    172a:	98 2b       	or	r25, r24
    172c:	9c 93       	st	X, r25
    172e:	08 95       	ret
    1730:	9c 91       	ld	r25, X
    1732:	80 95       	com	r24
    1734:	89 23       	and	r24, r25
    1736:	8c 93       	st	X, r24
    1738:	08 95       	ret

0000173a <_ZN16OrangutanDigital9setOutputEhh>:
    173a:	a7 e0       	ldi	r26, 0x07	; 7
    173c:	b0 e0       	ldi	r27, 0x00	; 0
    173e:	e3 ea       	ldi	r30, 0xA3	; 163
    1740:	fb e0       	ldi	r31, 0x0B	; 11
    1742:	0c 94 83 13 	jmp	0x2706	; 0x2706 <__prologue_saves__+0x1a>
    1746:	28 2f       	mov	r18, r24
    1748:	f6 2e       	mov	r15, r22
    174a:	8e 01       	movw	r16, r28
    174c:	0f 5f       	subi	r16, 0xFF	; 255
    174e:	1f 4f       	sbci	r17, 0xFF	; 255
    1750:	c8 01       	movw	r24, r16
    1752:	62 2f       	mov	r22, r18
    1754:	0e 94 2c 0b 	call	0x1658	; 0x1658 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1758:	c8 01       	movw	r24, r16
    175a:	6f 2d       	mov	r22, r15
    175c:	0e 94 86 0b 	call	0x170c	; 0x170c <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
    1760:	c8 01       	movw	r24, r16
    1762:	61 e0       	ldi	r22, 0x01	; 1
    1764:	0e 94 77 0b 	call	0x16ee	; 0x16ee <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
    1768:	27 96       	adiw	r28, 0x07	; 7
    176a:	e5 e0       	ldi	r30, 0x05	; 5
    176c:	0c 94 9f 13 	jmp	0x273e	; 0x273e <__epilogue_restores__+0x1a>

00001770 <_ZN15OrangutanMotors5init2Ev>:
    1770:	e0 eb       	ldi	r30, 0xB0	; 176
    1772:	f0 e0       	ldi	r31, 0x00	; 0
    1774:	83 ef       	ldi	r24, 0xF3	; 243
    1776:	80 83       	st	Z, r24
    1778:	80 81       	ld	r24, Z
    177a:	84 bd       	out	0x24, r24	; 36
    177c:	e1 eb       	ldi	r30, 0xB1	; 177
    177e:	f0 e0       	ldi	r31, 0x00	; 0
    1780:	82 e0       	ldi	r24, 0x02	; 2
    1782:	80 83       	st	Z, r24
    1784:	80 81       	ld	r24, Z
    1786:	85 bd       	out	0x25, r24	; 37
    1788:	e4 eb       	ldi	r30, 0xB4	; 180
    178a:	f0 e0       	ldi	r31, 0x00	; 0
    178c:	10 82       	st	Z, r1
    178e:	80 81       	ld	r24, Z
    1790:	e3 eb       	ldi	r30, 0xB3	; 179
    1792:	f0 e0       	ldi	r31, 0x00	; 0
    1794:	80 83       	st	Z, r24
    1796:	80 81       	ld	r24, Z
    1798:	88 bd       	out	0x28, r24	; 40
    179a:	88 b5       	in	r24, 0x28	; 40
    179c:	87 bd       	out	0x27, r24	; 39
    179e:	86 e0       	ldi	r24, 0x06	; 6
    17a0:	60 e0       	ldi	r22, 0x00	; 0
    17a2:	0e 94 9d 0b 	call	0x173a	; 0x173a <_ZN16OrangutanDigital9setOutputEhh>
    17a6:	85 e0       	ldi	r24, 0x05	; 5
    17a8:	60 e0       	ldi	r22, 0x00	; 0
    17aa:	0e 94 9d 0b 	call	0x173a	; 0x173a <_ZN16OrangutanDigital9setOutputEhh>
    17ae:	8b e0       	ldi	r24, 0x0B	; 11
    17b0:	60 e0       	ldi	r22, 0x00	; 0
    17b2:	0e 94 9d 0b 	call	0x173a	; 0x173a <_ZN16OrangutanDigital9setOutputEhh>
    17b6:	83 e0       	ldi	r24, 0x03	; 3
    17b8:	60 e0       	ldi	r22, 0x00	; 0
    17ba:	0e 94 9d 0b 	call	0x173a	; 0x173a <_ZN16OrangutanDigital9setOutputEhh>
    17be:	08 95       	ret

000017c0 <_ZN15OrangutanMotors4initEv>:
    17c0:	80 91 4e 01 	lds	r24, 0x014E
    17c4:	88 23       	and	r24, r24
    17c6:	29 f4       	brne	.+10     	; 0x17d2 <_ZN15OrangutanMotors4initEv+0x12>
    17c8:	81 e0       	ldi	r24, 0x01	; 1
    17ca:	80 93 4e 01 	sts	0x014E, r24
    17ce:	0e 94 b8 0b 	call	0x1770	; 0x1770 <_ZN15OrangutanMotors5init2Ev>
    17d2:	08 95       	ret

000017d4 <_ZN15OrangutanMotors10setM1SpeedEi>:
    17d4:	cf 93       	push	r28
    17d6:	df 93       	push	r29
    17d8:	ec 01       	movw	r28, r24
    17da:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <_ZN15OrangutanMotors4initEv>
    17de:	d7 ff       	sbrs	r29, 7
    17e0:	05 c0       	rjmp	.+10     	; 0x17ec <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    17e2:	d0 95       	com	r29
    17e4:	c1 95       	neg	r28
    17e6:	df 4f       	sbci	r29, 0xFF	; 255
    17e8:	81 e0       	ldi	r24, 0x01	; 1
    17ea:	01 c0       	rjmp	.+2      	; 0x17ee <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    17ec:	80 e0       	ldi	r24, 0x00	; 0
    17ee:	cf 3f       	cpi	r28, 0xFF	; 255
    17f0:	d1 05       	cpc	r29, r1
    17f2:	19 f0       	breq	.+6      	; 0x17fa <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    17f4:	14 f0       	brlt	.+4      	; 0x17fa <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    17f6:	cf ef       	ldi	r28, 0xFF	; 255
    17f8:	d0 e0       	ldi	r29, 0x00	; 0
    17fa:	88 23       	and	r24, r24
    17fc:	19 f0       	breq	.+6      	; 0x1804 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    17fe:	18 bc       	out	0x28, r1	; 40
    1800:	c7 bd       	out	0x27, r28	; 39
    1802:	02 c0       	rjmp	.+4      	; 0x1808 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1804:	c8 bd       	out	0x28, r28	; 40
    1806:	17 bc       	out	0x27, r1	; 39
    1808:	df 91       	pop	r29
    180a:	cf 91       	pop	r28
    180c:	08 95       	ret

0000180e <_ZN15OrangutanMotors10setM2SpeedEi>:
    180e:	cf 93       	push	r28
    1810:	df 93       	push	r29
    1812:	ec 01       	movw	r28, r24
    1814:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <_ZN15OrangutanMotors4initEv>
    1818:	d7 ff       	sbrs	r29, 7
    181a:	05 c0       	rjmp	.+10     	; 0x1826 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    181c:	d0 95       	com	r29
    181e:	c1 95       	neg	r28
    1820:	df 4f       	sbci	r29, 0xFF	; 255
    1822:	81 e0       	ldi	r24, 0x01	; 1
    1824:	01 c0       	rjmp	.+2      	; 0x1828 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1826:	80 e0       	ldi	r24, 0x00	; 0
    1828:	cf 3f       	cpi	r28, 0xFF	; 255
    182a:	d1 05       	cpc	r29, r1
    182c:	19 f0       	breq	.+6      	; 0x1834 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    182e:	14 f0       	brlt	.+4      	; 0x1834 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1830:	cf ef       	ldi	r28, 0xFF	; 255
    1832:	d0 e0       	ldi	r29, 0x00	; 0
    1834:	88 23       	and	r24, r24
    1836:	29 f0       	breq	.+10     	; 0x1842 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1838:	10 92 b4 00 	sts	0x00B4, r1
    183c:	c0 93 b3 00 	sts	0x00B3, r28
    1840:	04 c0       	rjmp	.+8      	; 0x184a <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1842:	c0 93 b4 00 	sts	0x00B4, r28
    1846:	10 92 b3 00 	sts	0x00B3, r1
    184a:	df 91       	pop	r29
    184c:	cf 91       	pop	r28
    184e:	08 95       	ret

00001850 <_ZN15OrangutanMotors9setSpeedsEii>:
    1850:	cf 93       	push	r28
    1852:	df 93       	push	r29
    1854:	eb 01       	movw	r28, r22
    1856:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <_ZN15OrangutanMotors10setM1SpeedEi>
    185a:	ce 01       	movw	r24, r28
    185c:	0e 94 07 0c 	call	0x180e	; 0x180e <_ZN15OrangutanMotors10setM2SpeedEi>
    1860:	df 91       	pop	r29
    1862:	cf 91       	pop	r28
    1864:	08 95       	ret

00001866 <set_motors>:
    1866:	0e 94 28 0c 	call	0x1850	; 0x1850 <_ZN15OrangutanMotors9setSpeedsEii>
    186a:	08 95       	ret

0000186c <_ZN20OrangutanPushbuttons5init2Ev>:
    186c:	84 b1       	in	r24, 0x04	; 4
    186e:	8d 7c       	andi	r24, 0xCD	; 205
    1870:	84 b9       	out	0x04, r24	; 4
    1872:	85 b1       	in	r24, 0x05	; 5
    1874:	82 63       	ori	r24, 0x32	; 50
    1876:	85 b9       	out	0x05, r24	; 5
    1878:	85 e0       	ldi	r24, 0x05	; 5
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	6f 93       	push	r22
    187e:	64 e0       	ldi	r22, 0x04	; 4
    1880:	6a 95       	dec	r22
    1882:	f1 f7       	brne	.-4      	; 0x1880 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1884:	6f 91       	pop	r22
    1886:	01 97       	sbiw	r24, 0x01	; 1
    1888:	c9 f7       	brne	.-14     	; 0x187c <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    188a:	08 95       	ret

0000188c <_ZN20OrangutanPushbuttons4initEv>:
    188c:	80 91 4f 01 	lds	r24, 0x014F
    1890:	88 23       	and	r24, r24
    1892:	29 f4       	brne	.+10     	; 0x189e <_ZN20OrangutanPushbuttons4initEv+0x12>
    1894:	81 e0       	ldi	r24, 0x01	; 1
    1896:	80 93 4f 01 	sts	0x014F, r24
    189a:	0e 94 36 0c 	call	0x186c	; 0x186c <_ZN20OrangutanPushbuttons5init2Ev>
    189e:	08 95       	ret

000018a0 <_ZN20OrangutanPushbuttons12waitForPressEh>:
    18a0:	1f 93       	push	r17
    18a2:	cf 93       	push	r28
    18a4:	df 93       	push	r29
    18a6:	18 2f       	mov	r17, r24
    18a8:	0e 94 46 0c 	call	0x188c	; 0x188c <_ZN20OrangutanPushbuttons4initEv>
    18ac:	c1 2f       	mov	r28, r17
    18ae:	d0 e0       	ldi	r29, 0x00	; 0
    18b0:	23 b1       	in	r18, 0x03	; 3
    18b2:	30 e0       	ldi	r19, 0x00	; 0
    18b4:	20 95       	com	r18
    18b6:	30 95       	com	r19
    18b8:	2c 23       	and	r18, r28
    18ba:	3d 23       	and	r19, r29
    18bc:	21 15       	cp	r18, r1
    18be:	31 05       	cpc	r19, r1
    18c0:	b9 f3       	breq	.-18     	; 0x18b0 <_ZN20OrangutanPushbuttons12waitForPressEh+0x10>
    18c2:	8a e0       	ldi	r24, 0x0A	; 10
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    18ca:	23 b1       	in	r18, 0x03	; 3
    18cc:	30 e0       	ldi	r19, 0x00	; 0
    18ce:	20 95       	com	r18
    18d0:	30 95       	com	r19
    18d2:	2c 23       	and	r18, r28
    18d4:	3d 23       	and	r19, r29
    18d6:	21 15       	cp	r18, r1
    18d8:	31 05       	cpc	r19, r1
    18da:	51 f3       	breq	.-44     	; 0x18b0 <_ZN20OrangutanPushbuttons12waitForPressEh+0x10>
    18dc:	83 b1       	in	r24, 0x03	; 3
    18de:	80 95       	com	r24
    18e0:	81 23       	and	r24, r17
    18e2:	df 91       	pop	r29
    18e4:	cf 91       	pop	r28
    18e6:	1f 91       	pop	r17
    18e8:	08 95       	ret

000018ea <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    18ea:	1f 93       	push	r17
    18ec:	18 2f       	mov	r17, r24
    18ee:	0e 94 46 0c 	call	0x188c	; 0x188c <_ZN20OrangutanPushbuttons4initEv>
    18f2:	83 b1       	in	r24, 0x03	; 3
    18f4:	81 23       	and	r24, r17
    18f6:	e9 f3       	breq	.-6      	; 0x18f2 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    18f8:	8a e0       	ldi	r24, 0x0A	; 10
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <delay_ms>
    1900:	83 b1       	in	r24, 0x03	; 3
    1902:	81 23       	and	r24, r17
    1904:	b1 f3       	breq	.-20     	; 0x18f2 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1906:	83 b1       	in	r24, 0x03	; 3
    1908:	81 23       	and	r24, r17
    190a:	1f 91       	pop	r17
    190c:	08 95       	ret

0000190e <_ZN20OrangutanPushbuttons13waitForButtonEh>:
    190e:	1f 93       	push	r17
    1910:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <_ZN20OrangutanPushbuttons12waitForPressEh>
    1914:	18 2f       	mov	r17, r24
    1916:	0e 94 75 0c 	call	0x18ea	; 0x18ea <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    191a:	81 2f       	mov	r24, r17
    191c:	1f 91       	pop	r17
    191e:	08 95       	ret

00001920 <wait_for_button>:
    1920:	0e 94 87 0c 	call	0x190e	; 0x190e <_ZN20OrangutanPushbuttons13waitForButtonEh>
    1924:	08 95       	ret

00001926 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1926:	a1 e0       	ldi	r26, 0x01	; 1
    1928:	b0 e0       	ldi	r27, 0x00	; 0
    192a:	e9 e9       	ldi	r30, 0x99	; 153
    192c:	fc e0       	ldi	r31, 0x0C	; 12
    192e:	0c 94 86 13 	jmp	0x270c	; 0x270c <__prologue_saves__+0x20>
    1932:	89 83       	std	Y+1, r24	; 0x01
    1934:	0e 94 46 0c 	call	0x188c	; 0x188c <_ZN20OrangutanPushbuttons4initEv>
    1938:	93 b1       	in	r25, 0x03	; 3
    193a:	90 95       	com	r25
    193c:	89 81       	ldd	r24, Y+1	; 0x01
    193e:	89 23       	and	r24, r25
    1940:	21 96       	adiw	r28, 0x01	; 1
    1942:	e2 e0       	ldi	r30, 0x02	; 2
    1944:	0c 94 a2 13 	jmp	0x2744	; 0x2744 <__epilogue_restores__+0x20>

00001948 <button_is_pressed>:
    1948:	0e 94 93 0c 	call	0x1926	; 0x1926 <_ZN20OrangutanPushbuttons9isPressedEh>
    194c:	08 95       	ret

0000194e <_ZN18OrangutanResources10getFreeRAMEv>:
    194e:	a2 e0       	ldi	r26, 0x02	; 2
    1950:	b0 e0       	ldi	r27, 0x00	; 0
    1952:	ed ea       	ldi	r30, 0xAD	; 173
    1954:	fc e0       	ldi	r31, 0x0C	; 12
    1956:	0c 94 86 13 	jmp	0x270c	; 0x270c <__prologue_saves__+0x20>
    195a:	80 91 b8 01 	lds	r24, 0x01B8
    195e:	90 91 b9 01 	lds	r25, 0x01B9
    1962:	9e 01       	movw	r18, r28
    1964:	2f 5f       	subi	r18, 0xFF	; 255
    1966:	3f 4f       	sbci	r19, 0xFF	; 255
    1968:	00 97       	sbiw	r24, 0x00	; 0
    196a:	19 f4       	brne	.+6      	; 0x1972 <_ZN18OrangutanResources10getFreeRAMEv+0x24>
    196c:	2c 5b       	subi	r18, 0xBC	; 188
    196e:	31 40       	sbci	r19, 0x01	; 1
    1970:	02 c0       	rjmp	.+4      	; 0x1976 <_ZN18OrangutanResources10getFreeRAMEv+0x28>
    1972:	28 1b       	sub	r18, r24
    1974:	39 0b       	sbc	r19, r25
    1976:	3a 83       	std	Y+2, r19	; 0x02
    1978:	29 83       	std	Y+1, r18	; 0x01
    197a:	89 81       	ldd	r24, Y+1	; 0x01
    197c:	9a 81       	ldd	r25, Y+2	; 0x02
    197e:	22 96       	adiw	r28, 0x02	; 2
    1980:	e2 e0       	ldi	r30, 0x02	; 2
    1982:	0c 94 a2 13 	jmp	0x2744	; 0x2744 <__epilogue_restores__+0x20>

00001986 <get_free_ram>:
    1986:	0e 94 a7 0c 	call	0x194e	; 0x194e <_ZN18OrangutanResources10getFreeRAMEv>
    198a:	08 95       	ret

0000198c <_ZN13OrangutanTime17delayMicrosecondsEj>:
    198c:	6f 93       	push	r22
    198e:	64 e0       	ldi	r22, 0x04	; 4
    1990:	6a 95       	dec	r22
    1992:	f1 f7       	brne	.-4      	; 0x1990 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    1994:	6f 91       	pop	r22
    1996:	01 97       	sbiw	r24, 0x01	; 1
    1998:	c9 f7       	brne	.-14     	; 0x198c <_ZN13OrangutanTime17delayMicrosecondsEj>
    199a:	08 95       	ret

0000199c <__vector_9>:
    199c:	2f 92       	push	r2
    199e:	8f 93       	push	r24
    19a0:	9f 93       	push	r25
    19a2:	2f b6       	in	r2, 0x3f	; 63
    19a4:	80 91 5d 01 	lds	r24, 0x015D
    19a8:	90 91 5e 01 	lds	r25, 0x015E
    19ac:	01 96       	adiw	r24, 0x01	; 1
    19ae:	80 93 5d 01 	sts	0x015D, r24
    19b2:	90 93 5e 01 	sts	0x015E, r25
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	80 91 5f 01 	lds	r24, 0x015F
    19bc:	89 1f       	adc	r24, r25
    19be:	80 93 5f 01 	sts	0x015F, r24
    19c2:	90 91 65 01 	lds	r25, 0x0165
    19c6:	9c 5f       	subi	r25, 0xFC	; 252
    19c8:	90 93 65 01 	sts	0x0165, r25
    19cc:	80 91 64 01 	lds	r24, 0x0164
    19d0:	80 51       	subi	r24, 0x10	; 16
    19d2:	97 42       	sbci	r25, 0x27	; 39
    19d4:	c0 f0       	brcs	.+48     	; 0x1a06 <end>
    19d6:	90 93 65 01 	sts	0x0165, r25
    19da:	80 93 64 01 	sts	0x0164, r24
    19de:	80 91 60 01 	lds	r24, 0x0160
    19e2:	90 91 61 01 	lds	r25, 0x0161
    19e6:	01 96       	adiw	r24, 0x01	; 1
    19e8:	80 93 60 01 	sts	0x0160, r24
    19ec:	90 93 61 01 	sts	0x0161, r25
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	80 91 62 01 	lds	r24, 0x0162
    19f6:	89 1f       	adc	r24, r25
    19f8:	80 93 62 01 	sts	0x0162, r24
    19fc:	80 91 63 01 	lds	r24, 0x0163
    1a00:	89 1f       	adc	r24, r25
    1a02:	80 93 63 01 	sts	0x0163, r24

00001a06 <end>:
    1a06:	2f be       	out	0x3f, r2	; 63
    1a08:	9f 91       	pop	r25
    1a0a:	8f 91       	pop	r24
    1a0c:	2f 90       	pop	r2
    1a0e:	18 95       	reti

00001a10 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    1a14:	ec 01       	movw	r28, r24
    1a16:	05 c0       	rjmp	.+10     	; 0x1a22 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    1a18:	88 ee       	ldi	r24, 0xE8	; 232
    1a1a:	93 e0       	ldi	r25, 0x03	; 3
    1a1c:	0e 94 c6 0c 	call	0x198c	; 0x198c <_ZN13OrangutanTime17delayMicrosecondsEj>
    1a20:	21 97       	sbiw	r28, 0x01	; 1
    1a22:	20 97       	sbiw	r28, 0x00	; 0
    1a24:	c9 f7       	brne	.-14     	; 0x1a18 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1a26:	df 91       	pop	r29
    1a28:	cf 91       	pop	r28
    1a2a:	08 95       	ret

00001a2c <delay_ms>:
    1a2c:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <_ZN13OrangutanTime17delayMillisecondsEj>
    1a30:	08 95       	ret

00001a32 <_ZN13OrangutanTime5init2Ev>:
    1a32:	e0 e7       	ldi	r30, 0x70	; 112
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	80 81       	ld	r24, Z
    1a38:	8e 7f       	andi	r24, 0xFE	; 254
    1a3a:	80 83       	st	Z, r24
    1a3c:	a0 eb       	ldi	r26, 0xB0	; 176
    1a3e:	b0 e0       	ldi	r27, 0x00	; 0
    1a40:	8c 91       	ld	r24, X
    1a42:	83 60       	ori	r24, 0x03	; 3
    1a44:	8c 93       	st	X, r24
    1a46:	a1 eb       	ldi	r26, 0xB1	; 177
    1a48:	b0 e0       	ldi	r27, 0x00	; 0
    1a4a:	8c 91       	ld	r24, X
    1a4c:	80 7f       	andi	r24, 0xF0	; 240
    1a4e:	8c 93       	st	X, r24
    1a50:	8c 91       	ld	r24, X
    1a52:	82 60       	ori	r24, 0x02	; 2
    1a54:	8c 93       	st	X, r24
    1a56:	b8 9a       	sbi	0x17, 0	; 23
    1a58:	80 81       	ld	r24, Z
    1a5a:	81 60       	ori	r24, 0x01	; 1
    1a5c:	80 83       	st	Z, r24
    1a5e:	78 94       	sei
    1a60:	08 95       	ret

00001a62 <_ZN13OrangutanTime4initEv>:
    1a62:	80 91 66 01 	lds	r24, 0x0166
    1a66:	88 23       	and	r24, r24
    1a68:	29 f4       	brne	.+10     	; 0x1a74 <_ZN13OrangutanTime4initEv+0x12>
    1a6a:	81 e0       	ldi	r24, 0x01	; 1
    1a6c:	80 93 66 01 	sts	0x0166, r24
    1a70:	0e 94 19 0d 	call	0x1a32	; 0x1a32 <_ZN13OrangutanTime5init2Ev>
    1a74:	08 95       	ret

00001a76 <_ZN13OrangutanTime2msEv>:
    1a76:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <_ZN13OrangutanTime4initEv>
    1a7a:	e0 e7       	ldi	r30, 0x70	; 112
    1a7c:	f0 e0       	ldi	r31, 0x00	; 0
    1a7e:	80 81       	ld	r24, Z
    1a80:	8e 7f       	andi	r24, 0xFE	; 254
    1a82:	80 83       	st	Z, r24
    1a84:	20 91 60 01 	lds	r18, 0x0160
    1a88:	30 91 61 01 	lds	r19, 0x0161
    1a8c:	40 91 62 01 	lds	r20, 0x0162
    1a90:	50 91 63 01 	lds	r21, 0x0163
    1a94:	80 81       	ld	r24, Z
    1a96:	81 60       	ori	r24, 0x01	; 1
    1a98:	80 83       	st	Z, r24
    1a9a:	b9 01       	movw	r22, r18
    1a9c:	ca 01       	movw	r24, r20
    1a9e:	08 95       	ret

00001aa0 <get_ms>:
    1aa0:	0e 94 3b 0d 	call	0x1a76	; 0x1a76 <_ZN13OrangutanTime2msEv>
    1aa4:	08 95       	ret

00001aa6 <_ZN13OrangutanTime5resetEv>:
    1aa6:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <_ZN13OrangutanTime4initEv>
    1aaa:	e0 e7       	ldi	r30, 0x70	; 112
    1aac:	f0 e0       	ldi	r31, 0x00	; 0
    1aae:	80 81       	ld	r24, Z
    1ab0:	8e 7f       	andi	r24, 0xFE	; 254
    1ab2:	80 83       	st	Z, r24
    1ab4:	10 92 60 01 	sts	0x0160, r1
    1ab8:	10 92 61 01 	sts	0x0161, r1
    1abc:	10 92 62 01 	sts	0x0162, r1
    1ac0:	10 92 63 01 	sts	0x0163, r1
    1ac4:	10 92 65 01 	sts	0x0165, r1
    1ac8:	10 92 64 01 	sts	0x0164, r1
    1acc:	80 81       	ld	r24, Z
    1ace:	81 60       	ori	r24, 0x01	; 1
    1ad0:	80 83       	st	Z, r24
    1ad2:	08 95       	ret

00001ad4 <calibrate_line_sensors>:
    1ad4:	68 2f       	mov	r22, r24
    1ad6:	87 e6       	ldi	r24, 0x67	; 103
    1ad8:	91 e0       	ldi	r25, 0x01	; 1
    1ada:	0e 94 a4 12 	call	0x2548	; 0x2548 <_ZN16PololuQTRSensors9calibrateEh>
    1ade:	08 95       	ret

00001ae0 <read_line>:
    1ae0:	9c 01       	movw	r18, r24
    1ae2:	46 2f       	mov	r20, r22
    1ae4:	87 e6       	ldi	r24, 0x67	; 103
    1ae6:	91 e0       	ldi	r25, 0x01	; 1
    1ae8:	b9 01       	movw	r22, r18
    1aea:	20 e0       	ldi	r18, 0x00	; 0
    1aec:	0e 94 02 11 	call	0x2204	; 0x2204 <_ZN16PololuQTRSensors8readLineEPjhh>
    1af0:	08 95       	ret

00001af2 <get_line_sensors_calibrated_minimum_on>:
    1af2:	80 91 67 01 	lds	r24, 0x0167
    1af6:	90 91 68 01 	lds	r25, 0x0168
    1afa:	08 95       	ret

00001afc <get_line_sensors_calibrated_maximum_on>:
    1afc:	80 91 69 01 	lds	r24, 0x0169
    1b00:	90 91 6a 01 	lds	r25, 0x016A
    1b04:	08 95       	ret

00001b06 <_ZN9Pololu3pi4initEjh>:
    1b06:	0f 93       	push	r16
    1b08:	df 93       	push	r29
    1b0a:	cf 93       	push	r28
    1b0c:	00 d0       	rcall	.+0      	; 0x1b0e <_ZN9Pololu3pi4initEjh+0x8>
    1b0e:	00 d0       	rcall	.+0      	; 0x1b10 <_ZN9Pololu3pi4initEjh+0xa>
    1b10:	0f 92       	push	r0
    1b12:	cd b7       	in	r28, 0x3d	; 61
    1b14:	de b7       	in	r29, 0x3e	; 62
    1b16:	9c 01       	movw	r18, r24
    1b18:	96 2f       	mov	r25, r22
    1b1a:	de 01       	movw	r26, r28
    1b1c:	11 96       	adiw	r26, 0x01	; 1
    1b1e:	e4 e2       	ldi	r30, 0x24	; 36
    1b20:	f1 e0       	ldi	r31, 0x01	; 1
    1b22:	85 e0       	ldi	r24, 0x05	; 5
    1b24:	01 90       	ld	r0, Z+
    1b26:	0d 92       	st	X+, r0
    1b28:	81 50       	subi	r24, 0x01	; 1
    1b2a:	e1 f7       	brne	.-8      	; 0x1b24 <_ZN9Pololu3pi4initEjh+0x1e>
    1b2c:	be 01       	movw	r22, r28
    1b2e:	6f 5f       	subi	r22, 0xFF	; 255
    1b30:	7f 4f       	sbci	r23, 0xFF	; 255
    1b32:	99 23       	and	r25, r25
    1b34:	29 f0       	breq	.+10     	; 0x1b40 <_ZN9Pololu3pi4initEjh+0x3a>
    1b36:	87 e6       	ldi	r24, 0x67	; 103
    1b38:	91 e0       	ldi	r25, 0x01	; 1
    1b3a:	45 e0       	ldi	r20, 0x05	; 5
    1b3c:	0f ef       	ldi	r16, 0xFF	; 255
    1b3e:	04 c0       	rjmp	.+8      	; 0x1b48 <_ZN9Pololu3pi4initEjh+0x42>
    1b40:	87 e6       	ldi	r24, 0x67	; 103
    1b42:	91 e0       	ldi	r25, 0x01	; 1
    1b44:	45 e0       	ldi	r20, 0x05	; 5
    1b46:	03 e1       	ldi	r16, 0x13	; 19
    1b48:	0e 94 1d 0e 	call	0x1c3a	; 0x1c3a <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1b4c:	87 e6       	ldi	r24, 0x67	; 103
    1b4e:	91 e0       	ldi	r25, 0x01	; 1
    1b50:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <_ZN16PololuQTRSensors11emittersOffEv>
    1b54:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <_ZN13OrangutanTime5resetEv>
    1b58:	0f 90       	pop	r0
    1b5a:	0f 90       	pop	r0
    1b5c:	0f 90       	pop	r0
    1b5e:	0f 90       	pop	r0
    1b60:	0f 90       	pop	r0
    1b62:	cf 91       	pop	r28
    1b64:	df 91       	pop	r29
    1b66:	0f 91       	pop	r16
    1b68:	08 95       	ret

00001b6a <pololu_3pi_init>:
    1b6a:	60 e0       	ldi	r22, 0x00	; 0
    1b6c:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <_ZN9Pololu3pi4initEjh>
    1b70:	08 95       	ret

00001b72 <_GLOBAL__I_pololu_3pi_init>:
    1b72:	08 95       	ret

00001b74 <_GLOBAL__D_pololu_3pi_init>:
    1b74:	87 e6       	ldi	r24, 0x67	; 103
    1b76:	91 e0       	ldi	r25, 0x01	; 1
    1b78:	0e 94 c8 12 	call	0x2590	; 0x2590 <_ZN16PololuQTRSensorsD1Ev>
    1b7c:	08 95       	ret

00001b7e <delayMicroseconds>:
    1b7e:	6f 93       	push	r22
    1b80:	64 e0       	ldi	r22, 0x04	; 4
    1b82:	6a 95       	dec	r22
    1b84:	f1 f7       	brne	.-4      	; 0x1b82 <delayMicroseconds+0x4>
    1b86:	6f 91       	pop	r22
    1b88:	01 97       	sbiw	r24, 0x01	; 1
    1b8a:	c9 f7       	brne	.-14     	; 0x1b7e <delayMicroseconds>
    1b8c:	08 95       	ret

00001b8e <_ZN16PololuQTRSensors4initEhhh>:
    1b8e:	a7 e0       	ldi	r26, 0x07	; 7
    1b90:	b0 e0       	ldi	r27, 0x00	; 0
    1b92:	ed ec       	ldi	r30, 0xCD	; 205
    1b94:	fd e0       	ldi	r31, 0x0D	; 13
    1b96:	0c 94 84 13 	jmp	0x2708	; 0x2708 <__prologue_saves__+0x1c>
    1b9a:	8c 01       	movw	r16, r24
    1b9c:	fc 01       	movw	r30, r24
    1b9e:	11 82       	std	Z+1, r1	; 0x01
    1ba0:	10 82       	st	Z, r1
    1ba2:	13 82       	std	Z+3, r1	; 0x03
    1ba4:	12 82       	std	Z+2, r1	; 0x02
    1ba6:	15 82       	std	Z+5, r1	; 0x05
    1ba8:	14 82       	std	Z+4, r1	; 0x04
    1baa:	17 82       	std	Z+7, r1	; 0x07
    1bac:	16 82       	std	Z+6, r1	; 0x06
    1bae:	61 31       	cpi	r22, 0x11	; 17
    1bb0:	18 f0       	brcs	.+6      	; 0x1bb8 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1bb2:	80 e1       	ldi	r24, 0x10	; 16
    1bb4:	80 87       	std	Z+8, r24	; 0x08
    1bb6:	02 c0       	rjmp	.+4      	; 0x1bbc <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1bb8:	fc 01       	movw	r30, r24
    1bba:	60 87       	std	Z+8, r22	; 0x08
    1bbc:	f8 01       	movw	r30, r16
    1bbe:	20 8b       	std	Z+16, r18	; 0x10
    1bc0:	ce 01       	movw	r24, r28
    1bc2:	01 96       	adiw	r24, 0x01	; 1
    1bc4:	64 2f       	mov	r22, r20
    1bc6:	0e 94 2c 0b 	call	0x1658	; 0x1658 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1bca:	8f 81       	ldd	r24, Y+7	; 0x07
    1bcc:	f8 01       	movw	r30, r16
    1bce:	81 87       	std	Z+9, r24	; 0x09
    1bd0:	8b 81       	ldd	r24, Y+3	; 0x03
    1bd2:	9c 81       	ldd	r25, Y+4	; 0x04
    1bd4:	93 87       	std	Z+11, r25	; 0x0b
    1bd6:	82 87       	std	Z+10, r24	; 0x0a
    1bd8:	8d 81       	ldd	r24, Y+5	; 0x05
    1bda:	9e 81       	ldd	r25, Y+6	; 0x06
    1bdc:	95 87       	std	Z+13, r25	; 0x0d
    1bde:	84 87       	std	Z+12, r24	; 0x0c
    1be0:	27 96       	adiw	r28, 0x07	; 7
    1be2:	e4 e0       	ldi	r30, 0x04	; 4
    1be4:	0c 94 a0 13 	jmp	0x2740	; 0x2740 <__epilogue_restores__+0x1c>

00001be8 <_ZN16PololuQTRSensors11emittersOffEv>:
    1be8:	fc 01       	movw	r30, r24
    1bea:	a4 85       	ldd	r26, Z+12	; 0x0c
    1bec:	b5 85       	ldd	r27, Z+13	; 0x0d
    1bee:	10 97       	sbiw	r26, 0x00	; 0
    1bf0:	79 f0       	breq	.+30     	; 0x1c10 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1bf2:	8c 91       	ld	r24, X
    1bf4:	91 85       	ldd	r25, Z+9	; 0x09
    1bf6:	89 2b       	or	r24, r25
    1bf8:	8c 93       	st	X, r24
    1bfa:	a2 85       	ldd	r26, Z+10	; 0x0a
    1bfc:	b3 85       	ldd	r27, Z+11	; 0x0b
    1bfe:	9c 91       	ld	r25, X
    1c00:	81 85       	ldd	r24, Z+9	; 0x09
    1c02:	80 95       	com	r24
    1c04:	89 23       	and	r24, r25
    1c06:	8c 93       	st	X, r24
    1c08:	88 ec       	ldi	r24, 0xC8	; 200
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <delayMicroseconds>
    1c10:	08 95       	ret

00001c12 <_ZN16PololuQTRSensors10emittersOnEv>:
    1c12:	fc 01       	movw	r30, r24
    1c14:	a4 85       	ldd	r26, Z+12	; 0x0c
    1c16:	b5 85       	ldd	r27, Z+13	; 0x0d
    1c18:	10 97       	sbiw	r26, 0x00	; 0
    1c1a:	71 f0       	breq	.+28     	; 0x1c38 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1c1c:	8c 91       	ld	r24, X
    1c1e:	91 85       	ldd	r25, Z+9	; 0x09
    1c20:	89 2b       	or	r24, r25
    1c22:	8c 93       	st	X, r24
    1c24:	a2 85       	ldd	r26, Z+10	; 0x0a
    1c26:	b3 85       	ldd	r27, Z+11	; 0x0b
    1c28:	8c 91       	ld	r24, X
    1c2a:	91 85       	ldd	r25, Z+9	; 0x09
    1c2c:	89 2b       	or	r24, r25
    1c2e:	8c 93       	st	X, r24
    1c30:	88 ec       	ldi	r24, 0xC8	; 200
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <delayMicroseconds>
    1c38:	08 95       	ret

00001c3a <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1c3a:	a7 e0       	ldi	r26, 0x07	; 7
    1c3c:	b0 e0       	ldi	r27, 0x00	; 0
    1c3e:	e3 e2       	ldi	r30, 0x23	; 35
    1c40:	fe e0       	ldi	r31, 0x0E	; 14
    1c42:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__prologue_saves__>
    1c46:	7c 01       	movw	r14, r24
    1c48:	1b 01       	movw	r2, r22
    1c4a:	64 2f       	mov	r22, r20
    1c4c:	39 01       	movw	r6, r18
    1c4e:	40 2f       	mov	r20, r16
    1c50:	20 e0       	ldi	r18, 0x00	; 0
    1c52:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <_ZN16PololuQTRSensors4initEhhh>
    1c56:	97 01       	movw	r18, r14
    1c58:	2f 5b       	subi	r18, 0xBF	; 191
    1c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c5c:	f9 01       	movw	r30, r18
    1c5e:	10 82       	st	Z, r1
    1c60:	d7 01       	movw	r26, r14
    1c62:	ae 5b       	subi	r26, 0xBE	; 190
    1c64:	bf 4f       	sbci	r27, 0xFF	; 255
    1c66:	1c 92       	st	X, r1
    1c68:	c7 01       	movw	r24, r14
    1c6a:	8d 5b       	subi	r24, 0xBD	; 189
    1c6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c6e:	fc 01       	movw	r30, r24
    1c70:	10 82       	st	Z, r1
    1c72:	f7 01       	movw	r30, r14
    1c74:	77 86       	std	Z+15, r7	; 0x0f
    1c76:	66 86       	std	Z+14, r6	; 0x0e
    1c78:	66 24       	eor	r6, r6
    1c7a:	2e 01       	movw	r4, r28
    1c7c:	08 94       	sec
    1c7e:	41 1c       	adc	r4, r1
    1c80:	51 1c       	adc	r5, r1
    1c82:	6c 01       	movw	r12, r24
    1c84:	5d 01       	movw	r10, r26
    1c86:	49 01       	movw	r8, r18
    1c88:	29 c0       	rjmp	.+82     	; 0x1cdc <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1c8a:	06 2d       	mov	r16, r6
    1c8c:	10 e0       	ldi	r17, 0x00	; 0
    1c8e:	f1 01       	movw	r30, r2
    1c90:	e0 0f       	add	r30, r16
    1c92:	f1 1f       	adc	r31, r17
    1c94:	c2 01       	movw	r24, r4
    1c96:	60 81       	ld	r22, Z
    1c98:	0e 94 2c 0b 	call	0x1658	; 0x1658 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1c9c:	2f 81       	ldd	r18, Y+7	; 0x07
    1c9e:	f7 01       	movw	r30, r14
    1ca0:	e0 0f       	add	r30, r16
    1ca2:	f1 1f       	adc	r31, r17
    1ca4:	21 8b       	std	Z+17, r18	; 0x11
    1ca6:	89 81       	ldd	r24, Y+1	; 0x01
    1ca8:	9a 81       	ldd	r25, Y+2	; 0x02
    1caa:	f8 01       	movw	r30, r16
    1cac:	ee 0f       	add	r30, r30
    1cae:	ff 1f       	adc	r31, r31
    1cb0:	ee 0d       	add	r30, r14
    1cb2:	ff 1d       	adc	r31, r15
    1cb4:	92 a3       	std	Z+34, r25	; 0x22
    1cb6:	81 a3       	std	Z+33, r24	; 0x21
    1cb8:	83 32       	cpi	r24, 0x23	; 35
    1cba:	91 05       	cpc	r25, r1
    1cbc:	11 f4       	brne	.+4      	; 0x1cc2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1cbe:	f4 01       	movw	r30, r8
    1cc0:	09 c0       	rjmp	.+18     	; 0x1cd4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1cc2:	86 32       	cpi	r24, 0x26	; 38
    1cc4:	91 05       	cpc	r25, r1
    1cc6:	11 f4       	brne	.+4      	; 0x1ccc <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1cc8:	f5 01       	movw	r30, r10
    1cca:	04 c0       	rjmp	.+8      	; 0x1cd4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1ccc:	89 32       	cpi	r24, 0x29	; 41
    1cce:	91 05       	cpc	r25, r1
    1cd0:	21 f4       	brne	.+8      	; 0x1cda <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
    1cd2:	f6 01       	movw	r30, r12
    1cd4:	80 81       	ld	r24, Z
    1cd6:	82 2b       	or	r24, r18
    1cd8:	80 83       	st	Z, r24
    1cda:	63 94       	inc	r6
    1cdc:	f7 01       	movw	r30, r14
    1cde:	80 85       	ldd	r24, Z+8	; 0x08
    1ce0:	68 16       	cp	r6, r24
    1ce2:	98 f2       	brcs	.-90     	; 0x1c8a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
    1ce4:	27 96       	adiw	r28, 0x07	; 7
    1ce6:	e2 e1       	ldi	r30, 0x12	; 18
    1ce8:	0c 94 92 13 	jmp	0x2724	; 0x2724 <__epilogue_restores__>

00001cec <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1cec:	a0 e0       	ldi	r26, 0x00	; 0
    1cee:	b0 e0       	ldi	r27, 0x00	; 0
    1cf0:	ec e7       	ldi	r30, 0x7C	; 124
    1cf2:	fe e0       	ldi	r31, 0x0E	; 14
    1cf4:	0c 94 7b 13 	jmp	0x26f6	; 0x26f6 <__prologue_saves__+0xa>
    1cf8:	ec 01       	movw	r28, r24
    1cfa:	5b 01       	movw	r10, r22
    1cfc:	fc 01       	movw	r30, r24
    1cfe:	ef 5b       	subi	r30, 0xBF	; 191
    1d00:	ff 4f       	sbci	r31, 0xFF	; 255
    1d02:	90 80       	ld	r9, Z
    1d04:	fc 01       	movw	r30, r24
    1d06:	ee 5b       	subi	r30, 0xBE	; 190
    1d08:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0a:	80 80       	ld	r8, Z
    1d0c:	fc 01       	movw	r30, r24
    1d0e:	ed 5b       	subi	r30, 0xBD	; 189
    1d10:	ff 4f       	sbci	r31, 0xFF	; 255
    1d12:	70 80       	ld	r7, Z
    1d14:	80 e0       	ldi	r24, 0x00	; 0
    1d16:	09 c0       	rjmp	.+18     	; 0x1d2a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
    1d18:	e8 2f       	mov	r30, r24
    1d1a:	f0 e0       	ldi	r31, 0x00	; 0
    1d1c:	ee 0f       	add	r30, r30
    1d1e:	ff 1f       	adc	r31, r31
    1d20:	ea 0d       	add	r30, r10
    1d22:	fb 1d       	adc	r31, r11
    1d24:	11 82       	std	Z+1, r1	; 0x01
    1d26:	10 82       	st	Z, r1
    1d28:	8f 5f       	subi	r24, 0xFF	; 255
    1d2a:	98 85       	ldd	r25, Y+8	; 0x08
    1d2c:	89 17       	cp	r24, r25
    1d2e:	a0 f3       	brcs	.-24     	; 0x1d18 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
    1d30:	84 b1       	in	r24, 0x04	; 4
    1d32:	21 e4       	ldi	r18, 0x41	; 65
    1d34:	e2 2e       	mov	r14, r18
    1d36:	f1 2c       	mov	r15, r1
    1d38:	ec 0e       	add	r14, r28
    1d3a:	fd 1e       	adc	r15, r29
    1d3c:	d7 01       	movw	r26, r14
    1d3e:	9c 91       	ld	r25, X
    1d40:	89 2b       	or	r24, r25
    1d42:	84 b9       	out	0x04, r24	; 4
    1d44:	87 b1       	in	r24, 0x07	; 7
    1d46:	8e 01       	movw	r16, r28
    1d48:	0e 5b       	subi	r16, 0xBE	; 190
    1d4a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d4c:	f8 01       	movw	r30, r16
    1d4e:	90 81       	ld	r25, Z
    1d50:	89 2b       	or	r24, r25
    1d52:	87 b9       	out	0x07, r24	; 7
    1d54:	8a b1       	in	r24, 0x0a	; 10
    1d56:	93 e4       	ldi	r25, 0x43	; 67
    1d58:	c9 2e       	mov	r12, r25
    1d5a:	d1 2c       	mov	r13, r1
    1d5c:	cc 0e       	add	r12, r28
    1d5e:	dd 1e       	adc	r13, r29
    1d60:	d6 01       	movw	r26, r12
    1d62:	9c 91       	ld	r25, X
    1d64:	89 2b       	or	r24, r25
    1d66:	8a b9       	out	0x0a, r24	; 10
    1d68:	85 b1       	in	r24, 0x05	; 5
    1d6a:	f7 01       	movw	r30, r14
    1d6c:	90 81       	ld	r25, Z
    1d6e:	89 2b       	or	r24, r25
    1d70:	85 b9       	out	0x05, r24	; 5
    1d72:	88 b1       	in	r24, 0x08	; 8
    1d74:	d8 01       	movw	r26, r16
    1d76:	9c 91       	ld	r25, X
    1d78:	89 2b       	or	r24, r25
    1d7a:	88 b9       	out	0x08, r24	; 8
    1d7c:	8b b1       	in	r24, 0x0b	; 11
    1d7e:	f6 01       	movw	r30, r12
    1d80:	90 81       	ld	r25, Z
    1d82:	89 2b       	or	r24, r25
    1d84:	8b b9       	out	0x0b, r24	; 11
    1d86:	8a e0       	ldi	r24, 0x0A	; 10
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	0e 94 bf 0d 	call	0x1b7e	; 0x1b7e <delayMicroseconds>
    1d8e:	94 b1       	in	r25, 0x04	; 4
    1d90:	d7 01       	movw	r26, r14
    1d92:	8c 91       	ld	r24, X
    1d94:	80 95       	com	r24
    1d96:	89 23       	and	r24, r25
    1d98:	84 b9       	out	0x04, r24	; 4
    1d9a:	97 b1       	in	r25, 0x07	; 7
    1d9c:	f8 01       	movw	r30, r16
    1d9e:	80 81       	ld	r24, Z
    1da0:	80 95       	com	r24
    1da2:	89 23       	and	r24, r25
    1da4:	87 b9       	out	0x07, r24	; 7
    1da6:	9a b1       	in	r25, 0x0a	; 10
    1da8:	d6 01       	movw	r26, r12
    1daa:	8c 91       	ld	r24, X
    1dac:	80 95       	com	r24
    1dae:	89 23       	and	r24, r25
    1db0:	8a b9       	out	0x0a, r24	; 10
    1db2:	95 b1       	in	r25, 0x05	; 5
    1db4:	f7 01       	movw	r30, r14
    1db6:	80 81       	ld	r24, Z
    1db8:	80 95       	com	r24
    1dba:	89 23       	and	r24, r25
    1dbc:	85 b9       	out	0x05, r24	; 5
    1dbe:	98 b1       	in	r25, 0x08	; 8
    1dc0:	d8 01       	movw	r26, r16
    1dc2:	8c 91       	ld	r24, X
    1dc4:	80 95       	com	r24
    1dc6:	89 23       	and	r24, r25
    1dc8:	88 b9       	out	0x08, r24	; 8
    1dca:	9b b1       	in	r25, 0x0b	; 11
    1dcc:	f6 01       	movw	r30, r12
    1dce:	80 81       	ld	r24, Z
    1dd0:	80 95       	com	r24
    1dd2:	89 23       	and	r24, r25
    1dd4:	8b b9       	out	0x0b, r24	; 11
    1dd6:	c0 90 b0 00 	lds	r12, 0x00B0
    1dda:	e0 90 b1 00 	lds	r14, 0x00B1
    1dde:	80 91 b0 00 	lds	r24, 0x00B0
    1de2:	83 60       	ori	r24, 0x03	; 3
    1de4:	80 93 b0 00 	sts	0x00B0, r24
    1de8:	82 e0       	ldi	r24, 0x02	; 2
    1dea:	80 93 b1 00 	sts	0x00B1, r24
    1dee:	00 91 b2 00 	lds	r16, 0x00B2
    1df2:	80 e0       	ldi	r24, 0x00	; 0
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	39 c0       	rjmp	.+114    	; 0x1e6a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
    1df8:	20 91 b2 00 	lds	r18, 0x00B2
    1dfc:	20 1b       	sub	r18, r16
    1dfe:	82 0f       	add	r24, r18
    1e00:	91 1d       	adc	r25, r1
    1e02:	02 0f       	add	r16, r18
    1e04:	f3 b0       	in	r15, 0x03	; 3
    1e06:	f9 14       	cp	r15, r9
    1e08:	09 f0       	breq	.+2      	; 0x1e0c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
    1e0a:	4d c0       	rjmp	.+154    	; 0x1ea6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1e0c:	96 b0       	in	r9, 0x06	; 6
    1e0e:	98 14       	cp	r9, r8
    1e10:	09 f0       	breq	.+2      	; 0x1e14 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
    1e12:	49 c0       	rjmp	.+146    	; 0x1ea6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1e14:	29 b1       	in	r18, 0x09	; 9
    1e16:	27 15       	cp	r18, r7
    1e18:	09 f0       	breq	.+2      	; 0x1e1c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1e1a:	45 c0       	rjmp	.+138    	; 0x1ea6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1e1c:	24 c0       	rjmp	.+72     	; 0x1e66 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1e1e:	21 2f       	mov	r18, r17
    1e20:	30 e0       	ldi	r19, 0x00	; 0
    1e22:	a9 01       	movw	r20, r18
    1e24:	44 0f       	add	r20, r20
    1e26:	55 1f       	adc	r21, r21
    1e28:	f5 01       	movw	r30, r10
    1e2a:	e4 0f       	add	r30, r20
    1e2c:	f5 1f       	adc	r31, r21
    1e2e:	60 81       	ld	r22, Z
    1e30:	71 81       	ldd	r23, Z+1	; 0x01
    1e32:	61 15       	cp	r22, r1
    1e34:	71 05       	cpc	r23, r1
    1e36:	99 f4       	brne	.+38     	; 0x1e5e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1e38:	4c 0f       	add	r20, r28
    1e3a:	5d 1f       	adc	r21, r29
    1e3c:	da 01       	movw	r26, r20
    1e3e:	91 96       	adiw	r26, 0x21	; 33
    1e40:	4d 91       	ld	r20, X+
    1e42:	5c 91       	ld	r21, X
    1e44:	92 97       	sbiw	r26, 0x22	; 34
    1e46:	da 01       	movw	r26, r20
    1e48:	4c 91       	ld	r20, X
    1e4a:	2c 0f       	add	r18, r28
    1e4c:	3d 1f       	adc	r19, r29
    1e4e:	d9 01       	movw	r26, r18
    1e50:	51 96       	adiw	r26, 0x11	; 17
    1e52:	2c 91       	ld	r18, X
    1e54:	51 97       	sbiw	r26, 0x11	; 17
    1e56:	42 23       	and	r20, r18
    1e58:	11 f4       	brne	.+4      	; 0x1e5e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1e5a:	91 83       	std	Z+1, r25	; 0x01
    1e5c:	80 83       	st	Z, r24
    1e5e:	1f 5f       	subi	r17, 0xFF	; 255
    1e60:	28 85       	ldd	r18, Y+8	; 0x08
    1e62:	12 17       	cp	r17, r18
    1e64:	e0 f2       	brcs	.-72     	; 0x1e1e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    1e66:	89 2c       	mov	r8, r9
    1e68:	9f 2c       	mov	r9, r15
    1e6a:	2e 85       	ldd	r18, Y+14	; 0x0e
    1e6c:	3f 85       	ldd	r19, Y+15	; 0x0f
    1e6e:	82 17       	cp	r24, r18
    1e70:	93 07       	cpc	r25, r19
    1e72:	10 f2       	brcs	.-124    	; 0x1df8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
    1e74:	c0 92 b0 00 	sts	0x00B0, r12
    1e78:	e0 92 b1 00 	sts	0x00B1, r14
    1e7c:	20 e0       	ldi	r18, 0x00	; 0
    1e7e:	0f c0       	rjmp	.+30     	; 0x1e9e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
    1e80:	e2 2f       	mov	r30, r18
    1e82:	f0 e0       	ldi	r31, 0x00	; 0
    1e84:	ee 0f       	add	r30, r30
    1e86:	ff 1f       	adc	r31, r31
    1e88:	ea 0d       	add	r30, r10
    1e8a:	fb 1d       	adc	r31, r11
    1e8c:	80 81       	ld	r24, Z
    1e8e:	91 81       	ldd	r25, Z+1	; 0x01
    1e90:	00 97       	sbiw	r24, 0x00	; 0
    1e92:	21 f4       	brne	.+8      	; 0x1e9c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
    1e94:	8e 85       	ldd	r24, Y+14	; 0x0e
    1e96:	9f 85       	ldd	r25, Y+15	; 0x0f
    1e98:	91 83       	std	Z+1, r25	; 0x01
    1e9a:	80 83       	st	Z, r24
    1e9c:	2f 5f       	subi	r18, 0xFF	; 255
    1e9e:	88 85       	ldd	r24, Y+8	; 0x08
    1ea0:	28 17       	cp	r18, r24
    1ea2:	70 f3       	brcs	.-36     	; 0x1e80 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
    1ea4:	05 c0       	rjmp	.+10     	; 0x1eb0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
    1ea6:	f3 b0       	in	r15, 0x03	; 3
    1ea8:	96 b0       	in	r9, 0x06	; 6
    1eaa:	79 b0       	in	r7, 0x09	; 9
    1eac:	10 e0       	ldi	r17, 0x00	; 0
    1eae:	d8 cf       	rjmp	.-80     	; 0x1e60 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1eb0:	cd b7       	in	r28, 0x3d	; 61
    1eb2:	de b7       	in	r29, 0x3e	; 62
    1eb4:	ed e0       	ldi	r30, 0x0D	; 13
    1eb6:	0c 94 97 13 	jmp	0x272e	; 0x272e <__epilogue_restores__+0xa>

00001eba <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1eba:	ef 92       	push	r14
    1ebc:	ff 92       	push	r15
    1ebe:	0f 93       	push	r16
    1ec0:	1f 93       	push	r17
    1ec2:	cf 93       	push	r28
    1ec4:	df 93       	push	r29
    1ec6:	fc 01       	movw	r30, r24
    1ec8:	9b 01       	movw	r18, r22
    1eca:	00 91 7c 00 	lds	r16, 0x007C
    1ece:	10 91 7a 00 	lds	r17, 0x007A
    1ed2:	e7 b0       	in	r14, 0x07	; 7
    1ed4:	f8 b0       	in	r15, 0x08	; 8
    1ed6:	80 91 7a 00 	lds	r24, 0x007A
    1eda:	86 fd       	sbrc	r24, 6
    1edc:	fc cf       	rjmp	.-8      	; 0x1ed6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1ede:	80 e0       	ldi	r24, 0x00	; 0
    1ee0:	0a c0       	rjmp	.+20     	; 0x1ef6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
    1ee2:	a8 2f       	mov	r26, r24
    1ee4:	b0 e0       	ldi	r27, 0x00	; 0
    1ee6:	aa 0f       	add	r26, r26
    1ee8:	bb 1f       	adc	r27, r27
    1eea:	a2 0f       	add	r26, r18
    1eec:	b3 1f       	adc	r27, r19
    1eee:	11 96       	adiw	r26, 0x01	; 1
    1ef0:	1c 92       	st	X, r1
    1ef2:	1e 92       	st	-X, r1
    1ef4:	8f 5f       	subi	r24, 0xFF	; 255
    1ef6:	90 85       	ldd	r25, Z+8	; 0x08
    1ef8:	89 17       	cp	r24, r25
    1efa:	98 f3       	brcs	.-26     	; 0x1ee2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1efc:	97 b1       	in	r25, 0x07	; 7
    1efe:	82 a1       	ldd	r24, Z+34	; 0x22
    1f00:	80 95       	com	r24
    1f02:	89 23       	and	r24, r25
    1f04:	87 b9       	out	0x07, r24	; 7
    1f06:	98 b1       	in	r25, 0x08	; 8
    1f08:	82 a1       	ldd	r24, Z+34	; 0x22
    1f0a:	80 95       	com	r24
    1f0c:	89 23       	and	r24, r25
    1f0e:	88 b9       	out	0x08, r24	; 8
    1f10:	87 e8       	ldi	r24, 0x87	; 135
    1f12:	80 93 7a 00 	sts	0x007A, r24
    1f16:	70 e0       	ldi	r23, 0x00	; 0
    1f18:	29 c0       	rjmp	.+82     	; 0x1f6c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1f1a:	df 01       	movw	r26, r30
    1f1c:	a6 0f       	add	r26, r22
    1f1e:	b1 1d       	adc	r27, r1
    1f20:	51 96       	adiw	r26, 0x11	; 17
    1f22:	8c 91       	ld	r24, X
    1f24:	51 97       	sbiw	r26, 0x11	; 17
    1f26:	80 64       	ori	r24, 0x40	; 64
    1f28:	80 93 7c 00 	sts	0x007C, r24
    1f2c:	80 91 7a 00 	lds	r24, 0x007A
    1f30:	80 64       	ori	r24, 0x40	; 64
    1f32:	80 93 7a 00 	sts	0x007A, r24
    1f36:	80 91 7a 00 	lds	r24, 0x007A
    1f3a:	86 fd       	sbrc	r24, 6
    1f3c:	fc cf       	rjmp	.-8      	; 0x1f36 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
    1f3e:	a6 2f       	mov	r26, r22
    1f40:	b0 e0       	ldi	r27, 0x00	; 0
    1f42:	aa 0f       	add	r26, r26
    1f44:	bb 1f       	adc	r27, r27
    1f46:	a2 0f       	add	r26, r18
    1f48:	b3 1f       	adc	r27, r19
    1f4a:	40 91 78 00 	lds	r20, 0x0078
    1f4e:	50 91 79 00 	lds	r21, 0x0079
    1f52:	8d 91       	ld	r24, X+
    1f54:	9c 91       	ld	r25, X
    1f56:	11 97       	sbiw	r26, 0x01	; 1
    1f58:	84 0f       	add	r24, r20
    1f5a:	95 1f       	adc	r25, r21
    1f5c:	11 96       	adiw	r26, 0x01	; 1
    1f5e:	9c 93       	st	X, r25
    1f60:	8e 93       	st	-X, r24
    1f62:	6f 5f       	subi	r22, 0xFF	; 255
    1f64:	80 85       	ldd	r24, Z+8	; 0x08
    1f66:	68 17       	cp	r22, r24
    1f68:	c0 f2       	brcs	.-80     	; 0x1f1a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
    1f6a:	7f 5f       	subi	r23, 0xFF	; 255
    1f6c:	81 a1       	ldd	r24, Z+33	; 0x21
    1f6e:	78 17       	cp	r23, r24
    1f70:	10 f4       	brcc	.+4      	; 0x1f76 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
    1f72:	60 e0       	ldi	r22, 0x00	; 0
    1f74:	f7 cf       	rjmp	.-18     	; 0x1f64 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
    1f76:	40 e0       	ldi	r20, 0x00	; 0
    1f78:	14 c0       	rjmp	.+40     	; 0x1fa2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
    1f7a:	c4 2f       	mov	r28, r20
    1f7c:	d0 e0       	ldi	r29, 0x00	; 0
    1f7e:	cc 0f       	add	r28, r28
    1f80:	dd 1f       	adc	r29, r29
    1f82:	c2 0f       	add	r28, r18
    1f84:	d3 1f       	adc	r29, r19
    1f86:	61 a1       	ldd	r22, Z+33	; 0x21
    1f88:	70 e0       	ldi	r23, 0x00	; 0
    1f8a:	cb 01       	movw	r24, r22
    1f8c:	95 95       	asr	r25
    1f8e:	87 95       	ror	r24
    1f90:	a8 81       	ld	r26, Y
    1f92:	b9 81       	ldd	r27, Y+1	; 0x01
    1f94:	8a 0f       	add	r24, r26
    1f96:	9b 1f       	adc	r25, r27
    1f98:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
    1f9c:	79 83       	std	Y+1, r23	; 0x01
    1f9e:	68 83       	st	Y, r22
    1fa0:	4f 5f       	subi	r20, 0xFF	; 255
    1fa2:	80 85       	ldd	r24, Z+8	; 0x08
    1fa4:	48 17       	cp	r20, r24
    1fa6:	48 f3       	brcs	.-46     	; 0x1f7a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
    1fa8:	00 93 7c 00 	sts	0x007C, r16
    1fac:	10 93 7a 00 	sts	0x007A, r17
    1fb0:	f8 b8       	out	0x08, r15	; 8
    1fb2:	e7 b8       	out	0x07, r14	; 7
    1fb4:	cd b7       	in	r28, 0x3d	; 61
    1fb6:	de b7       	in	r29, 0x3e	; 62
    1fb8:	e6 e0       	ldi	r30, 0x06	; 6
    1fba:	0c 94 9e 13 	jmp	0x273c	; 0x273c <__epilogue_restores__+0x18>

00001fbe <_ZN16PololuQTRSensors4readEPjh>:
    1fbe:	a0 e2       	ldi	r26, 0x20	; 32
    1fc0:	b0 e0       	ldi	r27, 0x00	; 0
    1fc2:	e5 ee       	ldi	r30, 0xE5	; 229
    1fc4:	ff e0       	ldi	r31, 0x0F	; 15
    1fc6:	0c 94 81 13 	jmp	0x2702	; 0x2702 <__prologue_saves__+0x16>
    1fca:	8c 01       	movw	r16, r24
    1fcc:	7b 01       	movw	r14, r22
    1fce:	d4 2e       	mov	r13, r20
    1fd0:	84 2f       	mov	r24, r20
    1fd2:	81 50       	subi	r24, 0x01	; 1
    1fd4:	82 30       	cpi	r24, 0x02	; 2
    1fd6:	18 f4       	brcc	.+6      	; 0x1fde <_ZN16PololuQTRSensors4readEPjh+0x20>
    1fd8:	c8 01       	movw	r24, r16
    1fda:	0e 94 09 0e 	call	0x1c12	; 0x1c12 <_ZN16PololuQTRSensors10emittersOnEv>
    1fde:	d8 01       	movw	r26, r16
    1fe0:	50 96       	adiw	r26, 0x10	; 16
    1fe2:	8c 91       	ld	r24, X
    1fe4:	50 97       	sbiw	r26, 0x10	; 16
    1fe6:	88 23       	and	r24, r24
    1fe8:	89 f4       	brne	.+34     	; 0x200c <_ZN16PololuQTRSensors4readEPjh+0x4e>
    1fea:	c8 01       	movw	r24, r16
    1fec:	b7 01       	movw	r22, r14
    1fee:	0e 94 76 0e 	call	0x1cec	; 0x1cec <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1ff2:	c8 01       	movw	r24, r16
    1ff4:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <_ZN16PololuQTRSensors11emittersOffEv>
    1ff8:	bd 2d       	mov	r27, r13
    1ffa:	b2 30       	cpi	r27, 0x02	; 2
    1ffc:	d9 f5       	brne	.+118    	; 0x2074 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1ffe:	c8 01       	movw	r24, r16
    2000:	be 01       	movw	r22, r28
    2002:	6f 5f       	subi	r22, 0xFF	; 255
    2004:	7f 4f       	sbci	r23, 0xFF	; 255
    2006:	0e 94 76 0e 	call	0x1cec	; 0x1cec <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    200a:	10 c0       	rjmp	.+32     	; 0x202c <_ZN16PololuQTRSensors4readEPjh+0x6e>
    200c:	c8 01       	movw	r24, r16
    200e:	b7 01       	movw	r22, r14
    2010:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2014:	c8 01       	movw	r24, r16
    2016:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <_ZN16PololuQTRSensors11emittersOffEv>
    201a:	ed 2d       	mov	r30, r13
    201c:	e2 30       	cpi	r30, 0x02	; 2
    201e:	51 f5       	brne	.+84     	; 0x2074 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    2020:	c8 01       	movw	r24, r16
    2022:	be 01       	movw	r22, r28
    2024:	6f 5f       	subi	r22, 0xFF	; 255
    2026:	7f 4f       	sbci	r23, 0xFF	; 255
    2028:	0e 94 5d 0f 	call	0x1eba	; 0x1eba <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    202c:	60 e0       	ldi	r22, 0x00	; 0
    202e:	ae 01       	movw	r20, r28
    2030:	4f 5f       	subi	r20, 0xFF	; 255
    2032:	5f 4f       	sbci	r21, 0xFF	; 255
    2034:	1b c0       	rjmp	.+54     	; 0x206c <_ZN16PololuQTRSensors4readEPjh+0xae>
    2036:	86 2f       	mov	r24, r22
    2038:	90 e0       	ldi	r25, 0x00	; 0
    203a:	88 0f       	add	r24, r24
    203c:	99 1f       	adc	r25, r25
    203e:	f7 01       	movw	r30, r14
    2040:	e8 0f       	add	r30, r24
    2042:	f9 1f       	adc	r31, r25
    2044:	84 0f       	add	r24, r20
    2046:	95 1f       	adc	r25, r21
    2048:	d8 01       	movw	r26, r16
    204a:	1e 96       	adiw	r26, 0x0e	; 14
    204c:	2d 91       	ld	r18, X+
    204e:	3c 91       	ld	r19, X
    2050:	1f 97       	sbiw	r26, 0x0f	; 15
    2052:	dc 01       	movw	r26, r24
    2054:	8d 91       	ld	r24, X+
    2056:	9c 91       	ld	r25, X
    2058:	11 97       	sbiw	r26, 0x01	; 1
    205a:	28 1b       	sub	r18, r24
    205c:	39 0b       	sbc	r19, r25
    205e:	80 81       	ld	r24, Z
    2060:	91 81       	ldd	r25, Z+1	; 0x01
    2062:	82 0f       	add	r24, r18
    2064:	93 1f       	adc	r25, r19
    2066:	91 83       	std	Z+1, r25	; 0x01
    2068:	80 83       	st	Z, r24
    206a:	6f 5f       	subi	r22, 0xFF	; 255
    206c:	f8 01       	movw	r30, r16
    206e:	80 85       	ldd	r24, Z+8	; 0x08
    2070:	68 17       	cp	r22, r24
    2072:	08 f3       	brcs	.-62     	; 0x2036 <_ZN16PololuQTRSensors4readEPjh+0x78>
    2074:	a0 96       	adiw	r28, 0x20	; 32
    2076:	e7 e0       	ldi	r30, 0x07	; 7
    2078:	0c 94 9d 13 	jmp	0x273a	; 0x273a <__epilogue_restores__+0x16>

0000207c <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    207c:	8f 92       	push	r8
    207e:	9f 92       	push	r9
    2080:	af 92       	push	r10
    2082:	bf 92       	push	r11
    2084:	cf 92       	push	r12
    2086:	df 92       	push	r13
    2088:	ff 92       	push	r15
    208a:	0f 93       	push	r16
    208c:	1f 93       	push	r17
    208e:	cf 93       	push	r28
    2090:	df 93       	push	r29
    2092:	ec 01       	movw	r28, r24
    2094:	c6 2e       	mov	r12, r22
    2096:	07 2f       	mov	r16, r23
    2098:	f4 2e       	mov	r15, r20
    209a:	42 30       	cpi	r20, 0x02	; 2
    209c:	11 f0       	breq	.+4      	; 0x20a2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
    209e:	ff 20       	and	r15, r15
    20a0:	51 f4       	brne	.+20     	; 0x20b6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    20a2:	8c 81       	ldd	r24, Y+4	; 0x04
    20a4:	9d 81       	ldd	r25, Y+5	; 0x05
    20a6:	00 97       	sbiw	r24, 0x00	; 0
    20a8:	09 f4       	brne	.+2      	; 0x20ac <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
    20aa:	a0 c0       	rjmp	.+320    	; 0x21ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    20ac:	8e 81       	ldd	r24, Y+6	; 0x06
    20ae:	9f 81       	ldd	r25, Y+7	; 0x07
    20b0:	00 97       	sbiw	r24, 0x00	; 0
    20b2:	09 f4       	brne	.+2      	; 0x20b6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    20b4:	9b c0       	rjmp	.+310    	; 0x21ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    20b6:	8f 2d       	mov	r24, r15
    20b8:	81 50       	subi	r24, 0x01	; 1
    20ba:	82 30       	cpi	r24, 0x02	; 2
    20bc:	50 f4       	brcc	.+20     	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    20be:	88 81       	ld	r24, Y
    20c0:	99 81       	ldd	r25, Y+1	; 0x01
    20c2:	00 97       	sbiw	r24, 0x00	; 0
    20c4:	09 f4       	brne	.+2      	; 0x20c8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
    20c6:	92 c0       	rjmp	.+292    	; 0x21ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    20c8:	8a 81       	ldd	r24, Y+2	; 0x02
    20ca:	9b 81       	ldd	r25, Y+3	; 0x03
    20cc:	00 97       	sbiw	r24, 0x00	; 0
    20ce:	09 f4       	brne	.+2      	; 0x20d2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    20d0:	8d c0       	rjmp	.+282    	; 0x21ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    20d2:	ce 01       	movw	r24, r28
    20d4:	6c 2d       	mov	r22, r12
    20d6:	70 2f       	mov	r23, r16
    20d8:	4f 2d       	mov	r20, r15
    20da:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <_ZN16PololuQTRSensors4readEPjh>
    20de:	ac 2c       	mov	r10, r12
    20e0:	b0 2e       	mov	r11, r16
    20e2:	00 e0       	ldi	r16, 0x00	; 0
    20e4:	10 e0       	ldi	r17, 0x00	; 0
    20e6:	88 24       	eor	r8, r8
    20e8:	99 24       	eor	r9, r9
    20ea:	7a c0       	rjmp	.+244    	; 0x21e0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    20ec:	8f 2d       	mov	r24, r15
    20ee:	81 30       	cpi	r24, 0x01	; 1
    20f0:	59 f4       	brne	.+22     	; 0x2108 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    20f2:	ea 81       	ldd	r30, Y+2	; 0x02
    20f4:	fb 81       	ldd	r31, Y+3	; 0x03
    20f6:	e0 0f       	add	r30, r16
    20f8:	f1 1f       	adc	r31, r17
    20fa:	c0 80       	ld	r12, Z
    20fc:	d1 80       	ldd	r13, Z+1	; 0x01
    20fe:	e8 81       	ld	r30, Y
    2100:	f9 81       	ldd	r31, Y+1	; 0x01
    2102:	e0 0f       	add	r30, r16
    2104:	f1 1f       	adc	r31, r17
    2106:	0d c0       	rjmp	.+26     	; 0x2122 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    2108:	8c 81       	ldd	r24, Y+4	; 0x04
    210a:	9d 81       	ldd	r25, Y+5	; 0x05
    210c:	ff 20       	and	r15, r15
    210e:	61 f4       	brne	.+24     	; 0x2128 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
    2110:	ee 81       	ldd	r30, Y+6	; 0x06
    2112:	ff 81       	ldd	r31, Y+7	; 0x07
    2114:	e0 0f       	add	r30, r16
    2116:	f1 1f       	adc	r31, r17
    2118:	c0 80       	ld	r12, Z
    211a:	d1 80       	ldd	r13, Z+1	; 0x01
    211c:	80 0f       	add	r24, r16
    211e:	91 1f       	adc	r25, r17
    2120:	fc 01       	movw	r30, r24
    2122:	40 81       	ld	r20, Z
    2124:	51 81       	ldd	r21, Z+1	; 0x01
    2126:	2b c0       	rjmp	.+86     	; 0x217e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    2128:	80 0f       	add	r24, r16
    212a:	91 1f       	adc	r25, r17
    212c:	fc 01       	movw	r30, r24
    212e:	80 81       	ld	r24, Z
    2130:	91 81       	ldd	r25, Z+1	; 0x01
    2132:	e8 81       	ld	r30, Y
    2134:	f9 81       	ldd	r31, Y+1	; 0x01
    2136:	e0 0f       	add	r30, r16
    2138:	f1 1f       	adc	r31, r17
    213a:	40 81       	ld	r20, Z
    213c:	51 81       	ldd	r21, Z+1	; 0x01
    213e:	ce 84       	ldd	r12, Y+14	; 0x0e
    2140:	df 84       	ldd	r13, Y+15	; 0x0f
    2142:	84 17       	cp	r24, r20
    2144:	95 07       	cpc	r25, r21
    2146:	10 f4       	brcc	.+4      	; 0x214c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
    2148:	a6 01       	movw	r20, r12
    214a:	04 c0       	rjmp	.+8      	; 0x2154 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
    214c:	4c 0d       	add	r20, r12
    214e:	5d 1d       	adc	r21, r13
    2150:	48 1b       	sub	r20, r24
    2152:	59 0b       	sbc	r21, r25
    2154:	ee 81       	ldd	r30, Y+6	; 0x06
    2156:	ff 81       	ldd	r31, Y+7	; 0x07
    2158:	e0 0f       	add	r30, r16
    215a:	f1 1f       	adc	r31, r17
    215c:	80 81       	ld	r24, Z
    215e:	91 81       	ldd	r25, Z+1	; 0x01
    2160:	ea 81       	ldd	r30, Y+2	; 0x02
    2162:	fb 81       	ldd	r31, Y+3	; 0x03
    2164:	e0 0f       	add	r30, r16
    2166:	f1 1f       	adc	r31, r17
    2168:	20 81       	ld	r18, Z
    216a:	31 81       	ldd	r19, Z+1	; 0x01
    216c:	ce 84       	ldd	r12, Y+14	; 0x0e
    216e:	df 84       	ldd	r13, Y+15	; 0x0f
    2170:	82 17       	cp	r24, r18
    2172:	93 07       	cpc	r25, r19
    2174:	20 f0       	brcs	.+8      	; 0x217e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    2176:	c2 0e       	add	r12, r18
    2178:	d3 1e       	adc	r13, r19
    217a:	c8 1a       	sub	r12, r24
    217c:	d9 0a       	sbc	r13, r25
    217e:	c4 1a       	sub	r12, r20
    2180:	d5 0a       	sbc	r13, r21
    2182:	d1 f0       	breq	.+52     	; 0x21b8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    2184:	f5 01       	movw	r30, r10
    2186:	60 81       	ld	r22, Z
    2188:	71 81       	ldd	r23, Z+1	; 0x01
    218a:	80 e0       	ldi	r24, 0x00	; 0
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	9a 01       	movw	r18, r20
    2190:	40 e0       	ldi	r20, 0x00	; 0
    2192:	50 e0       	ldi	r21, 0x00	; 0
    2194:	62 1b       	sub	r22, r18
    2196:	73 0b       	sbc	r23, r19
    2198:	84 0b       	sbc	r24, r20
    219a:	95 0b       	sbc	r25, r21
    219c:	28 ee       	ldi	r18, 0xE8	; 232
    219e:	33 e0       	ldi	r19, 0x03	; 3
    21a0:	40 e0       	ldi	r20, 0x00	; 0
    21a2:	50 e0       	ldi	r21, 0x00	; 0
    21a4:	0e 94 e6 12 	call	0x25cc	; 0x25cc <__mulsi3>
    21a8:	96 01       	movw	r18, r12
    21aa:	40 e0       	ldi	r20, 0x00	; 0
    21ac:	50 e0       	ldi	r21, 0x00	; 0
    21ae:	0e 94 4c 13 	call	0x2698	; 0x2698 <__divmodsi4>
    21b2:	37 fd       	sbrc	r19, 7
    21b4:	0a c0       	rjmp	.+20     	; 0x21ca <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    21b6:	02 c0       	rjmp	.+4      	; 0x21bc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
    21b8:	20 e0       	ldi	r18, 0x00	; 0
    21ba:	30 e0       	ldi	r19, 0x00	; 0
    21bc:	f3 e0       	ldi	r31, 0x03	; 3
    21be:	29 3e       	cpi	r18, 0xE9	; 233
    21c0:	3f 07       	cpc	r19, r31
    21c2:	2c f0       	brlt	.+10     	; 0x21ce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    21c4:	28 ee       	ldi	r18, 0xE8	; 232
    21c6:	33 e0       	ldi	r19, 0x03	; 3
    21c8:	02 c0       	rjmp	.+4      	; 0x21ce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    21ca:	20 e0       	ldi	r18, 0x00	; 0
    21cc:	30 e0       	ldi	r19, 0x00	; 0
    21ce:	f5 01       	movw	r30, r10
    21d0:	21 93       	st	Z+, r18
    21d2:	31 93       	st	Z+, r19
    21d4:	5f 01       	movw	r10, r30
    21d6:	08 94       	sec
    21d8:	81 1c       	adc	r8, r1
    21da:	91 1c       	adc	r9, r1
    21dc:	0e 5f       	subi	r16, 0xFE	; 254
    21de:	1f 4f       	sbci	r17, 0xFF	; 255
    21e0:	88 85       	ldd	r24, Y+8	; 0x08
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	88 16       	cp	r8, r24
    21e6:	99 06       	cpc	r9, r25
    21e8:	0c f4       	brge	.+2      	; 0x21ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    21ea:	80 cf       	rjmp	.-256    	; 0x20ec <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
    21ec:	df 91       	pop	r29
    21ee:	cf 91       	pop	r28
    21f0:	1f 91       	pop	r17
    21f2:	0f 91       	pop	r16
    21f4:	ff 90       	pop	r15
    21f6:	df 90       	pop	r13
    21f8:	cf 90       	pop	r12
    21fa:	bf 90       	pop	r11
    21fc:	af 90       	pop	r10
    21fe:	9f 90       	pop	r9
    2200:	8f 90       	pop	r8
    2202:	08 95       	ret

00002204 <_ZN16PololuQTRSensors8readLineEPjhh>:
    2204:	a5 e0       	ldi	r26, 0x05	; 5
    2206:	b0 e0       	ldi	r27, 0x00	; 0
    2208:	e8 e0       	ldi	r30, 0x08	; 8
    220a:	f1 e1       	ldi	r31, 0x11	; 17
    220c:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__prologue_saves__>
    2210:	4c 01       	movw	r8, r24
    2212:	c6 2e       	mov	r12, r22
    2214:	e7 2e       	mov	r14, r23
    2216:	2d 83       	std	Y+5, r18	; 0x05
    2218:	0e 94 3e 10 	call	0x207c	; 0x207c <_ZN16PololuQTRSensors14readCalibratedEPjh>
    221c:	d4 01       	movw	r26, r8
    221e:	18 96       	adiw	r26, 0x08	; 8
    2220:	4c 90       	ld	r4, X
    2222:	18 97       	sbiw	r26, 0x08	; 8
    2224:	de 2c       	mov	r13, r14
    2226:	64 2d       	mov	r22, r4
    2228:	70 e0       	ldi	r23, 0x00	; 0
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	28 ee       	ldi	r18, 0xE8	; 232
    2230:	33 e0       	ldi	r19, 0x03	; 3
    2232:	40 e0       	ldi	r20, 0x00	; 0
    2234:	50 e0       	ldi	r21, 0x00	; 0
    2236:	0e 94 e6 12 	call	0x25cc	; 0x25cc <__mulsi3>
    223a:	69 83       	std	Y+1, r22	; 0x01
    223c:	7a 83       	std	Y+2, r23	; 0x02
    223e:	8b 83       	std	Y+3, r24	; 0x03
    2240:	9c 83       	std	Y+4, r25	; 0x04
    2242:	ee 24       	eor	r14, r14
    2244:	ff 24       	eor	r15, r15
    2246:	87 01       	movw	r16, r14
    2248:	66 24       	eor	r6, r6
    224a:	77 24       	eor	r7, r7
    224c:	88 24       	eor	r8, r8
    224e:	99 24       	eor	r9, r9
    2250:	54 01       	movw	r10, r8
    2252:	55 24       	eor	r5, r5
    2254:	36 c0       	rjmp	.+108    	; 0x22c2 <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
    2256:	f6 01       	movw	r30, r12
    2258:	30 81       	ld	r19, Z
    225a:	21 81       	ldd	r18, Z+1	; 0x01
    225c:	42 e0       	ldi	r20, 0x02	; 2
    225e:	24 2e       	mov	r2, r20
    2260:	31 2c       	mov	r3, r1
    2262:	c2 0c       	add	r12, r2
    2264:	d3 1c       	adc	r13, r3
    2266:	c9 01       	movw	r24, r18
    2268:	49 2f       	mov	r20, r25
    226a:	58 2f       	mov	r21, r24
    226c:	1a 01       	movw	r2, r20
    226e:	2d 81       	ldd	r18, Y+5	; 0x05
    2270:	22 23       	and	r18, r18
    2272:	29 f0       	breq	.+10     	; 0x227e <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
    2274:	88 ee       	ldi	r24, 0xE8	; 232
    2276:	93 e0       	ldi	r25, 0x03	; 3
    2278:	82 19       	sub	r24, r2
    227a:	93 09       	sbc	r25, r3
    227c:	1c 01       	movw	r2, r24
    227e:	99 ec       	ldi	r25, 0xC9	; 201
    2280:	29 16       	cp	r2, r25
    2282:	31 04       	cpc	r3, r1
    2284:	2c f4       	brge	.+10     	; 0x2290 <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
    2286:	a3 e3       	ldi	r26, 0x33	; 51
    2288:	2a 16       	cp	r2, r26
    228a:	31 04       	cpc	r3, r1
    228c:	94 f0       	brlt	.+36     	; 0x22b2 <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
    228e:	02 c0       	rjmp	.+4      	; 0x2294 <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
    2290:	55 24       	eor	r5, r5
    2292:	53 94       	inc	r5
    2294:	b1 01       	movw	r22, r2
    2296:	88 27       	eor	r24, r24
    2298:	77 fd       	sbrc	r23, 7
    229a:	80 95       	com	r24
    229c:	98 2f       	mov	r25, r24
    229e:	a8 01       	movw	r20, r16
    22a0:	97 01       	movw	r18, r14
    22a2:	0e 94 e6 12 	call	0x25cc	; 0x25cc <__mulsi3>
    22a6:	86 0e       	add	r8, r22
    22a8:	97 1e       	adc	r9, r23
    22aa:	a8 1e       	adc	r10, r24
    22ac:	b9 1e       	adc	r11, r25
    22ae:	62 0c       	add	r6, r2
    22b0:	73 1c       	adc	r7, r3
    22b2:	88 ee       	ldi	r24, 0xE8	; 232
    22b4:	93 e0       	ldi	r25, 0x03	; 3
    22b6:	a0 e0       	ldi	r26, 0x00	; 0
    22b8:	b0 e0       	ldi	r27, 0x00	; 0
    22ba:	e8 0e       	add	r14, r24
    22bc:	f9 1e       	adc	r15, r25
    22be:	0a 1f       	adc	r16, r26
    22c0:	1b 1f       	adc	r17, r27
    22c2:	89 81       	ldd	r24, Y+1	; 0x01
    22c4:	9a 81       	ldd	r25, Y+2	; 0x02
    22c6:	ab 81       	ldd	r26, Y+3	; 0x03
    22c8:	bc 81       	ldd	r27, Y+4	; 0x04
    22ca:	e8 16       	cp	r14, r24
    22cc:	f9 06       	cpc	r15, r25
    22ce:	0a 07       	cpc	r16, r26
    22d0:	1b 07       	cpc	r17, r27
    22d2:	09 f6       	brne	.-126    	; 0x2256 <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
    22d4:	55 20       	and	r5, r5
    22d6:	f1 f4       	brne	.+60     	; 0x2314 <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    22d8:	55 24       	eor	r5, r5
    22da:	08 94       	sec
    22dc:	41 08       	sbc	r4, r1
    22de:	51 08       	sbc	r5, r1
    22e0:	24 ef       	ldi	r18, 0xF4	; 244
    22e2:	31 e0       	ldi	r19, 0x01	; 1
    22e4:	42 9e       	mul	r4, r18
    22e6:	c0 01       	movw	r24, r0
    22e8:	43 9e       	mul	r4, r19
    22ea:	90 0d       	add	r25, r0
    22ec:	52 9e       	mul	r5, r18
    22ee:	90 0d       	add	r25, r0
    22f0:	11 24       	eor	r1, r1
    22f2:	20 91 ab 01 	lds	r18, 0x01AB
    22f6:	30 91 ac 01 	lds	r19, 0x01AC
    22fa:	28 17       	cp	r18, r24
    22fc:	39 07       	cpc	r19, r25
    22fe:	b4 f0       	brlt	.+44     	; 0x232c <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
    2300:	88 ee       	ldi	r24, 0xE8	; 232
    2302:	93 e0       	ldi	r25, 0x03	; 3
    2304:	48 9e       	mul	r4, r24
    2306:	90 01       	movw	r18, r0
    2308:	49 9e       	mul	r4, r25
    230a:	30 0d       	add	r19, r0
    230c:	58 9e       	mul	r5, r24
    230e:	30 0d       	add	r19, r0
    2310:	11 24       	eor	r1, r1
    2312:	0e c0       	rjmp	.+28     	; 0x2330 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    2314:	93 01       	movw	r18, r6
    2316:	40 e0       	ldi	r20, 0x00	; 0
    2318:	50 e0       	ldi	r21, 0x00	; 0
    231a:	c5 01       	movw	r24, r10
    231c:	b4 01       	movw	r22, r8
    231e:	0e 94 2a 13 	call	0x2654	; 0x2654 <__udivmodsi4>
    2322:	20 93 ab 01 	sts	0x01AB, r18
    2326:	30 93 ac 01 	sts	0x01AC, r19
    232a:	02 c0       	rjmp	.+4      	; 0x2330 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    232c:	20 e0       	ldi	r18, 0x00	; 0
    232e:	30 e0       	ldi	r19, 0x00	; 0
    2330:	c9 01       	movw	r24, r18
    2332:	25 96       	adiw	r28, 0x05	; 5
    2334:	e2 e1       	ldi	r30, 0x12	; 18
    2336:	0c 94 92 13 	jmp	0x2724	; 0x2724 <__epilogue_restores__>

0000233a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    233a:	a7 e6       	ldi	r26, 0x67	; 103
    233c:	b0 e0       	ldi	r27, 0x00	; 0
    233e:	e3 ea       	ldi	r30, 0xA3	; 163
    2340:	f1 e1       	ldi	r31, 0x11	; 17
    2342:	0c 94 76 13 	jmp	0x26ec	; 0x26ec <__prologue_saves__>
    2346:	8c 01       	movw	r16, r24
    2348:	4b 01       	movw	r8, r22
    234a:	6a 01       	movw	r12, r20
    234c:	a6 96       	adiw	r28, 0x26	; 38
    234e:	2f af       	std	Y+63, r18	; 0x3f
    2350:	a6 97       	sbiw	r28, 0x26	; 38
    2352:	da 01       	movw	r26, r20
    2354:	8d 91       	ld	r24, X+
    2356:	9c 91       	ld	r25, X
    2358:	11 97       	sbiw	r26, 0x01	; 1
    235a:	00 97       	sbiw	r24, 0x00	; 0
    235c:	e9 f4       	brne	.+58     	; 0x2398 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
    235e:	f8 01       	movw	r30, r16
    2360:	80 85       	ldd	r24, Z+8	; 0x08
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	88 0f       	add	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
    236c:	d6 01       	movw	r26, r12
    236e:	11 96       	adiw	r26, 0x01	; 1
    2370:	9c 93       	st	X, r25
    2372:	8e 93       	st	-X, r24
    2374:	00 97       	sbiw	r24, 0x00	; 0
    2376:	09 f4       	brne	.+2      	; 0x237a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
    2378:	e2 c0       	rjmp	.+452    	; 0x253e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    237a:	fc 01       	movw	r30, r24
    237c:	80 e0       	ldi	r24, 0x00	; 0
    237e:	90 e0       	ldi	r25, 0x00	; 0
    2380:	03 c0       	rjmp	.+6      	; 0x2388 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
    2382:	11 92       	st	Z+, r1
    2384:	11 92       	st	Z+, r1
    2386:	01 96       	adiw	r24, 0x01	; 1
    2388:	d8 01       	movw	r26, r16
    238a:	18 96       	adiw	r26, 0x08	; 8
    238c:	2c 91       	ld	r18, X
    238e:	18 97       	sbiw	r26, 0x08	; 8
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	82 17       	cp	r24, r18
    2394:	93 07       	cpc	r25, r19
    2396:	ac f3       	brlt	.-22     	; 0x2382 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
    2398:	f4 01       	movw	r30, r8
    239a:	80 81       	ld	r24, Z
    239c:	91 81       	ldd	r25, Z+1	; 0x01
    239e:	00 97       	sbiw	r24, 0x00	; 0
    23a0:	89 f0       	breq	.+34     	; 0x23c4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
    23a2:	ee 24       	eor	r14, r14
    23a4:	ff 24       	eor	r15, r15
    23a6:	5e 01       	movw	r10, r28
    23a8:	08 94       	sec
    23aa:	a1 1c       	adc	r10, r1
    23ac:	b1 1c       	adc	r11, r1
    23ae:	b1 e4       	ldi	r27, 0x41	; 65
    23b0:	6b 2e       	mov	r6, r27
    23b2:	71 2c       	mov	r7, r1
    23b4:	6c 0e       	add	r6, r28
    23b6:	7d 1e       	adc	r7, r29
    23b8:	a1 e2       	ldi	r26, 0x21	; 33
    23ba:	4a 2e       	mov	r4, r26
    23bc:	51 2c       	mov	r5, r1
    23be:	4c 0e       	add	r4, r28
    23c0:	5d 1e       	adc	r5, r29
    23c2:	23 c0       	rjmp	.+70     	; 0x240a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    23c4:	d8 01       	movw	r26, r16
    23c6:	18 96       	adiw	r26, 0x08	; 8
    23c8:	8c 91       	ld	r24, X
    23ca:	90 e0       	ldi	r25, 0x00	; 0
    23cc:	88 0f       	add	r24, r24
    23ce:	99 1f       	adc	r25, r25
    23d0:	0e 94 c2 13 	call	0x2784	; 0x2784 <malloc>
    23d4:	f4 01       	movw	r30, r8
    23d6:	91 83       	std	Z+1, r25	; 0x01
    23d8:	80 83       	st	Z, r24
    23da:	00 97       	sbiw	r24, 0x00	; 0
    23dc:	09 f4       	brne	.+2      	; 0x23e0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
    23de:	af c0       	rjmp	.+350    	; 0x253e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    23e0:	fc 01       	movw	r30, r24
    23e2:	80 e0       	ldi	r24, 0x00	; 0
    23e4:	90 e0       	ldi	r25, 0x00	; 0
    23e6:	d8 01       	movw	r26, r16
    23e8:	07 c0       	rjmp	.+14     	; 0x23f8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
    23ea:	1e 96       	adiw	r26, 0x0e	; 14
    23ec:	2d 91       	ld	r18, X+
    23ee:	3c 91       	ld	r19, X
    23f0:	1f 97       	sbiw	r26, 0x0f	; 15
    23f2:	21 93       	st	Z+, r18
    23f4:	31 93       	st	Z+, r19
    23f6:	01 96       	adiw	r24, 0x01	; 1
    23f8:	18 96       	adiw	r26, 0x08	; 8
    23fa:	2c 91       	ld	r18, X
    23fc:	18 97       	sbiw	r26, 0x08	; 8
    23fe:	30 e0       	ldi	r19, 0x00	; 0
    2400:	82 17       	cp	r24, r18
    2402:	93 07       	cpc	r25, r19
    2404:	94 f3       	brlt	.-28     	; 0x23ea <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    2406:	8d 01       	movw	r16, r26
    2408:	cc cf       	rjmp	.-104    	; 0x23a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    240a:	c8 01       	movw	r24, r16
    240c:	b5 01       	movw	r22, r10
    240e:	a6 96       	adiw	r28, 0x26	; 38
    2410:	4f ad       	ldd	r20, Y+63	; 0x3f
    2412:	a6 97       	sbiw	r28, 0x26	; 38
    2414:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <_ZN16PololuQTRSensors4readEPjh>
    2418:	d8 01       	movw	r26, r16
    241a:	18 96       	adiw	r26, 0x08	; 8
    241c:	8c 91       	ld	r24, X
    241e:	18 97       	sbiw	r26, 0x08	; 8
    2420:	e8 2f       	mov	r30, r24
    2422:	f0 e0       	ldi	r31, 0x00	; 0
    2424:	a5 96       	adiw	r28, 0x25	; 37
    2426:	ff af       	std	Y+63, r31	; 0x3f
    2428:	ee af       	std	Y+62, r30	; 0x3e
    242a:	a5 97       	sbiw	r28, 0x25	; 37
    242c:	13 01       	movw	r2, r6
    242e:	f5 01       	movw	r30, r10
    2430:	a3 96       	adiw	r28, 0x23	; 35
    2432:	5f ae       	std	Y+63, r5	; 0x3f
    2434:	4e ae       	std	Y+62, r4	; 0x3e
    2436:	a3 97       	sbiw	r28, 0x23	; 35
    2438:	93 01       	movw	r18, r6
    243a:	40 e0       	ldi	r20, 0x00	; 0
    243c:	50 e0       	ldi	r21, 0x00	; 0
    243e:	a8 96       	adiw	r28, 0x28	; 40
    2440:	5f ae       	std	Y+63, r5	; 0x3f
    2442:	4e ae       	std	Y+62, r4	; 0x3e
    2444:	a8 97       	sbiw	r28, 0x28	; 40
    2446:	37 c0       	rjmp	.+110    	; 0x24b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    2448:	e1 14       	cp	r14, r1
    244a:	f1 04       	cpc	r15, r1
    244c:	61 f0       	breq	.+24     	; 0x2466 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    244e:	a8 96       	adiw	r28, 0x28	; 40
    2450:	ae ad       	ldd	r26, Y+62	; 0x3e
    2452:	bf ad       	ldd	r27, Y+63	; 0x3f
    2454:	a8 97       	sbiw	r28, 0x28	; 40
    2456:	6d 91       	ld	r22, X+
    2458:	7c 91       	ld	r23, X
    245a:	11 97       	sbiw	r26, 0x01	; 1
    245c:	80 81       	ld	r24, Z
    245e:	91 81       	ldd	r25, Z+1	; 0x01
    2460:	68 17       	cp	r22, r24
    2462:	79 07       	cpc	r23, r25
    2464:	60 f4       	brcc	.+24     	; 0x247e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    2466:	80 81       	ld	r24, Z
    2468:	91 81       	ldd	r25, Z+1	; 0x01
    246a:	a8 96       	adiw	r28, 0x28	; 40
    246c:	ae ad       	ldd	r26, Y+62	; 0x3e
    246e:	bf ad       	ldd	r27, Y+63	; 0x3f
    2470:	a8 97       	sbiw	r28, 0x28	; 40
    2472:	11 96       	adiw	r26, 0x01	; 1
    2474:	9c 93       	st	X, r25
    2476:	8e 93       	st	-X, r24
    2478:	e1 14       	cp	r14, r1
    247a:	f1 04       	cpc	r15, r1
    247c:	49 f0       	breq	.+18     	; 0x2490 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    247e:	d9 01       	movw	r26, r18
    2480:	6d 91       	ld	r22, X+
    2482:	7c 91       	ld	r23, X
    2484:	11 97       	sbiw	r26, 0x01	; 1
    2486:	80 81       	ld	r24, Z
    2488:	91 81       	ldd	r25, Z+1	; 0x01
    248a:	86 17       	cp	r24, r22
    248c:	97 07       	cpc	r25, r23
    248e:	28 f4       	brcc	.+10     	; 0x249a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    2490:	80 81       	ld	r24, Z
    2492:	91 81       	ldd	r25, Z+1	; 0x01
    2494:	d9 01       	movw	r26, r18
    2496:	8d 93       	st	X+, r24
    2498:	9c 93       	st	X, r25
    249a:	4f 5f       	subi	r20, 0xFF	; 255
    249c:	5f 4f       	sbci	r21, 0xFF	; 255
    249e:	2e 5f       	subi	r18, 0xFE	; 254
    24a0:	3f 4f       	sbci	r19, 0xFF	; 255
    24a2:	32 96       	adiw	r30, 0x02	; 2
    24a4:	a8 96       	adiw	r28, 0x28	; 40
    24a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    24a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    24aa:	a8 97       	sbiw	r28, 0x28	; 40
    24ac:	02 96       	adiw	r24, 0x02	; 2
    24ae:	a8 96       	adiw	r28, 0x28	; 40
    24b0:	9f af       	std	Y+63, r25	; 0x3f
    24b2:	8e af       	std	Y+62, r24	; 0x3e
    24b4:	a8 97       	sbiw	r28, 0x28	; 40
    24b6:	a5 96       	adiw	r28, 0x25	; 37
    24b8:	ae ad       	ldd	r26, Y+62	; 0x3e
    24ba:	bf ad       	ldd	r27, Y+63	; 0x3f
    24bc:	a5 97       	sbiw	r28, 0x25	; 37
    24be:	4a 17       	cp	r20, r26
    24c0:	5b 07       	cpc	r21, r27
    24c2:	14 f2       	brlt	.-124    	; 0x2448 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    24c4:	08 94       	sec
    24c6:	e1 1c       	adc	r14, r1
    24c8:	f1 1c       	adc	r15, r1
    24ca:	ba e0       	ldi	r27, 0x0A	; 10
    24cc:	eb 16       	cp	r14, r27
    24ce:	f1 04       	cpc	r15, r1
    24d0:	09 f0       	breq	.+2      	; 0x24d4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    24d2:	9b cf       	rjmp	.-202    	; 0x240a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    24d4:	80 e0       	ldi	r24, 0x00	; 0
    24d6:	90 e0       	ldi	r25, 0x00	; 0
    24d8:	2c c0       	rjmp	.+88     	; 0x2532 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    24da:	f1 01       	movw	r30, r2
    24dc:	41 91       	ld	r20, Z+
    24de:	51 91       	ld	r21, Z+
    24e0:	1f 01       	movw	r2, r30
    24e2:	bc 01       	movw	r22, r24
    24e4:	66 0f       	add	r22, r22
    24e6:	77 1f       	adc	r23, r23
    24e8:	d6 01       	movw	r26, r12
    24ea:	ed 91       	ld	r30, X+
    24ec:	fc 91       	ld	r31, X
    24ee:	11 97       	sbiw	r26, 0x01	; 1
    24f0:	e6 0f       	add	r30, r22
    24f2:	f7 1f       	adc	r31, r23
    24f4:	20 81       	ld	r18, Z
    24f6:	31 81       	ldd	r19, Z+1	; 0x01
    24f8:	24 17       	cp	r18, r20
    24fa:	35 07       	cpc	r19, r21
    24fc:	10 f4       	brcc	.+4      	; 0x2502 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    24fe:	51 83       	std	Z+1, r21	; 0x01
    2500:	40 83       	st	Z, r20
    2502:	a3 96       	adiw	r28, 0x23	; 35
    2504:	ee ad       	ldd	r30, Y+62	; 0x3e
    2506:	ff ad       	ldd	r31, Y+63	; 0x3f
    2508:	a3 97       	sbiw	r28, 0x23	; 35
    250a:	41 91       	ld	r20, Z+
    250c:	51 91       	ld	r21, Z+
    250e:	a3 96       	adiw	r28, 0x23	; 35
    2510:	ff af       	std	Y+63, r31	; 0x3f
    2512:	ee af       	std	Y+62, r30	; 0x3e
    2514:	a3 97       	sbiw	r28, 0x23	; 35
    2516:	d4 01       	movw	r26, r8
    2518:	ed 91       	ld	r30, X+
    251a:	fc 91       	ld	r31, X
    251c:	11 97       	sbiw	r26, 0x01	; 1
    251e:	e6 0f       	add	r30, r22
    2520:	f7 1f       	adc	r31, r23
    2522:	20 81       	ld	r18, Z
    2524:	31 81       	ldd	r19, Z+1	; 0x01
    2526:	42 17       	cp	r20, r18
    2528:	53 07       	cpc	r21, r19
    252a:	10 f4       	brcc	.+4      	; 0x2530 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    252c:	51 83       	std	Z+1, r21	; 0x01
    252e:	40 83       	st	Z, r20
    2530:	01 96       	adiw	r24, 0x01	; 1
    2532:	f8 01       	movw	r30, r16
    2534:	20 85       	ldd	r18, Z+8	; 0x08
    2536:	30 e0       	ldi	r19, 0x00	; 0
    2538:	82 17       	cp	r24, r18
    253a:	93 07       	cpc	r25, r19
    253c:	74 f2       	brlt	.-100    	; 0x24da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    253e:	c9 59       	subi	r28, 0x99	; 153
    2540:	df 4f       	sbci	r29, 0xFF	; 255
    2542:	e2 e1       	ldi	r30, 0x12	; 18
    2544:	0c 94 92 13 	jmp	0x2724	; 0x2724 <__epilogue_restores__>

00002548 <_ZN16PololuQTRSensors9calibrateEh>:
    2548:	1f 93       	push	r17
    254a:	cf 93       	push	r28
    254c:	df 93       	push	r29
    254e:	ec 01       	movw	r28, r24
    2550:	16 2f       	mov	r17, r22
    2552:	86 2f       	mov	r24, r22
    2554:	81 50       	subi	r24, 0x01	; 1
    2556:	82 30       	cpi	r24, 0x02	; 2
    2558:	58 f4       	brcc	.+22     	; 0x2570 <_ZN16PololuQTRSensors9calibrateEh+0x28>
    255a:	ae 01       	movw	r20, r28
    255c:	4e 5f       	subi	r20, 0xFE	; 254
    255e:	5f 4f       	sbci	r21, 0xFF	; 255
    2560:	ce 01       	movw	r24, r28
    2562:	be 01       	movw	r22, r28
    2564:	21 e0       	ldi	r18, 0x01	; 1
    2566:	0e 94 9d 11 	call	0x233a	; 0x233a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    256a:	12 30       	cpi	r17, 0x02	; 2
    256c:	19 f0       	breq	.+6      	; 0x2574 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    256e:	0c c0       	rjmp	.+24     	; 0x2588 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2570:	66 23       	and	r22, r22
    2572:	51 f4       	brne	.+20     	; 0x2588 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2574:	be 01       	movw	r22, r28
    2576:	6c 5f       	subi	r22, 0xFC	; 252
    2578:	7f 4f       	sbci	r23, 0xFF	; 255
    257a:	ae 01       	movw	r20, r28
    257c:	4a 5f       	subi	r20, 0xFA	; 250
    257e:	5f 4f       	sbci	r21, 0xFF	; 255
    2580:	ce 01       	movw	r24, r28
    2582:	20 e0       	ldi	r18, 0x00	; 0
    2584:	0e 94 9d 11 	call	0x233a	; 0x233a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2588:	df 91       	pop	r29
    258a:	cf 91       	pop	r28
    258c:	1f 91       	pop	r17
    258e:	08 95       	ret

00002590 <_ZN16PololuQTRSensorsD1Ev>:
    2590:	cf 93       	push	r28
    2592:	df 93       	push	r29
    2594:	ec 01       	movw	r28, r24
    2596:	8a 81       	ldd	r24, Y+2	; 0x02
    2598:	9b 81       	ldd	r25, Y+3	; 0x03
    259a:	00 97       	sbiw	r24, 0x00	; 0
    259c:	11 f0       	breq	.+4      	; 0x25a2 <_ZN16PololuQTRSensorsD1Ev+0x12>
    259e:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
    25a2:	8e 81       	ldd	r24, Y+6	; 0x06
    25a4:	9f 81       	ldd	r25, Y+7	; 0x07
    25a6:	00 97       	sbiw	r24, 0x00	; 0
    25a8:	11 f0       	breq	.+4      	; 0x25ae <_ZN16PololuQTRSensorsD1Ev+0x1e>
    25aa:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
    25ae:	88 81       	ld	r24, Y
    25b0:	99 81       	ldd	r25, Y+1	; 0x01
    25b2:	00 97       	sbiw	r24, 0x00	; 0
    25b4:	11 f0       	breq	.+4      	; 0x25ba <_ZN16PololuQTRSensorsD1Ev+0x2a>
    25b6:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
    25ba:	8c 81       	ldd	r24, Y+4	; 0x04
    25bc:	9d 81       	ldd	r25, Y+5	; 0x05
    25be:	00 97       	sbiw	r24, 0x00	; 0
    25c0:	11 f0       	breq	.+4      	; 0x25c6 <_ZN16PololuQTRSensorsD1Ev+0x36>
    25c2:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <free>
    25c6:	df 91       	pop	r29
    25c8:	cf 91       	pop	r28
    25ca:	08 95       	ret

000025cc <__mulsi3>:
    25cc:	db 01       	movw	r26, r22
    25ce:	8f 93       	push	r24
    25d0:	9f 93       	push	r25
    25d2:	0e 94 6b 13 	call	0x26d6	; 0x26d6 <__muluhisi3>
    25d6:	bf 91       	pop	r27
    25d8:	af 91       	pop	r26
    25da:	a2 9f       	mul	r26, r18
    25dc:	80 0d       	add	r24, r0
    25de:	91 1d       	adc	r25, r1
    25e0:	a3 9f       	mul	r26, r19
    25e2:	90 0d       	add	r25, r0
    25e4:	b2 9f       	mul	r27, r18
    25e6:	90 0d       	add	r25, r0
    25e8:	11 24       	eor	r1, r1
    25ea:	08 95       	ret

000025ec <__udivmodqi4>:
    25ec:	99 1b       	sub	r25, r25
    25ee:	79 e0       	ldi	r23, 0x09	; 9
    25f0:	04 c0       	rjmp	.+8      	; 0x25fa <__udivmodqi4_ep>

000025f2 <__udivmodqi4_loop>:
    25f2:	99 1f       	adc	r25, r25
    25f4:	96 17       	cp	r25, r22
    25f6:	08 f0       	brcs	.+2      	; 0x25fa <__udivmodqi4_ep>
    25f8:	96 1b       	sub	r25, r22

000025fa <__udivmodqi4_ep>:
    25fa:	88 1f       	adc	r24, r24
    25fc:	7a 95       	dec	r23
    25fe:	c9 f7       	brne	.-14     	; 0x25f2 <__udivmodqi4_loop>
    2600:	80 95       	com	r24
    2602:	08 95       	ret

00002604 <__udivmodhi4>:
    2604:	aa 1b       	sub	r26, r26
    2606:	bb 1b       	sub	r27, r27
    2608:	51 e1       	ldi	r21, 0x11	; 17
    260a:	07 c0       	rjmp	.+14     	; 0x261a <__udivmodhi4_ep>

0000260c <__udivmodhi4_loop>:
    260c:	aa 1f       	adc	r26, r26
    260e:	bb 1f       	adc	r27, r27
    2610:	a6 17       	cp	r26, r22
    2612:	b7 07       	cpc	r27, r23
    2614:	10 f0       	brcs	.+4      	; 0x261a <__udivmodhi4_ep>
    2616:	a6 1b       	sub	r26, r22
    2618:	b7 0b       	sbc	r27, r23

0000261a <__udivmodhi4_ep>:
    261a:	88 1f       	adc	r24, r24
    261c:	99 1f       	adc	r25, r25
    261e:	5a 95       	dec	r21
    2620:	a9 f7       	brne	.-22     	; 0x260c <__udivmodhi4_loop>
    2622:	80 95       	com	r24
    2624:	90 95       	com	r25
    2626:	bc 01       	movw	r22, r24
    2628:	cd 01       	movw	r24, r26
    262a:	08 95       	ret

0000262c <__divmodhi4>:
    262c:	97 fb       	bst	r25, 7
    262e:	07 2e       	mov	r0, r23
    2630:	16 f4       	brtc	.+4      	; 0x2636 <__divmodhi4+0xa>
    2632:	00 94       	com	r0
    2634:	07 d0       	rcall	.+14     	; 0x2644 <__divmodhi4_neg1>
    2636:	77 fd       	sbrc	r23, 7
    2638:	09 d0       	rcall	.+18     	; 0x264c <__divmodhi4_neg2>
    263a:	0e 94 02 13 	call	0x2604	; 0x2604 <__udivmodhi4>
    263e:	07 fc       	sbrc	r0, 7
    2640:	05 d0       	rcall	.+10     	; 0x264c <__divmodhi4_neg2>
    2642:	3e f4       	brtc	.+14     	; 0x2652 <__divmodhi4_exit>

00002644 <__divmodhi4_neg1>:
    2644:	90 95       	com	r25
    2646:	81 95       	neg	r24
    2648:	9f 4f       	sbci	r25, 0xFF	; 255
    264a:	08 95       	ret

0000264c <__divmodhi4_neg2>:
    264c:	70 95       	com	r23
    264e:	61 95       	neg	r22
    2650:	7f 4f       	sbci	r23, 0xFF	; 255

00002652 <__divmodhi4_exit>:
    2652:	08 95       	ret

00002654 <__udivmodsi4>:
    2654:	a1 e2       	ldi	r26, 0x21	; 33
    2656:	1a 2e       	mov	r1, r26
    2658:	aa 1b       	sub	r26, r26
    265a:	bb 1b       	sub	r27, r27
    265c:	fd 01       	movw	r30, r26
    265e:	0d c0       	rjmp	.+26     	; 0x267a <__udivmodsi4_ep>

00002660 <__udivmodsi4_loop>:
    2660:	aa 1f       	adc	r26, r26
    2662:	bb 1f       	adc	r27, r27
    2664:	ee 1f       	adc	r30, r30
    2666:	ff 1f       	adc	r31, r31
    2668:	a2 17       	cp	r26, r18
    266a:	b3 07       	cpc	r27, r19
    266c:	e4 07       	cpc	r30, r20
    266e:	f5 07       	cpc	r31, r21
    2670:	20 f0       	brcs	.+8      	; 0x267a <__udivmodsi4_ep>
    2672:	a2 1b       	sub	r26, r18
    2674:	b3 0b       	sbc	r27, r19
    2676:	e4 0b       	sbc	r30, r20
    2678:	f5 0b       	sbc	r31, r21

0000267a <__udivmodsi4_ep>:
    267a:	66 1f       	adc	r22, r22
    267c:	77 1f       	adc	r23, r23
    267e:	88 1f       	adc	r24, r24
    2680:	99 1f       	adc	r25, r25
    2682:	1a 94       	dec	r1
    2684:	69 f7       	brne	.-38     	; 0x2660 <__udivmodsi4_loop>
    2686:	60 95       	com	r22
    2688:	70 95       	com	r23
    268a:	80 95       	com	r24
    268c:	90 95       	com	r25
    268e:	9b 01       	movw	r18, r22
    2690:	ac 01       	movw	r20, r24
    2692:	bd 01       	movw	r22, r26
    2694:	cf 01       	movw	r24, r30
    2696:	08 95       	ret

00002698 <__divmodsi4>:
    2698:	05 2e       	mov	r0, r21
    269a:	97 fb       	bst	r25, 7
    269c:	1e f4       	brtc	.+6      	; 0x26a4 <__divmodsi4+0xc>
    269e:	00 94       	com	r0
    26a0:	0e 94 63 13 	call	0x26c6	; 0x26c6 <__negsi2>
    26a4:	57 fd       	sbrc	r21, 7
    26a6:	07 d0       	rcall	.+14     	; 0x26b6 <__divmodsi4_neg2>
    26a8:	0e 94 2a 13 	call	0x2654	; 0x2654 <__udivmodsi4>
    26ac:	07 fc       	sbrc	r0, 7
    26ae:	03 d0       	rcall	.+6      	; 0x26b6 <__divmodsi4_neg2>
    26b0:	4e f4       	brtc	.+18     	; 0x26c4 <__divmodsi4_exit>
    26b2:	0c 94 63 13 	jmp	0x26c6	; 0x26c6 <__negsi2>

000026b6 <__divmodsi4_neg2>:
    26b6:	50 95       	com	r21
    26b8:	40 95       	com	r20
    26ba:	30 95       	com	r19
    26bc:	21 95       	neg	r18
    26be:	3f 4f       	sbci	r19, 0xFF	; 255
    26c0:	4f 4f       	sbci	r20, 0xFF	; 255
    26c2:	5f 4f       	sbci	r21, 0xFF	; 255

000026c4 <__divmodsi4_exit>:
    26c4:	08 95       	ret

000026c6 <__negsi2>:
    26c6:	90 95       	com	r25
    26c8:	80 95       	com	r24
    26ca:	70 95       	com	r23
    26cc:	61 95       	neg	r22
    26ce:	7f 4f       	sbci	r23, 0xFF	; 255
    26d0:	8f 4f       	sbci	r24, 0xFF	; 255
    26d2:	9f 4f       	sbci	r25, 0xFF	; 255
    26d4:	08 95       	ret

000026d6 <__muluhisi3>:
    26d6:	0e 94 b3 13 	call	0x2766	; 0x2766 <__umulhisi3>
    26da:	a5 9f       	mul	r26, r21
    26dc:	90 0d       	add	r25, r0
    26de:	b4 9f       	mul	r27, r20
    26e0:	90 0d       	add	r25, r0
    26e2:	a4 9f       	mul	r26, r20
    26e4:	80 0d       	add	r24, r0
    26e6:	91 1d       	adc	r25, r1
    26e8:	11 24       	eor	r1, r1
    26ea:	08 95       	ret

000026ec <__prologue_saves__>:
    26ec:	2f 92       	push	r2
    26ee:	3f 92       	push	r3
    26f0:	4f 92       	push	r4
    26f2:	5f 92       	push	r5
    26f4:	6f 92       	push	r6
    26f6:	7f 92       	push	r7
    26f8:	8f 92       	push	r8
    26fa:	9f 92       	push	r9
    26fc:	af 92       	push	r10
    26fe:	bf 92       	push	r11
    2700:	cf 92       	push	r12
    2702:	df 92       	push	r13
    2704:	ef 92       	push	r14
    2706:	ff 92       	push	r15
    2708:	0f 93       	push	r16
    270a:	1f 93       	push	r17
    270c:	cf 93       	push	r28
    270e:	df 93       	push	r29
    2710:	cd b7       	in	r28, 0x3d	; 61
    2712:	de b7       	in	r29, 0x3e	; 62
    2714:	ca 1b       	sub	r28, r26
    2716:	db 0b       	sbc	r29, r27
    2718:	0f b6       	in	r0, 0x3f	; 63
    271a:	f8 94       	cli
    271c:	de bf       	out	0x3e, r29	; 62
    271e:	0f be       	out	0x3f, r0	; 63
    2720:	cd bf       	out	0x3d, r28	; 61
    2722:	09 94       	ijmp

00002724 <__epilogue_restores__>:
    2724:	2a 88       	ldd	r2, Y+18	; 0x12
    2726:	39 88       	ldd	r3, Y+17	; 0x11
    2728:	48 88       	ldd	r4, Y+16	; 0x10
    272a:	5f 84       	ldd	r5, Y+15	; 0x0f
    272c:	6e 84       	ldd	r6, Y+14	; 0x0e
    272e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2730:	8c 84       	ldd	r8, Y+12	; 0x0c
    2732:	9b 84       	ldd	r9, Y+11	; 0x0b
    2734:	aa 84       	ldd	r10, Y+10	; 0x0a
    2736:	b9 84       	ldd	r11, Y+9	; 0x09
    2738:	c8 84       	ldd	r12, Y+8	; 0x08
    273a:	df 80       	ldd	r13, Y+7	; 0x07
    273c:	ee 80       	ldd	r14, Y+6	; 0x06
    273e:	fd 80       	ldd	r15, Y+5	; 0x05
    2740:	0c 81       	ldd	r16, Y+4	; 0x04
    2742:	1b 81       	ldd	r17, Y+3	; 0x03
    2744:	aa 81       	ldd	r26, Y+2	; 0x02
    2746:	b9 81       	ldd	r27, Y+1	; 0x01
    2748:	ce 0f       	add	r28, r30
    274a:	d1 1d       	adc	r29, r1
    274c:	0f b6       	in	r0, 0x3f	; 63
    274e:	f8 94       	cli
    2750:	de bf       	out	0x3e, r29	; 62
    2752:	0f be       	out	0x3f, r0	; 63
    2754:	cd bf       	out	0x3d, r28	; 61
    2756:	ed 01       	movw	r28, r26
    2758:	08 95       	ret

0000275a <__tablejump2__>:
    275a:	ee 0f       	add	r30, r30
    275c:	ff 1f       	adc	r31, r31

0000275e <__tablejump__>:
    275e:	05 90       	lpm	r0, Z+
    2760:	f4 91       	lpm	r31, Z
    2762:	e0 2d       	mov	r30, r0
    2764:	09 94       	ijmp

00002766 <__umulhisi3>:
    2766:	a2 9f       	mul	r26, r18
    2768:	b0 01       	movw	r22, r0
    276a:	b3 9f       	mul	r27, r19
    276c:	c0 01       	movw	r24, r0
    276e:	a3 9f       	mul	r26, r19
    2770:	70 0d       	add	r23, r0
    2772:	81 1d       	adc	r24, r1
    2774:	11 24       	eor	r1, r1
    2776:	91 1d       	adc	r25, r1
    2778:	b2 9f       	mul	r27, r18
    277a:	70 0d       	add	r23, r0
    277c:	81 1d       	adc	r24, r1
    277e:	11 24       	eor	r1, r1
    2780:	91 1d       	adc	r25, r1
    2782:	08 95       	ret

00002784 <malloc>:
    2784:	cf 93       	push	r28
    2786:	df 93       	push	r29
    2788:	82 30       	cpi	r24, 0x02	; 2
    278a:	91 05       	cpc	r25, r1
    278c:	10 f4       	brcc	.+4      	; 0x2792 <malloc+0xe>
    278e:	82 e0       	ldi	r24, 0x02	; 2
    2790:	90 e0       	ldi	r25, 0x00	; 0
    2792:	e0 91 ba 01 	lds	r30, 0x01BA
    2796:	f0 91 bb 01 	lds	r31, 0x01BB
    279a:	20 e0       	ldi	r18, 0x00	; 0
    279c:	30 e0       	ldi	r19, 0x00	; 0
    279e:	a0 e0       	ldi	r26, 0x00	; 0
    27a0:	b0 e0       	ldi	r27, 0x00	; 0
    27a2:	30 97       	sbiw	r30, 0x00	; 0
    27a4:	39 f1       	breq	.+78     	; 0x27f4 <malloc+0x70>
    27a6:	40 81       	ld	r20, Z
    27a8:	51 81       	ldd	r21, Z+1	; 0x01
    27aa:	48 17       	cp	r20, r24
    27ac:	59 07       	cpc	r21, r25
    27ae:	b8 f0       	brcs	.+46     	; 0x27de <malloc+0x5a>
    27b0:	48 17       	cp	r20, r24
    27b2:	59 07       	cpc	r21, r25
    27b4:	71 f4       	brne	.+28     	; 0x27d2 <malloc+0x4e>
    27b6:	82 81       	ldd	r24, Z+2	; 0x02
    27b8:	93 81       	ldd	r25, Z+3	; 0x03
    27ba:	10 97       	sbiw	r26, 0x00	; 0
    27bc:	29 f0       	breq	.+10     	; 0x27c8 <malloc+0x44>
    27be:	13 96       	adiw	r26, 0x03	; 3
    27c0:	9c 93       	st	X, r25
    27c2:	8e 93       	st	-X, r24
    27c4:	12 97       	sbiw	r26, 0x02	; 2
    27c6:	2c c0       	rjmp	.+88     	; 0x2820 <malloc+0x9c>
    27c8:	90 93 bb 01 	sts	0x01BB, r25
    27cc:	80 93 ba 01 	sts	0x01BA, r24
    27d0:	27 c0       	rjmp	.+78     	; 0x2820 <malloc+0x9c>
    27d2:	21 15       	cp	r18, r1
    27d4:	31 05       	cpc	r19, r1
    27d6:	31 f0       	breq	.+12     	; 0x27e4 <malloc+0x60>
    27d8:	42 17       	cp	r20, r18
    27da:	53 07       	cpc	r21, r19
    27dc:	18 f0       	brcs	.+6      	; 0x27e4 <malloc+0x60>
    27de:	a9 01       	movw	r20, r18
    27e0:	db 01       	movw	r26, r22
    27e2:	01 c0       	rjmp	.+2      	; 0x27e6 <malloc+0x62>
    27e4:	ef 01       	movw	r28, r30
    27e6:	9a 01       	movw	r18, r20
    27e8:	bd 01       	movw	r22, r26
    27ea:	df 01       	movw	r26, r30
    27ec:	02 80       	ldd	r0, Z+2	; 0x02
    27ee:	f3 81       	ldd	r31, Z+3	; 0x03
    27f0:	e0 2d       	mov	r30, r0
    27f2:	d7 cf       	rjmp	.-82     	; 0x27a2 <malloc+0x1e>
    27f4:	21 15       	cp	r18, r1
    27f6:	31 05       	cpc	r19, r1
    27f8:	f9 f0       	breq	.+62     	; 0x2838 <malloc+0xb4>
    27fa:	28 1b       	sub	r18, r24
    27fc:	39 0b       	sbc	r19, r25
    27fe:	24 30       	cpi	r18, 0x04	; 4
    2800:	31 05       	cpc	r19, r1
    2802:	80 f4       	brcc	.+32     	; 0x2824 <malloc+0xa0>
    2804:	8a 81       	ldd	r24, Y+2	; 0x02
    2806:	9b 81       	ldd	r25, Y+3	; 0x03
    2808:	61 15       	cp	r22, r1
    280a:	71 05       	cpc	r23, r1
    280c:	21 f0       	breq	.+8      	; 0x2816 <malloc+0x92>
    280e:	fb 01       	movw	r30, r22
    2810:	93 83       	std	Z+3, r25	; 0x03
    2812:	82 83       	std	Z+2, r24	; 0x02
    2814:	04 c0       	rjmp	.+8      	; 0x281e <malloc+0x9a>
    2816:	90 93 bb 01 	sts	0x01BB, r25
    281a:	80 93 ba 01 	sts	0x01BA, r24
    281e:	fe 01       	movw	r30, r28
    2820:	32 96       	adiw	r30, 0x02	; 2
    2822:	44 c0       	rjmp	.+136    	; 0x28ac <malloc+0x128>
    2824:	fe 01       	movw	r30, r28
    2826:	e2 0f       	add	r30, r18
    2828:	f3 1f       	adc	r31, r19
    282a:	81 93       	st	Z+, r24
    282c:	91 93       	st	Z+, r25
    282e:	22 50       	subi	r18, 0x02	; 2
    2830:	31 09       	sbc	r19, r1
    2832:	39 83       	std	Y+1, r19	; 0x01
    2834:	28 83       	st	Y, r18
    2836:	3a c0       	rjmp	.+116    	; 0x28ac <malloc+0x128>
    2838:	20 91 b8 01 	lds	r18, 0x01B8
    283c:	30 91 b9 01 	lds	r19, 0x01B9
    2840:	23 2b       	or	r18, r19
    2842:	41 f4       	brne	.+16     	; 0x2854 <malloc+0xd0>
    2844:	20 91 2b 01 	lds	r18, 0x012B
    2848:	30 91 2c 01 	lds	r19, 0x012C
    284c:	30 93 b9 01 	sts	0x01B9, r19
    2850:	20 93 b8 01 	sts	0x01B8, r18
    2854:	20 91 29 01 	lds	r18, 0x0129
    2858:	30 91 2a 01 	lds	r19, 0x012A
    285c:	21 15       	cp	r18, r1
    285e:	31 05       	cpc	r19, r1
    2860:	41 f4       	brne	.+16     	; 0x2872 <malloc+0xee>
    2862:	2d b7       	in	r18, 0x3d	; 61
    2864:	3e b7       	in	r19, 0x3e	; 62
    2866:	40 91 2d 01 	lds	r20, 0x012D
    286a:	50 91 2e 01 	lds	r21, 0x012E
    286e:	24 1b       	sub	r18, r20
    2870:	35 0b       	sbc	r19, r21
    2872:	e0 91 b8 01 	lds	r30, 0x01B8
    2876:	f0 91 b9 01 	lds	r31, 0x01B9
    287a:	e2 17       	cp	r30, r18
    287c:	f3 07       	cpc	r31, r19
    287e:	a0 f4       	brcc	.+40     	; 0x28a8 <malloc+0x124>
    2880:	2e 1b       	sub	r18, r30
    2882:	3f 0b       	sbc	r19, r31
    2884:	28 17       	cp	r18, r24
    2886:	39 07       	cpc	r19, r25
    2888:	78 f0       	brcs	.+30     	; 0x28a8 <malloc+0x124>
    288a:	ac 01       	movw	r20, r24
    288c:	4e 5f       	subi	r20, 0xFE	; 254
    288e:	5f 4f       	sbci	r21, 0xFF	; 255
    2890:	24 17       	cp	r18, r20
    2892:	35 07       	cpc	r19, r21
    2894:	48 f0       	brcs	.+18     	; 0x28a8 <malloc+0x124>
    2896:	4e 0f       	add	r20, r30
    2898:	5f 1f       	adc	r21, r31
    289a:	50 93 b9 01 	sts	0x01B9, r21
    289e:	40 93 b8 01 	sts	0x01B8, r20
    28a2:	81 93       	st	Z+, r24
    28a4:	91 93       	st	Z+, r25
    28a6:	02 c0       	rjmp	.+4      	; 0x28ac <malloc+0x128>
    28a8:	e0 e0       	ldi	r30, 0x00	; 0
    28aa:	f0 e0       	ldi	r31, 0x00	; 0
    28ac:	cf 01       	movw	r24, r30
    28ae:	df 91       	pop	r29
    28b0:	cf 91       	pop	r28
    28b2:	08 95       	ret

000028b4 <free>:
    28b4:	cf 93       	push	r28
    28b6:	df 93       	push	r29
    28b8:	00 97       	sbiw	r24, 0x00	; 0
    28ba:	09 f4       	brne	.+2      	; 0x28be <free+0xa>
    28bc:	87 c0       	rjmp	.+270    	; 0x29cc <free+0x118>
    28be:	fc 01       	movw	r30, r24
    28c0:	32 97       	sbiw	r30, 0x02	; 2
    28c2:	13 82       	std	Z+3, r1	; 0x03
    28c4:	12 82       	std	Z+2, r1	; 0x02
    28c6:	c0 91 ba 01 	lds	r28, 0x01BA
    28ca:	d0 91 bb 01 	lds	r29, 0x01BB
    28ce:	20 97       	sbiw	r28, 0x00	; 0
    28d0:	81 f4       	brne	.+32     	; 0x28f2 <free+0x3e>
    28d2:	20 81       	ld	r18, Z
    28d4:	31 81       	ldd	r19, Z+1	; 0x01
    28d6:	28 0f       	add	r18, r24
    28d8:	39 1f       	adc	r19, r25
    28da:	80 91 b8 01 	lds	r24, 0x01B8
    28de:	90 91 b9 01 	lds	r25, 0x01B9
    28e2:	82 17       	cp	r24, r18
    28e4:	93 07       	cpc	r25, r19
    28e6:	79 f5       	brne	.+94     	; 0x2946 <free+0x92>
    28e8:	f0 93 b9 01 	sts	0x01B9, r31
    28ec:	e0 93 b8 01 	sts	0x01B8, r30
    28f0:	6d c0       	rjmp	.+218    	; 0x29cc <free+0x118>
    28f2:	de 01       	movw	r26, r28
    28f4:	20 e0       	ldi	r18, 0x00	; 0
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	ae 17       	cp	r26, r30
    28fa:	bf 07       	cpc	r27, r31
    28fc:	50 f4       	brcc	.+20     	; 0x2912 <free+0x5e>
    28fe:	12 96       	adiw	r26, 0x02	; 2
    2900:	4d 91       	ld	r20, X+
    2902:	5c 91       	ld	r21, X
    2904:	13 97       	sbiw	r26, 0x03	; 3
    2906:	9d 01       	movw	r18, r26
    2908:	41 15       	cp	r20, r1
    290a:	51 05       	cpc	r21, r1
    290c:	09 f1       	breq	.+66     	; 0x2950 <free+0x9c>
    290e:	da 01       	movw	r26, r20
    2910:	f3 cf       	rjmp	.-26     	; 0x28f8 <free+0x44>
    2912:	b3 83       	std	Z+3, r27	; 0x03
    2914:	a2 83       	std	Z+2, r26	; 0x02
    2916:	40 81       	ld	r20, Z
    2918:	51 81       	ldd	r21, Z+1	; 0x01
    291a:	84 0f       	add	r24, r20
    291c:	95 1f       	adc	r25, r21
    291e:	8a 17       	cp	r24, r26
    2920:	9b 07       	cpc	r25, r27
    2922:	71 f4       	brne	.+28     	; 0x2940 <free+0x8c>
    2924:	8d 91       	ld	r24, X+
    2926:	9c 91       	ld	r25, X
    2928:	11 97       	sbiw	r26, 0x01	; 1
    292a:	84 0f       	add	r24, r20
    292c:	95 1f       	adc	r25, r21
    292e:	02 96       	adiw	r24, 0x02	; 2
    2930:	91 83       	std	Z+1, r25	; 0x01
    2932:	80 83       	st	Z, r24
    2934:	12 96       	adiw	r26, 0x02	; 2
    2936:	8d 91       	ld	r24, X+
    2938:	9c 91       	ld	r25, X
    293a:	13 97       	sbiw	r26, 0x03	; 3
    293c:	93 83       	std	Z+3, r25	; 0x03
    293e:	82 83       	std	Z+2, r24	; 0x02
    2940:	21 15       	cp	r18, r1
    2942:	31 05       	cpc	r19, r1
    2944:	29 f4       	brne	.+10     	; 0x2950 <free+0x9c>
    2946:	f0 93 bb 01 	sts	0x01BB, r31
    294a:	e0 93 ba 01 	sts	0x01BA, r30
    294e:	3e c0       	rjmp	.+124    	; 0x29cc <free+0x118>
    2950:	d9 01       	movw	r26, r18
    2952:	13 96       	adiw	r26, 0x03	; 3
    2954:	fc 93       	st	X, r31
    2956:	ee 93       	st	-X, r30
    2958:	12 97       	sbiw	r26, 0x02	; 2
    295a:	4d 91       	ld	r20, X+
    295c:	5d 91       	ld	r21, X+
    295e:	a4 0f       	add	r26, r20
    2960:	b5 1f       	adc	r27, r21
    2962:	ea 17       	cp	r30, r26
    2964:	fb 07       	cpc	r31, r27
    2966:	79 f4       	brne	.+30     	; 0x2986 <free+0xd2>
    2968:	80 81       	ld	r24, Z
    296a:	91 81       	ldd	r25, Z+1	; 0x01
    296c:	84 0f       	add	r24, r20
    296e:	95 1f       	adc	r25, r21
    2970:	02 96       	adiw	r24, 0x02	; 2
    2972:	d9 01       	movw	r26, r18
    2974:	11 96       	adiw	r26, 0x01	; 1
    2976:	9c 93       	st	X, r25
    2978:	8e 93       	st	-X, r24
    297a:	82 81       	ldd	r24, Z+2	; 0x02
    297c:	93 81       	ldd	r25, Z+3	; 0x03
    297e:	13 96       	adiw	r26, 0x03	; 3
    2980:	9c 93       	st	X, r25
    2982:	8e 93       	st	-X, r24
    2984:	12 97       	sbiw	r26, 0x02	; 2
    2986:	e0 e0       	ldi	r30, 0x00	; 0
    2988:	f0 e0       	ldi	r31, 0x00	; 0
    298a:	8a 81       	ldd	r24, Y+2	; 0x02
    298c:	9b 81       	ldd	r25, Y+3	; 0x03
    298e:	00 97       	sbiw	r24, 0x00	; 0
    2990:	19 f0       	breq	.+6      	; 0x2998 <free+0xe4>
    2992:	fe 01       	movw	r30, r28
    2994:	ec 01       	movw	r28, r24
    2996:	f9 cf       	rjmp	.-14     	; 0x298a <free+0xd6>
    2998:	ce 01       	movw	r24, r28
    299a:	02 96       	adiw	r24, 0x02	; 2
    299c:	28 81       	ld	r18, Y
    299e:	39 81       	ldd	r19, Y+1	; 0x01
    29a0:	82 0f       	add	r24, r18
    29a2:	93 1f       	adc	r25, r19
    29a4:	20 91 b8 01 	lds	r18, 0x01B8
    29a8:	30 91 b9 01 	lds	r19, 0x01B9
    29ac:	28 17       	cp	r18, r24
    29ae:	39 07       	cpc	r19, r25
    29b0:	69 f4       	brne	.+26     	; 0x29cc <free+0x118>
    29b2:	30 97       	sbiw	r30, 0x00	; 0
    29b4:	29 f4       	brne	.+10     	; 0x29c0 <free+0x10c>
    29b6:	10 92 bb 01 	sts	0x01BB, r1
    29ba:	10 92 ba 01 	sts	0x01BA, r1
    29be:	02 c0       	rjmp	.+4      	; 0x29c4 <free+0x110>
    29c0:	13 82       	std	Z+3, r1	; 0x03
    29c2:	12 82       	std	Z+2, r1	; 0x02
    29c4:	d0 93 b9 01 	sts	0x01B9, r29
    29c8:	c0 93 b8 01 	sts	0x01B8, r28
    29cc:	df 91       	pop	r29
    29ce:	cf 91       	pop	r28
    29d0:	08 95       	ret

000029d2 <__eerd_word_m328p>:
    29d2:	a8 e1       	ldi	r26, 0x18	; 24
    29d4:	b0 e0       	ldi	r27, 0x00	; 0
    29d6:	42 e0       	ldi	r20, 0x02	; 2
    29d8:	50 e0       	ldi	r21, 0x00	; 0
    29da:	0c 94 f1 14 	jmp	0x29e2	; 0x29e2 <__eerd_blraw_m328p>

000029de <__eerd_block_m328p>:
    29de:	dc 01       	movw	r26, r24
    29e0:	cb 01       	movw	r24, r22

000029e2 <__eerd_blraw_m328p>:
    29e2:	fc 01       	movw	r30, r24
    29e4:	f9 99       	sbic	0x1f, 1	; 31
    29e6:	fe cf       	rjmp	.-4      	; 0x29e4 <__eerd_blraw_m328p+0x2>
    29e8:	06 c0       	rjmp	.+12     	; 0x29f6 <__eerd_blraw_m328p+0x14>
    29ea:	f2 bd       	out	0x22, r31	; 34
    29ec:	e1 bd       	out	0x21, r30	; 33
    29ee:	f8 9a       	sbi	0x1f, 0	; 31
    29f0:	31 96       	adiw	r30, 0x01	; 1
    29f2:	00 b4       	in	r0, 0x20	; 32
    29f4:	0d 92       	st	X+, r0
    29f6:	41 50       	subi	r20, 0x01	; 1
    29f8:	50 40       	sbci	r21, 0x00	; 0
    29fa:	b8 f7       	brcc	.-18     	; 0x29ea <__eerd_blraw_m328p+0x8>
    29fc:	08 95       	ret

000029fe <__do_global_dtors>:
    29fe:	10 e0       	ldi	r17, 0x00	; 0
    2a00:	c4 e8       	ldi	r28, 0x84	; 132
    2a02:	d0 e0       	ldi	r29, 0x00	; 0
    2a04:	04 c0       	rjmp	.+8      	; 0x2a0e <__do_global_dtors+0x10>
    2a06:	fe 01       	movw	r30, r28
    2a08:	0e 94 af 13 	call	0x275e	; 0x275e <__tablejump__>
    2a0c:	22 96       	adiw	r28, 0x02	; 2
    2a0e:	c8 38       	cpi	r28, 0x88	; 136
    2a10:	d1 07       	cpc	r29, r17
    2a12:	c9 f7       	brne	.-14     	; 0x2a06 <__do_global_dtors+0x8>
    2a14:	f8 94       	cli

00002a16 <__stop_program>:
    2a16:	ff cf       	rjmp	.-2      	; 0x2a16 <__stop_program>
